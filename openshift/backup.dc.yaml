apiVersion: v1
kind: Template
labels:
  template: database-backup-template
metadata:
  creationTimestamp: null
  name: database-backup-dc
parameters:
- name: NAME
  displayName: Name
  description: A prefix appended to all objects
  required: true
  value: backup
- name: SUFFIX
  displayName: Name Suffix
  description: A suffix appended to all objects
  required: false
- name: VERSION
  required: false
- name: SOURCE_CONTEXT_DIR
  value: prime-database-backup
  required: true
- name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/bcgov/moh-prime
- name: SOURCE_REPOSITORY_REF
  required: true
- name: OC_NAMESPACE
  required: true
  value: dqszvc
- name: OC_APP
  required: true
  value: dev
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      kompose.cmd: kompose convert --provider=openshift --build=deploy-config --build-repo=https://github.com/bcgov/moh-prime.git
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: backup
    name: backup
  spec:
    replicas: 1
    selector:
      io.kompose.service: backup
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.network/primenet: "true"
          io.kompose.service: backup
      spec:
        containers:
          - env:
              - name: PGHOST
                value: postgresql
              - name: PGPASSWORD
                valueFrom:
                  secretKeyRef:
                    key: database-admin-password
                    name: postgresql-secret
              - name: PGDATABASE
                valueFrom:
                  secretKeyRef:
                    key: database-name
                    name: postgresql-secret
              - name: PGUSERNAME
                valueFrom:
                  secretKeyRef:
                    key: database-user
                    name: postgresql-secret
            image: ' '
            name: backup
            ports:
              - containerPort: 5432
            resources: {}
            volumeMounts:
              - mountPath: /opt/backup
                name: backup-data
              - mountPath: /var/lib/postgresql/data
                name: postgresql
              - mountPath: /var/run
                name: backup-run
        restartPolicy: Always
        volumes:
        - name: backup-data
          persistentVolumeClaim:
            claimName: backup-data
        - name: postgresql
          persistentVolumeClaim:
            claimName: postgresql
        - name: backup-run
          emptyDir: {}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - backup
        from:
          kind: ImageStreamTag
          name: backup:latest
      type: ImageChange
  status: {}
