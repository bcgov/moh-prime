---
apiVersion: v1
kind: Template
metadata:
  name: schemaspy-dc
  annotations:
    description: "SchemaSpy deployment template."
    tags: "schema-spy"
parameters:
  - name: SOURCE_REPOSITORY_URL
    required: true
    value: "https://github.com/bcgov/moh-prime"
  - name: SOURCE_REPOSITORY_REF
    required: true
    value: "develop"
  - name: OC_NAMESPACE
    required: true
    value: "dqszvc"
  - name: OC_APP
    required: true
  - name: "CPU_LIMIT"
    displayName: "CPU Limit"
    required: true
    description: "Maximum amount of CPU the container can use."
    value: "1"
  - name: "MEMORY_LIMIT"
    displayName: "Memory Limit"
    required: true
    description: "Maximum amount of memory the container can use."
    value: "1Gi"
  - name: "APPLICATION_DOMAIN"
    displayName: "Application Hostname"
    description: "The exposed hostname that will route to the service, if left blank a value will be defaulted."
    value: ""
    required: false
  - name: "DATABASE_HOST"
    displayName: "The host name (or ip address) for the database server; override to match your environment.  In the case of Oracle databases this must be a <hostname|ipaddress>:<port> pair even if using the default Oracle port; a requirement of the Oracle Thin SchemaSpy process."
    required: true
    value: "postgresql"
  - name: "DATABASE_NAME"
    displayName: "Database Name"
    required: true
    description: "Name of the deployed database (see environment variables in deployed database)."
    value: "postgresql"
  - name: "TAG_NAME"
    displayName: "Environment TAG name"
    description: "The TAG name for this environment, e.g., dev, test, prod"
    value: "${OC_APP}"
    required: true
  - name: "DATABASE_DEPLOYMENT_NAME"
    displayName: "Database Deployment Name"
    description: "The name associated to the database deployment resources.  In particular, this is used to wrie up the credentials associated to the database."
    required: true
    value: "postgresql"
  - name: SOURCE_CONTEXT_DIR
    required: false
objects:
- kind: "Service"
  apiVersion: "v1"
  metadata:
    name: "schemaspy"
    annotations:
      description: "Exposes and load balances the application pods"
  spec:
    ports:
    - name: "8080-tcp"
      protocol: "TCP"
      port: 8080
      targetPort: 8080
    selector:
      name: "schemaspy"
- kind: "Route"
  apiVersion: v1
  metadata:
    name: "schemaspy"
  spec:
    host: "schemaspy-${OC_NAMESPACE}-${OC_APP}.pathfinder.gov.bc.ca"
    tls:
      insecureEdgeTerminationPolicy: "Redirect"
      termination: "edge"
    to:
      kind: "Service"
      name: "schemaspy"
- kind: "DeploymentConfig"
  apiVersion: "v1"
  metadata:
    name: "schemaspy"
    annotations:
      description: "Defines how to deploy the container."
  spec:
    strategy:
      type: "Rolling"
      rollingParams:
        updatePeriodSeconds: "1"
        intervalSeconds: "1"
        timeoutSeconds: "600"
        maxUnavailable: "25%"
        maxSurge: "25%"
    triggers:
    - type: "ConfigChange"
    - type: "ImageChange"
      imageChangeParams:
        automatic: true
        containerNames:
        - "schemaspy"
        from:
          kind: "ImageStreamTag"
          name: "schemaspy:latest"
    replicas: "1"
    selector:
      name: "schemaspy"
    template:
      metadata:
        name: "schemaspy"
        labels:
          name: "schemaspy"
      spec:
        containers:
        - name: "schemaspy"
          image: "docker-registry.default.svc:5000/${OC_NAMESPACE}-${OC_APP}/schemaspy"
          ports:
          - containerPort: "8080"
            protocol: "TCP"
          env:
            - name: "DATABASE_HOST"
              value: "postgresql"
            - name: "DATABASE_NAME"
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: "postgresql-secret"
            - name: "DATABASE_USER"
              valueFrom:
                secretKeyRef:
                  name: "postgresql-secret"
                  key: "database-user"
            - name: "DATABASE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "postgresql-secret"
                  key: "database-admin-password"
          readinessProbe:
            timeoutSeconds: "300"
            initialDelaySeconds: "60"
            httpGet:
              path: "/"
              port: 8080
          livenessProbe:
            timeoutSeconds: "300"
            initialDelaySeconds: "300"
            httpGet:
              path: "/"
              port: 8080
          resources: {}
