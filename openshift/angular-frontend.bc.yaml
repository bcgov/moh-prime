---
kind: Template
apiVersion: v1
metadata:
  name: angular-frontend-bc
  creationTimestamp: 
parameters:
- name: NAME
  displayName: Name
  description: A prefix appended to all objects
  required: true
- name: SUFFIX
  displayName: Name Suffix
  description: A suffix appended to all objects
  required: false
- name: VERSION
  required: true
- name: SOURCE_CONTEXT_DIR
  required: true
- name: SOURCE_REPOSITORY_URL
  required: true
- name: SOURCE_REPOSITORY_REF
  required: true
- name: OC_NAMESPACE
  required: true
- name: OC_APP
  required: true
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: 
    labels:
      io.kompose.service: "${NAME}${SUFFIX}"
    name: "${NAME}${SUFFIX}"
  spec:
    containers:
    - env:
      - name: SUFFIX
        value: "${SUFFIX}"
    tags:
    - annotations: 
      from:
        kind: DockerImage
        name: "${NAME}${SUFFIX}"
      generation: 
      importPolicy: {}
      name: latest
  status:
    dockerImageRepository: ''
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      kompose.cmd: kompose convert --provider=openshift --build=build-config --build-repo=https://github.com/bcgov/moh-prime.git
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: 
    labels:
      io.kompose.service: "${NAME}${SUFFIX}"
    name: "${NAME}${SUFFIX}"
  spec:
    containers:
      env:
      - name: SUFFIX
        value: "${SUFFIX}"
    completionDeadlineSeconds: 6000
    nodeSelector: 
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}${SUFFIX}:latest"
    postCommit: {}
    resources:
      requests:
        cpu: '1'
        memory: 1Gi
      limits:
        cpu: '2'
        memory: 4Gi
    runPolicy: Serial
    source:
      type: Dockerfile
      dockerfile: |-
        FROM node:10.16 as build-deps
        ENV NODE_ROOT /usr/src/app
        RUN mkdir -p /usr/src/app 
        WORKDIR /usr/src/app
        COPY . .
        RUN npm install @angular/cli -g --silent && \ 
            npm install && \
            ng build --prod && \
            echo "NPM packages installed..."
        FROM nginx:1.15-alpine
        COPY --from=build-deps /usr/src/app/dist/angular-frontend /usr/share/nginx/html
        RUN rm -f /etc/nginx/conf.d/default.conf 
        COPY --from=build-deps /usr/src/app/nginx.template.conf /etc/nginx/
        COPY --from=build-deps /usr/src/app/entrypoint.sh /home
        EXPOSE 8080
        RUN mkdir -p /var/cache/nginx && \ 
            mkdir -p /var/cache/nginx/client_temp && \ 
            chown -R 1001:1001 /var/cache/nginx && \ 
            touch /etc/nginx/conf.d/default.conf && \
            chown -R 1001:1001 /etc/nginx/conf.d/ && \
            chmod 777 /etc/nginx/conf.d/default.conf && \
            chmod -R 777 /var/cache/nginx && \ 
            chmod -R 777 /var/run && \
            chmod +x /home/entrypoint.sh && \
            chmod 777 /home/entrypoint.sh && \
            echo "Build completed."
        ENTRYPOINT /home/entrypoint.sh
      contextDir: "${SOURCE_CONTEXT_DIR}"
      git:
        ref: "${SOURCE_REPOSITORY_REF}"
        uri: "${SOURCE_REPOSITORY_URL}"
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    triggers:
    - type: ConfigChange
    - type: ImageChange
  status:
    lastVersion: 0
