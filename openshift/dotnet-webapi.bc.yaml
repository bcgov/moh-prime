---
apiVersion: v1
kind: Template
metadata:
  name: dotnet-webapi-bc
  creationTimestamp: null
  description: >-
    Build configuration template for PRIME's .NET web API.
parameters:
  - name: NAME
    displayName: Name
    description: A prefix appended to all objects
    required: true
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: false
  - name: VERSION
    required: true
  - name: SOURCE_CONTEXT_DIR
    required: true
  - name: SOURCE_REPOSITORY_URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    required: true
  - name: OC_NAMESPACE
    required: true
  - name: OC_APP
    required: true
  - name: ASPNETCORE_ENVIRONMENT
    required: true
    value: Release
  - name: VANITY_URL
    required: true
    value: 'pharmanetenrolment.gov.bc.ca'
  - name: HTTP_SCHEMA
    required: true
    value: 'https'
  - name: HTTP_PORT
    required: true
    value: '8443'
  - name: TERMINATION_TYPE
    required: true
    value: 'passthrough'
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: "${NAME}${SUFFIX}"
      name: "${NAME}${SUFFIX}"
    spec:
      sourceStrategy:
        env:
          # Explicit environment variables
          - name: OC_APP
            value: "${OC_APP}"
          - name: SUFFIX
            value: "${SUFFIX}"
          - name: PATH
            value: "/opt/rh/rh-dotnet22/root/usr/lib64/dotnet:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
          - name: ASPNETCORE_ENVIRONMENT
            value: ${ASPNETCORE_ENVIRONMENT}
          - name: ASPNETCORE_HTTPS_PORT
            value: "5001"
          - name: ASPNETCORE_URLS
            value: "http://+:8080"

          # .NET database connection environment variables
          - name: DB_HOST
            value: "postgresql${SUFFIX}"
          - name: DB_CONNECTION_STRING
            value: DB_CONNECTION_STRING "host=$DB_HOST;port=5432;database=${POSTGRESQL_DATABASE};username=${POSTGRESQL_USER};password=${POSTGRESQL_ADMIN_PASSWORD}"

          # JWT environment variable
          - name: JWT_WELL_KNOWN_CONFIG
            valueFrom:
              secretKeyRef:
                key: JWT_WELL_KNOWN_CONFIG
                name: "keycloak"

          # PostgreSQL related environment variables
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: "postgresql-secret"
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: "postgresql-secret"
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: "postgresql-secret"
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: "postgresql-secret"
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: "${NAME}${SUFFIX}"
          generation: null
          importPolicy: {}
          name: latest
    resources:
      requests:
        cpu: '1'
        memory: 1Gi
      limits:
        cpu: '2'
        memory: 4Gi
    runPolicy: Serial
    status:
      dockerImageRepository: ""

  # .NET Web API - Build Configuration
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      annotations:
        kompose.cmd: >-
          kompose convert --provider=openshift --build=build-config
          --build-repo=https://github.com/bcgov/moh-prime.git
        kompose.version: 1.18.0 (06a2e56)${SUFFIX}
      labels:
        io.kompose.service: "${NAME}${SUFFIX}"
      name: "${NAME}${SUFFIX}"
    spec:
      completionDeadlineSeconds: 6000
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: "${NAME}${SUFFIX}:latest"
      postCommit: {}
      resources:
        requests:
          cpu: "2"
          memory: 4Gi
        limits:
          cpu: "4"
          memory: 8Gi
      runPolicy: Serial
      source:
        contextDir: "${SOURCE_CONTEXT_DIR}"
        git:
          ref: "${SOURCE_REPOSITORY_REF}"
          uri: "${SOURCE_REPOSITORY_URL}"
        type: Git
      strategy:
        dockerStrategy:
          noCache: true
          dockerfilePath: openshift.dockerfile
          env:
          # PostgreSQL related environment variables
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: "postgresql-secret"
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: "postgresql-secret"
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: "postgresql-secret"
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: "postgresql-secret"
        type: Docker
      triggers:
        - type: ConfigChange
        - type: ImageChange
    status:
      lastVersion: 0
