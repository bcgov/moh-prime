kind: Template
apiVersion: v1
metadata:
  name: dotnet-webapi-bc
  creationTimestamp: null
parameters:
  - name: NAME
    displayName: Name
    description: A prefix appended to all objects
    required: true
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: false
  - name: VERSION
    required: true
  - name: SOURCE_CONTEXT_DIR
    required: true
  - name: SOURCE_REPOSITORY_URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    required: true
  - name: OC_NAMESPACE
    required: true
  - name: OC_APP
    required: true
  - name: ASPNETCORE_ENVIRONMENT
    required: true
    value: Development
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: '${NAME}${SUFFIX}'
      name: '${NAME}${SUFFIX}'
    spec:
      strategy:
        sourceStrategy:
          env:
            - name: OC_APP
              value: '${OC_APP}'
            - name: SUFFIX
              value: '${SUFFIX}'
            - name: PATH
              value: '/opt/rh/rh-dotnet22/root/usr/lib64/dotnet:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
            - name: ASPNETCORE_ENVIRONMENT
              value: ${ASPNETCORE_ENVIRONMENT}
            - name: ASPNETCORE_HTTPS_PORT
              value: '5001'
            - name: ASPNETCORE_URLS
              value: 'http://+:8080'
            - name: JWT_SIGNING_KEY
              value: SdqlA0Y5e6HMAK1wm6iHHHz2u37XGtlo
            - name: JWT_ADMIN_CLIENT
              value: 'prime-admin-${OC_APP}'
            - name: JWT_USER_CLIENT
              value: 'prime-application-${OC_APP}'
            - name: JWT_AUDIENCE
              value: 'prime-web-api'
            - name: JWT_WELL_KNOWN_CONFIG 
              value: 'https://sso-${OC_APP}.pathfinder.gov.bc.ca/auth/realms/v4mbqqas/.well-known/openid-configuration'
            - name: DB_HOST
              value: 'postgresql${SUFFIX}'
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: '${NAME}${SUFFIX}-secret'
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: '${NAME}${SUFFIX}-secret'
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-admin-password
                  name: '${NAME}${SUFFIX}-secret'
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: '${NAME}${SUFFIX}-secret'
      tags:
        - annotations: null
          from:
            kind: DockerImage
            name: '${NAME}${SUFFIX}'
          generation: null
          importPolicy: {}
          name: latest
    status:
      dockerImageRepository: ''
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      annotations:
        kompose.cmd: >-
          kompose convert --provider=openshift --build=build-config
          --build-repo=https://github.com/bcgov/moh-prime.git
        kompose.version: 1.18.0 (06a2e56)
      creationTimestamp: null
      labels:
        io.kompose.service: '${NAME}${SUFFIX}'
      name: '${NAME}${SUFFIX}'
    spec:
      completionDeadlineSeconds: 6000
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: '${NAME}${SUFFIX}:latest'
      postCommit: {}
      resources:
        requests:
          cpu: '2'
          memory: 4Gi
        limits:
          cpu: '4'
          memory: 8Gi
      runPolicy: Serial
      source:
        contextDir: '${SOURCE_CONTEXT_DIR}'
        git:
          ref: '${SOURCE_REPOSITORY_REF}'
          uri: '${SOURCE_REPOSITORY_URL}'
        type: Git
      strategy:
        dockerStrategy: 
          dockerfilePath: openshift.dockerfile
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: 'postgresql${SUFFIX}-secret'
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: 'postgresql${SUFFIX}-secret'
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: 'postgresql${SUFFIX}-secret'
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: 'postgresql${SUFFIX}-secret'
        type: Docker
      triggers:
        - type: ConfigChange
        - type: ImageChange
    status:
      lastVersion: 0
