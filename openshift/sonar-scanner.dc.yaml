kind: Template
apiVersion: v1
metadata:
  name: sonar-scanner-dc
  creationTimestamp: null
parameters:
  - name: NAME
    displayName: Name
    description: A prefix appended to all objects
    required: true
  - name: SUFFIX
    displayName: Name Suffix
    description: A suffix appended to all objects
    required: false
  - name: VERSION
    required: true
  - name: SOURCE_CONTEXT_DIR
    required: true
  - name: SOURCE_REPOSITORY_URL
    required: true
    value: 'https://github.com/bcgov/moh-prime'
  - name: SOURCE_REPOSITORY_REF
    required: true
  - name: OC_NAMESPACE
    required: true
  - name: OC_APP
    required: true
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: '${NAME}${SUFFIX}'
      name: '${NAME}${SUFFIX}'
    spec:
      completionDeadlineSeconds: 1200
      replicas: 1
      selector:
        io.kompose.service: '${NAME}${SUFFIX}'
      strategy:
      resources:
        requests:
          cpu: 300m
          memory: 512Mi
        limits:
          cpu: '1'
          memory: 1024Mi
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.service: '${NAME}${SUFFIX}'
        spec:
          containers:
          - env:
          - name: SUFFIX
            value: "${SUFFIX}"
          - name: OC_APP
            value: ${OC_APP}
          - name: BRANCH_NAME
            value: "${SOURCE_REPOSITORY_REF}"
          image: ' '
          name: sonar-scanner
          resources: {}
          restartPolicy: Always
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - sonar-scanner
          from:
            kind: ImageStreamTag
            name: sonar-runner:latest
        type: ImageChange
      status: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: '${NAME}${SUFFIX}'
      name: '${NAME}${SUFFIX}'
    spec:
      clusterIP: None
      ports:
      - name: headless
        port: 55555
        targetPort: 0
      selector:
        io.kompose.service: '${NAME}${SUFFIX}'
    status:
      loadBalancer: {}
