# server {
#         listen 443 ssl;

#         ssl on;
#         ssl_certificate C:\Users\177092\Source\Repos\moh-prime\prime-dotnet-webapi-tests\Utils\Auth\server.crt;
#         ssl_certificate_key C:\Users\177092\Source\Repos\moh-prime\prime-dotnet-webapi-tests\Utils\Auth\server.key;

#         # location / {
#         #          proxy_pass https://www.backendsite.com;
#         #          proxy_set_header X-Forwarded-For $http_x_forwarded_for;
#         # }
# }

worker_processes auto;

events {
    worker_connections  1024;
}

http {

    # simple reverse-proxy
    # server {
    #     listen       8088;

    #     location / {
    #     proxy_pass      http://127.0.0.1:5000;
    #     }
    # }

    server {
       listen       443 ssl;
       server_name  localhost;

       ssl_certificate      server.crt;
       ssl_certificate_key  server.key;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           proxy_pass                    https://127.0.0.1:5001;
           # https://serverfault.com/questions/341023/nginx-as-reverse-proxy-with-upstream-ssl
           # https://docs.nginx.com/nginx/admin-guide/security-controls/securing-http-traffic-upstream/
           proxy_ssl_trusted_certificate backend-api.pem;
           proxy_ssl_verify              off;
       }
    }
}

