{{ $release := .Release.Name }}
{{ $ocEnv := regexFind "([^-]*$)" .Release.Namespace }}
{{ $domain := .Values.global.vanityURL }}
{{ $isPR := hasPrefix "pr-" .Release.Name }}
## Derived release name
{{ $drn := ternary $release $ocEnv $isPR }}
{{ $isProd := contains "prod" $ocEnv }}
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prime-docman.fullname" . }}
  labels:
    {{- include "prime-docman.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "prime-docman.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prime-docman.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prime-docman.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.registry }}/{{ .Values.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 6001
              protocol: TCP
            - name: stats
              containerPort: 9191
              protocol: TCP
          startupProbe:
            httpGet:
              path: /healthcheck
              port: 6001
            failureThreshold: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 6001
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: CACHE_REDIS_HOST
              value: "{{ $drn }}-redis{{ ternary "-headless" "" $isPR}}"
            - name: CACHE_REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: database-password
            - name: CACHE_REDIS_PORT
              value: "6379"
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: database-cm
                  key: database-host
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ ternary $ocEnv $release $isPR }}-patroni-secret
                  key: app-db-username
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ ternary $ocEnv $release $isPR }}-patroni-secret
                  key: app-db-password
            - name: PGDATABASE
            {{- if $isPR }}
              value: prime-{{ $drn }}
            {{ else }}
              valueFrom:
                secretKeyRef:
                  name: {{ ternary $ocEnv $release $isPR }}-patroni-secret
                  key: app-db-name
            {{- end }}
            - name: DOCUMENT_MANAGER_URL
              value: "https://{{ if $isProd }}{{else}}{{ $drn }}.{{end}}{{ $domain }}/api/docman/"
            - name: JWT_OIDC_WELL_KNOWN_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: keycloak
                  key: JWT_WELL_KNOWN_CONFIG
            - name: SQLALCHEMY_DATABASE_URI
              value: "postgres://$(PGUSER):$(PGPASSWORD)@$(PGHOST):5432/$(PGDATABASE)"
          {{- range $name, $value := .Values.envVars }}
          {{- if not (empty $value) }}
            - name: {{ $name | quote }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: document-manager
          volumeMounts:
            - mountPath: /app/
              name: docman-files
      volumes:
        - name: docman-files
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "prime-docman.fullname" . }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
