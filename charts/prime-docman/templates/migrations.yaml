{{- if .Values.migrations.enabled }}
{{ $release := .Release.Name }}
{{ $ocEnv := regexFind "([^-]*$)" .Release.Namespace }}
{{ $isPR := hasPrefix "pr-" .Release.Name }}
## Derived release name
{{ $drn := ternary $release $ocEnv $isPR }}
#
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "prime-docman.fullname" . }}-migrations
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "10"
  labels:
    {{- include "prime-docman.labels" . | nindent 4 }}
spec:
  template:
    spec:
      containers:
      - name: migrations
        image: {{ .Values.global.image.registry }}/{{ .Values.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        command:
            # Script force waits migration pod execution until PostgreSQL is verified to
            # be open to query connections.
          - /opt/app-root/src/app.sh
        args:
          - migrate
        env:
          - name: CACHE_REDIS_HOST
            value: "{{ $drn }}-redis{{ ternary "-headless" "" $isPR}}"
          - name: CACHE_REDIS_PASS
            valueFrom:
              secretKeyRef:
                name: redis
                key: database-password
          - name: CACHE_REDIS_PORT
            value: "6379"
          - name: PGHOST
            valueFrom:
              configMapKeyRef:
                name: database-cm
                key: database-host
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                name: {{ $ocEnv }}-patroni-secret
                key: app-db-username
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $ocEnv }}-patroni-secret
                key: app-db-password
          - name: PGDATABASE
            {{- if $isPR }}
            value: prime-{{ $drn }}
            {{ else }}
            valueFrom:
              secretKeyRef:
                name: {{ $ocEnv }}-patroni-secret
                key: app-db-name
            {{- end }}
          - name: SQLALCHEMY_DATABASE_URI
            value: "postgres://$(PGUSER):$(PGPASSWORD)@$(PGHOST):5432/$(PGDATABASE)"
        envFrom:
          - configMapRef:
              name: document-manager
      restartPolicy: Never
  backoffLimit: 3
{{- end }}