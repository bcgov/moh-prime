pipeline {
    agent none
    options {
        disableResume()
    }
    stages {
        stage('Promote Master to Test') {
        options {
            timeout(time: 5, unit: 'MINUTES')   // timeout on this stage
        }
            when { expression { ( GIT_BRANCH == 'master' ) } }
            agent { label 'master' }
            steps {
                    echo "Test (DEV) ..."
                    sh "./player.sh build database test"
                    sh "./player.sh build api test"
                    sh "./player.sh build frontend test"
                    sh "./player.sh deploy database test"
                    sh "./player.sh deploy api test"
                    sh "./player.sh deploy frontend test"
            }
        }
        stage('Promote Master to Production') {
        options {
            timeout(time: 5, unit: 'MINUTES')   // timeout on this stage
        }
            when { expression { ( GIT_BRANCH == 'master' ) } }
            agent { label 'master' }
            steps {
                script {
                        def IS_APPROVED = input(
                            id: 'IS_APPROVED', message: "Deploy to Production?", ok: "yes", parameters: [
                                string(name: 'IS_APPROVED', defaultValue: 'yes', description: 'Deploy to Production?')
                                ])
                        if (IS_APPROVED != 'yes') {
                            currentBuild.result = "SUCCESS"
                            echo "User cancelled deployment"
                        }
                    echo "Deploy to Production..."
                    sh "./player.sh build database prod"
                    sh "./player.sh build api prod"
                    sh "./player.sh build frontend prod"
                    sh "./player.sh deploy database prod"
                    sh "./player.sh deploy api prod"
                    sh "./player.sh deploy frontend prod"
                }
            }
        }
    }
}
