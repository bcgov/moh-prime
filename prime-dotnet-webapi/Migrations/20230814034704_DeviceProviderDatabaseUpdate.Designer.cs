// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Prime;

namespace Prime.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230814034704_DeviceProviderDatabaseUpdate")]
    partial class DeviceProviderDatabaseUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Prime.Models.AccessAgreementNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("NoteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("EnrolleeId")
                        .IsUnique();

                    b.ToTable("AccessAgreementNote");
                });

            modelBuilder.Entity("Prime.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Postal")
                        .HasColumnType("text");

                    b.Property<string>("ProvinceCode")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("Street2")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("ProvinceCode");

                    b.ToTable("Address");

                    b.HasDiscriminator<int>("AddressType");
                });

            modelBuilder.Entity("Prime.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IDIR")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("Prime.Models.Agreement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset?>("AcceptedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AgreementVersionId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int?>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ExpiryReason")
                        .HasColumnType("integer");

                    b.Property<int?>("LimitsConditionsClauseId")
                        .HasColumnType("integer");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PartyId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AgreementVersionId");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("LimitsConditionsClauseId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PartyId");

                    b.ToTable("Agreement");

                    b.HasCheckConstraint("CHK_Agreement_OrganizationHasSigningAuth", "((\"OrganizationId\" is null) or (\"PartyId\" is not null))");

                    b.HasCheckConstraint("CHK_Agreement_EitherPartyOrEnrollee", "( CASE WHEN \"EnrolleeId\" IS NULL THEN 0 ELSE 1 END\n                     + CASE WHEN \"PartyId\" IS NULL THEN 0 ELSE 1 END) = 1");
                });

            modelBuilder.Entity("Prime.Models.AgreementVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AgreementType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("EffectiveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("AgreementVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgreementType = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET TERMS OF ACCESS FOR ON-BEHALF-OF USER</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      On Behalf of User Access\n    </p>\n\n    <p class=\"bold\">\n      You represent and warrant to the Province that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\n        support the Practitioner’s delivery of Direct Patient Care;\n      </li>\n      <li>\n        you are directly supervised by a Practitioner who has been granted access to PharmaNet by the Province; and\n      </li>\n      <li>\n        all information provided by you in connection with your application for PharmaNet access, including all\n        information submitted through PRIME, is true and correct.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      Definitions\n    </p>\n\n    <p class=\"bold\">\n      In these terms, capitalized terms will have the following meanings:\n    </p>\n\n    <ul class=\"list-unstyled\">\n      <li>\n        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\n      </li>\n      <li>\n        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n        following website (or such other website as may be specified by the Province from time to time for this\n        purpose):\n\n        <br><br>\n\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n      </li>\n      <li>\n        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n        Regulation.\n      </li>\n      <li>\n        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record or\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\n        PharmaNet by anyone.\n      </li>\n      <li>\n        <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n      </li>\n      <li>\n        <strong>“Practitioner”</strong> means a health professional regulated under the Health Professions Act who\n        supervises your access and use of PharmaNet and who has been granted access to PharmaNet by the Province.\n      </li>\n      <li>\n        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for, and\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\n      </li>\n      <li>\n        <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n        Minister of Health.\n      </li>\n    </ul>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      Terms of Access to PharmaNet\n    </p>\n\n    <p class=\"bold\">\n      You must:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by the Practitioner to\n        the individuals whose PharmaNet Data you are accessing;\n      </li>\n      <li>\n        only access PharmaNet as permitted by law and directed by the Practitioner;\n      </li>\n      <li>\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\n        strict confidence;\n      </li>\n      <li>\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\n      </li>\n      <li>\n        complete all training required by the Practice’s PharmaNet software vendor and the Province before accessing\n        PharmaNet;\n      </li>\n      <li>\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\n        accessed or used inappropriately by any person.\n      </li>\n    </ol>\n\n    <p class=\"bold\">\n      You must not:\n    </p>\n\n    <ol type=\"a\"\n        start=\"7\">\n      <li>\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and directed\n        by the Practitioner;\n      </li>\n      <li>\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n      </li>\n      <li>\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n      </li>\n      <li>\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n      </li>\n      <li>\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\n        such as altering information or submitting false information;\n      </li>\n      <li>\n        test the security related to PharmaNet;\n      </li>\n      <li>\n        attempt to access PharmaNet from any location other than the approved Practice site of the Practitioner,\n        including by VPN or other remote access technology, unless that VPN or remote access technology has first been\n        approved by the Province in writing for use at the Practice.\n      </li>\n    </ol>\n\n    <p>\n      Your access to PharmaNet and use of PharmaNet Data are governed by the Pharmaceutical Services Act and you must\n      comply with all your duties under that Act.\n    </p>\n\n    <p>\n      The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\n      either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      How to Notify the Province\n    </p>\n\n    <p>\n      Notice to the Province may be sent in writing to:\n    </p>\n\n    <address>\n      Director, Information and PharmaNet Development<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n      <br>\n\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n    </address>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      Province may modify these terms\n    </p>\n\n    <p>\n      The Province may amend these terms, including this section, at any time in its sole discretion:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\n        Province, if any; or\n      </li>\n      <li>\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\n        PharmaCare Newsletter containing the notice is first published.\n      </li>\n    </ol>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n\n    <p>\n      Any written notice to you under (i) above will be in writing and delivered by the Province to you using any of the\n      contact mechanisms identified by you in PRIME, including by mail to a specified postal address, email to a\n      specified email address or text message to a specified cell phone number. You may be required to click a URL link\n      or log into PRIME to receive the contents of any such notice.\n    </p>\n\n  </li>\n  {$lcPlaceholder}\n  <li>\n\n    <p class=\"bold underline\">\n      Governing Law\n    </p>\n\n    <p>\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n      Columbia and the laws of Canada applicable therein.\n    </p>\n\n    <p>\n      Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\n      British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\n      authority of that statute or regulation.\n    </p>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            AgreementType = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET REGULATED USER TERMS OF ACCESS</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to\n      ensure that appropriate measures are in place to protect the confidentiality of all such information. All access\n      to and use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the Pharmaceutical Services Act.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended\n              from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the Information Management Regulation, B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; and (ii) is authorized by you to access PharmaNet on your\n            behalf; and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or a On-Behalf-of User that was obtained through\n            your or a On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the Health\n            Professions Act and identified by you through PRIME.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the Freedom of Information and Protection of Privacy Act, the\n            Personal Information Protection Act, and any other statutory or legal obligations of privacy owed by you or\n            the Province, whether arising under statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the Information Management Regulation.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further limits\n            or conditions communicated to you in writing by the Province, unless the conflicting provision expressly\n            states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act, including the Information Management Regulation and sections 24, 25 and 29 of\n        the Act, apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in section 5(b) below and otherwise in this Agreement. The\n        Province may from time to time, at its discretion, amend or change the scope of your access privileges to\n        PharmaNet as privacy, security, business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Limits and Conditions of Access.</strong> The following limits and conditions apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your licence permits you to\n            deliver Direct Patient Care requiring access to PharmaNet;\n          </li>\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, at a\n            location approved by the Province, and using only the technologies and applications approved by the\n            Province. For greater certainty, you must not access PharmaNet using a VPN or similar remote access\n            technology to an approved location, unless that VPN or remote access technology has first been approved by\n            the Province in writing for use at the Practice;\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as required\n            by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Practice to prevent viewing of PharmaNet\n            Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and prohibit\n            sharing or other multiple use of your access credential, or an On-Behalf-of User’s access credential, for\n            access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\n            PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards - Business Rules.</strong> You will comply with, and will ensure On-Behalf-of\n        Users comply with, the business rules specified in the Conformance Standards when accessing and recording\n        information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with\n        Professional College requirements and in connection with your provision of Direct Patient Care and otherwise is\n        in compliance with the Conformance Standards. You will not modify any records retained in accordance with this\n        section other than as may be expressly authorized in the Conformance Standards. For clarity, you may annotate a\n        discrete record provided that the discrete record is not itself modified other than as expressly authorized in\n        the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the Information Management Regulation, the\n        Province may also terminate this Agreement at any time thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the Information\n        Management Regulation.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective,\n          must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content\n        of any such notice.\n      </li>\n      <li>\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent\n        by mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays)\n        after the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  {$lcPlaceholder}\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Entire Agreement.</strong> This Agreement constitutes the entire agreement between the parties with\n          respect to the subject matter of this agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(iv) (v), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n            notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by\n            the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            AgreementType = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -8, 0, 0, 0)),
                            Text = "<h1>PHARMANET TERMS OF ACCESS FOR ON-BEHALF-OF USER</h1>\n\n<p class=\"bold\">\n    By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n    <li>\n\n        <p class=\"bold underline\">\n            On Behalf of User Access\n        </p>\n\n        <p class=\"bold\">\n            You represent and warrant to the Province that:\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet\n                Data) to\n                support the Practitioner’s delivery of Direct Patient Care;\n            </li>\n            <li>\n                you are directly supervised by a Practitioner who has been granted access to PharmaNet by the Province;\n                and\n            </li>\n            <li>\n                all information provided by you in connection with your application for PharmaNet access, including all\n                information submitted through PRIME, is true and correct.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            Definitions\n        </p>\n\n        <p class=\"bold\">\n            In these terms, capitalized terms will have the following meanings:\n        </p>\n\n        <ul class=\"list-unstyled\">\n            <li>\n                <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of\n                health\n                services to an individual to whom a Practitioner provides direct patient care in the context of their\n                Practice.\n            </li>\n            <li>\n                <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on\n                the\n                following website (or such other website as may be specified by the Province from time to time for this\n                purpose):\n\n                <br><br>\n\n                <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n            </li>\n            <li>\n                <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n                Regulation.\n            </li>\n            <li>\n                <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any\n                record or\n                information in the custody, control or possession of you or a Practitioner that was obtained through\n                access to\n                PharmaNet by anyone.\n            </li>\n            <li>\n                <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n            </li>\n            <li>\n                <strong>“Practitioner”</strong> means a health professional regulated under the Health Professions Act\n                who\n                supervises your access and use of PharmaNet and who has been granted access to PharmaNet by the\n                Province.\n            </li>\n            <li>\n                <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply\n                for, and\n                manage, their access to PharmaNet, and through which users are granted access by the Province.\n            </li>\n            <li>\n                <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by\n                the\n                Minister of Health.\n            </li>\n        </ul>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            Terms of Access to PharmaNet\n        </p>\n\n        <p class=\"bold\">\n            You must:\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by the\n                Practitioner to\n                the individuals whose PharmaNet Data you are accessing;\n            </li>\n            <li>\n                only access PharmaNet as permitted by law and directed by the Practitioner;\n            </li>\n            <li>\n                maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner,\n                in\n                strict confidence;\n            </li>\n            <li>\n                maintain the security of PharmaNet, and any applications, connections, or networks used to access\n                PharmaNet;\n            </li>\n            <li>\n                complete all training required by the Practice’s PharmaNet software vendor and the Province before\n                accessing\n                PharmaNet;\n            </li>\n            <li>\n                notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has\n                been\n                accessed or used inappropriately by any person.\n            </li>\n        </ol>\n\n        <p class=\"bold\">\n            You must not:\n        </p>\n\n        <ol type=\"a\"\n            start=\"7\">\n            <li>\n                disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and\n                directed\n                by the Practitioner;\n            </li>\n            <li>\n                permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n            </li>\n            <li>\n                reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n            </li>\n            <li>\n                use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n            </li>\n            <li>\n                take any action that might compromise the integrity of PharmaNet, its information, or the provincial\n                drug plan,\n                such as altering information or submitting false information;\n            </li>\n            <li>\n                test the security related to PharmaNet;\n            </li>\n            <li>\n                you must not attempt to access PharmaNet from any location other than the approved Practice site of the\n                Practitioner, including by VPN or other remote access technology,\n                unless that VPN or remote access technology has first been approved by the Province in writing for use\n                at the Practice.\n                You must be physically located in BC whenever you use approved VPN or other approved remote access\n                technology to access PharmaNet.\n            </li>\n        </ol>\n\n        <p>\n            Your access to PharmaNet and use of PharmaNet Data are governed by the Pharmaceutical Services Act and you\n            must\n            comply with all your duties under that Act.\n        </p>\n\n        <p>\n            The Province may, in writing and from time to time, set further limits and conditions in respect of\n            PharmaNet,\n            either for you or for the Practitioner(s), and that you must comply with any such further limits and\n            conditions.\n        </p>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            How to Notify the Province\n        </p>\n\n        <p>\n            Notice to the Province may be sent in writing to:\n        </p>\n\n        <address>\n            Director, Information and PharmaNet Development<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n            <br>\n\n            <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            Province may modify these terms\n        </p>\n\n        <p>\n            The Province may amend these terms, including this section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n            <li>\n                by written notice to you, in which case the amendment will become effective upon the later of (A) the\n                date\n                notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n                by the\n                Province, if any; or\n            </li>\n            <li>\n                by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n                specify\n                the effective date of the amendment, which date will be at least thirty (30) days after the date that\n                the\n                PharmaCare Newsletter containing the notice is first published.\n            </li>\n        </ol>\n\n        <p>\n            If you do not agree with any amendment for which notice has been provided by the Province in accordance with\n            (i)\n            or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n            PharmaNet.\n        </p>\n\n        <p>\n            Any written notice to you under (i) above will be in writing and delivered by the Province to you using any\n            of the\n            contact mechanisms identified by you in PRIME, including by mail to a specified postal address, email to a\n            specified email address or text message to a specified cell phone number. You may be required to click a URL\n            link\n            or log into PRIME to receive the contents of any such notice.\n        </p>\n\n    </li>\n    {$lcPlaceholder}\n    <li>\n\n        <p class=\"bold underline\">\n            Governing Law\n        </p>\n\n        <p>\n            These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n            Columbia and the laws of Canada applicable therein.\n        </p>\n\n        <p>\n            Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation\n            of\n            British Columbia of that name, as amended or replaced from time to time, and includes any enactment made\n            under the\n            authority of that statute or regulation.\n        </p>\n\n    </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            AgreementType = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -8, 0, 0, 0)),
                            Text = "<h1>PHARMANET REGULATED USER TERMS OF ACCESS</h1>\n\n<p class=\"bold\">\n    By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n    <li>\n\n        <p class=\"bold underline\">\n            BACKGROUND\n        </p>\n\n        <p>\n            The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\n            B.C.\n            pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered\n            into\n            PharmaNet.\n        </p>\n\n        <p>\n            The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet\n            is to\n            enhance patient care by providing timely and relevant information to persons involved in the provision of\n            direct\n            patient care.\n        </p>\n\n        <p class=\"bold underline\">\n            PharmaNet contains highly sensitive confidential information, including Personal Information and the\n            proprietary\n            and confidential information of third-party licensors to the Province, and it is in the public interest to\n            ensure that appropriate measures are in place to protect the confidentiality of all such information. All\n            access\n            to and use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n        </p>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            INTERPRETATION\n        </p>\n\n        <ol type=\"a\">\n            <li>\n\n                <p>\n                    <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will\n                    have the\n                    meanings given below:\n                </p>\n\n                <ul class=\"list-unstyled\">\n                    <li>\n                        <strong>“Act”</strong> means the Pharmaceutical Services Act.\n                    </li>\n                    <li>\n                        <strong>“Approved SSO”</strong> means a software support organization approved by the Province\n                        that provides\n                        you with the information technology software and/or services through which you and On-Behalf-of\n                        Users access\n                        PharmaNet.\n                    </li>\n                    <li>\n\n                        <p>\n                            <strong>“Conformance Standards”</strong> means the following documents published by the\n                            Province, as\n                            amended\n                            from time to time:\n                        </p>\n\n                        <ol type=\"i\">\n                            <li>\n                                PharmaNet Professional and Software Conformance Standards; and\n                            </li>\n                            <li>\n                                Office of the Chief Information Officer: “Submission for Technical Security Standard and\n                                High Level\n                                Architecture for Wireless Local Area Network Connectivity”.\n                            </li>\n                        </ol>\n\n                    </li>\n                    <li>\n                        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision\n                        of health\n                        services to an individual to whom you provide direct patient care in the context of your\n                        Practice.\n                    </li>\n                    <li>\n                        <strong>“Information Management Regulation”</strong> means the Information Management\n                        Regulation, B.C. Reg.\n                        74/2015.\n                    </li>\n                    <li>\n                        <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to\n                        PharmaNet to\n                        carry out duties in relation to your Practice; and (ii) is authorized by you to access PharmaNet\n                        on your\n                        behalf; and (iii) has been granted access to PharmaNet by the Province.\n                    </li>\n                    <li>\n                        <strong>“Personal Information”</strong> means all recorded information that is about an\n                        identifiable\n                        individual or is defined as, or deemed to be, “personal information” or “personal health\n                        information”\n                        pursuant to any Privacy Laws.\n                    </li>\n                    <li>\n                        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the\n                        Province on the\n                        following website (or such other website as may be specified by the Province from time to time\n                        for this\n                        purpose):\n\n                        <br><br>\n\n                        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n                    </li>\n                    <li>\n                        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information\n                        Management\n                        Regulation.\n                    </li>\n                    <li>\n                        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and\n                        any record\n                        or information in the custody, control or possession of you or a On-Behalf-of User that was\n                        obtained through\n                        your or a On-Behalf-of User’s access to PharmaNet.\n                    </li>\n                    <li>\n                        <strong>“Practice”</strong> means your practice of the health profession regulated under the\n                        Health\n                        Professions Act and identified by you through PRIME.\n                    </li>\n                    <li>\n                        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to\n                        apply for,\n                        and manage, their access to PharmaNet, and through which users are granted access by the\n                        Province.\n                    </li>\n                    <li>\n                        <strong>“Privacy Laws”</strong> means the Act, the Freedom of Information and Protection of\n                        Privacy Act, the\n                        Personal Information Protection Act, and any other statutory or legal obligations of privacy\n                        owed by you or\n                        the Province, whether arising under statute, by contract or at common law.\n                    </li>\n                    <li>\n                        <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as\n                        represented by the\n                        Minister of Health.\n                    </li>\n                    <li>\n                        <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n                    </li>\n                    <li>\n\n                        <p>\n                            <strong>“Unauthorized Person”</strong> means any person other than:\n                        </p>\n\n                        <ol type=\"i\">\n                            <li>\n                                you,\n                            </li>\n                            <li>\n                                an On-Behalf-of User, or\n                            </li>\n                            <li>\n                                a representative of an Approved SSO that is accessing PharmaNet for technical support\n                                purposes in\n                                accordance with section 6 of the Information Management Regulation.\n                            </li>\n                        </ol>\n\n                    </li>\n                </ul>\n\n            </li>\n            <li>\n                <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or\n                regulation by\n                name means the statute or regulation of British Columbia of that name, as amended or replaced from time\n                to time,\n                and includes any enactment made under the authority of that statute or regulation.\n            </li>\n            <li>\n\n                <p>\n                    <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this\n                    Agreement:\n                </p>\n\n                <ol type=\"i\">\n                    <li>\n                        a provision in the body of this Agreement will prevail over any conflicting provision in any\n                        further limits\n                        or conditions communicated to you in writing by the Province, unless the conflicting provision\n                        expressly\n                        states otherwise; and\n                    </li>\n                    <li>\n                        a provision referred to in (i) above will prevail over any conflicting provision in the\n                        Conformance\n                        Standards.\n                    </li>\n                </ol>\n\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            APPLICATION OF LEGISLATION\n        </p>\n\n        <p>\n            You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act and\n            all\n            Privacy Laws applicable to PharmaNet and PharmaNet Data.\n        </p>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n        </p>\n\n        <p>\n            You acknowledge that:\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by\n                the\n                Province under the authority of the Act;\n            </li>\n            <li>\n                specific provisions of the Act, including the Information Management Regulation and sections 24, 25 and\n                29 of\n                the Act, apply directly to you and to On-Behalf-of Users as a result; and\n            </li>\n            <li>\n                this Agreement documents limits and conditions, set by the minister in writing, that the Act requires\n                you to\n                comply with.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            ACCESS\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n                compliance with the limits and conditions set out in section 5(b) below and otherwise in this Agreement.\n                The\n                Province may from time to time, at its discretion, amend or change the scope of your access privileges\n                to\n                PharmaNet as privacy, security, business and clinical practice requirements change. In such\n                circumstances, the\n                Province will use reasonable efforts to notify you of such changes.\n            </li>\n            <li>\n\n                <p>\n                    <strong>Limits and Conditions of Access.</strong> The following limits and conditions apply to your\n                    access to\n                    PharmaNet:\n                </p>\n\n                <ol type=\"i\">\n                    <li>\n                        you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access\n                        PharmaNet, for so\n                        long as you are a registrant in good standing with the Professional College and your licence\n                        permits you to\n                        deliver Direct Patient Care requiring access to PharmaNet;\n                    </li>\n                    <li>\n                        you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access\n                        PharmaNet, at a location approved by the Province, and using only the technologies and\n                        applications approved by the Province. For greater certainty, you must not access PharmaNet\n                        using a VPN or similar remote access technology to an approved location, unless that VPN or\n                        remote access technology has first been approved by the Province in writing for use at the\n                        Practice. You, or your On-Behalf-of Users, must be physically located in BC whenever you use VPN\n                        or similar remote access technology to access PharmaNet.\n                    </li>\n                    <li>\n                        you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you\n                        will ensure\n                        that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct\n                        Patient Care;\n                    </li>\n                    <li>\n                        you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of\n                        market\n                        research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet\n                        Data, for the\n                        purpose of market research;\n                    </li>\n                    <li>\n                        subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure\n                        that\n                        On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of\n                        Direct Patient\n                        Care, including for the purposes of quality improvement, evaluation, health care planning,\n                        surveillance,\n                        research or other secondary uses;\n                    </li>\n                    <li>\n                        you will not permit any Unauthorized Person to access PharmaNet, and you will take all\n                        reasonable measures\n                        to ensure that no Unauthorized Person can access PharmaNet;\n                    </li>\n                    <li>\n                        you will complete any training program(s) that your Approved SSO makes available to you in\n                        relation to\n                        PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n                    </li>\n                    <li>\n                        you will immediately notify the Province when you or an On-Behalf-of User no longer require\n                        access to\n                        PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave\n                        of absence\n                        from your staff, or where the On-Behalf-of User’s access-related duties in relation to the\n                        Practice have\n                        changed;\n                    </li>\n                    <li>\n                        you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional\n                        limits or\n                        conditions applicable to you, as may be communicated to you by the Province in writing;\n                    </li>\n                    <li>\n                        you represent and warrant that all information provided by you in connection with your\n                        application for\n                        PharmaNet access, including through PRIME, is true and correct.\n                    </li>\n                </ol>\n\n            </li>\n            <li>\n                <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this\n                Agreement\n                for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n                PharmaNet Data.\n            </li>\n            <li>\n\n                <p>\n                    <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable\n                    measures to\n                    safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is\n                    in the\n                    custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n                </p>\n\n                <ol type=\"i\">\n                    <li>\n                        take all reasonable steps to ensure the physical security of Personal Information, generally and\n                        as required\n                        by Privacy Laws;\n                    </li>\n                    <li>\n                        secure all workstations and printers in a protected area in the Practice to prevent viewing of\n                        PharmaNet\n                        Data by Unauthorized Persons;\n                    </li>\n                    <li>\n                        ensure separate access credential (such as user name and password) for each On-Behalf-of User,\n                        and prohibit\n                        sharing or other multiple use of your access credential, or an On-Behalf-of User’s access\n                        credential, for\n                        access to PharmaNet;\n                    </li>\n                    <li>\n                        secure any workstations used to access PharmaNet and all devices, codes or passwords that enable\n                        access to\n                        PharmaNet by yourself or any On-Behalf-of User;\n                    </li>\n                    <li>\n                        take such other privacy and security measures as the Province may reasonably require from\n                        time-to-time.\n                    </li>\n                </ol>\n\n            </li>\n            <li>\n                <strong>Conformance Standards - Business Rules.</strong> You will comply with, and will ensure\n                On-Behalf-of\n                Users comply with, the business rules specified in the Conformance Standards when accessing and\n                recording\n                information in PharmaNet.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper\n                files or\n                any electronic system, unless such storage or retention is required for record keeping in accordance\n                with\n                Professional College requirements and in connection with your provision of Direct Patient Care and\n                otherwise is\n                in compliance with the Conformance Standards. You will not modify any records retained in accordance\n                with this\n                section other than as may be expressly authorized in the Conformance Standards. For clarity, you may\n                annotate a\n                discrete record provided that the discrete record is not itself modified other than as expressly\n                authorized in\n                the Conformance Standards.\n            </li>\n            <li>\n                <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with\n                section\n                6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the\n                purpose of\n                monitoring your own Practice.\n            </li>\n            <li>\n                <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do\n                not,\n                disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient\n                Care or is\n                otherwise authorized under section 24(1) of the Act.\n            </li>\n            <li>\n                <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of\n                Users do\n                not, disclose PharmaNet Data for the purpose of market research.\n            </li>\n            <li>\n                <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in\n                accordance\n                with section 6(a) of this Agreement, you will not provide to patients any copies of records containing\n                PharmaNet\n                Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such\n                records or\n                “print outs” to the Province.\n            </li>\n            <li>\n                <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a\n                request for\n                correction of any record or information contained in PharmaNet, you will refer the request to the\n                Province.\n            </li>\n            <li>\n                <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the\n                Province if\n                you receive any order, demand or request compelling, or threatening to compel, disclosure of records\n                contained\n                in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For\n                greater\n                certainty, the foregoing requires that you notify the Province only with respect to any access requests\n                or\n                demands for records contained in PharmaNet, and not records retained by you in accordance with section\n                6(a) of\n                this Agreement.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            ACCURACY\n        </p>\n\n        <p>\n            You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of\n            User\n            in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material\n            inaccuracy or\n            error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it\n            if\n            necessary, and notify the Province of the inaccuracy or error and any steps taken.\n        </p>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            INVESTIGATIONS, AUDITS, AND REPORTING\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations\n                conducted by\n                the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n                Agreement, including providing access upon request to your facilities, data management systems, books,\n                records\n                and personnel for the purposes of such audit or investigation.\n            </li>\n            <li>\n                <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province\n                may\n                report any material breach of this Agreement to your Professional College or to the Information and\n                Privacy\n                Commissioner of British Columbia.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this\n                Agreement,\n                and will take all reasonable steps to prevent recurrences of any such breaches, including taking any\n                steps\n                necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of\n                User’s\n                access rights.\n            </li>\n            <li>\n\n                <p>\n                    <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n                </p>\n\n                <ol type=\"i\">\n                    <li>\n                        you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User\n                        will be unable\n                        to comply with the terms of this Agreement in any respect, or\n                    </li>\n                    <li>\n                        you have knowledge of any circumstances, incidents or events which have or may jeopardize the\n                        security,\n                        confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person,\n                        to access\n                        PharmaNet.\n                    </li>\n                </ol>\n\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            TERM OF AGREEMENT, SUSPENSION & TERMINATION\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet\n                by the\n                Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or\n                (e)\n                below.\n            </li>\n            <li>\n                <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written\n                notice to\n                the Province.\n            </li>\n            <li>\n                <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates\n                your\n                right, or an On-Behalf-of User’s right, to access PharmaNet under the Information Management Regulation,\n                the\n                Province may also terminate this Agreement at any time thereafter upon written notice to you.\n            </li>\n            <li>\n                <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate\n                this\n                Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to\n                you if\n                you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n            </li>\n            <li>\n                <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n                terminate automatically if your access to PharmaNet ends by operation of section 18 of the Information\n                Management Regulation.\n            </li>\n            <li>\n                <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may\n                suspend your\n                account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the\n                Province’s\n                policies. Please contact the Province immediately if your account has been suspended for inactivity but\n                you\n                still require access to PharmaNet.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and\n                PharmaNet\n                Data is solely at your own risk. All such access and information is provided on an “as is” and “as\n                available”\n                basis without warranty or condition of any kind. The Province does not warrant the accuracy,\n                completeness or\n                reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation\n                of\n                PharmaNet will function without error, failure or interruption.\n            </li>\n            <li>\n                <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information\n                disclosed to\n                you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or\n                acting\n                upon such information. The clinical or other information disclosed to you or an On-Behalf-of User\n                pursuant to\n                this Agreement is in no way intended to be a substitute for professional judgment.\n            </li>\n            <li>\n                <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the\n                Province\n                for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or\n                PharmaNet\n                Data.\n            </li>\n            <li>\n                <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify\n                and save\n                harmless the Province, and the Province’s employees and agents (each an\n                <strong>\"Indemnified Person\"</strong>)\n                from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified\n                Person may\n                sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are\n                based\n                upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n                On-Behalf-of User, in connection with this Agreement.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            NOTICE\n        </p>\n\n        <ol type=\"a\">\n            <li>\n\n                <p>\n                    <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another\n                    method of\n                    delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to\n                    be\n                    effective,\n                    must be in writing and emailed or mailed to:\n                </p>\n\n                <address>\n                    Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n                    <br>\n\n                    <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n                </address>\n\n            </li>\n            <li>\n                <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will\n                be in\n                writing and delivered by the Province to you using any of the contact mechanisms identified by you in\n                PRIME,\n                including by mail to a specified postal address, email to a specified email address or text message to\n                the\n                specified cell phone number. You may be required to click a URL link or log into PRIME to receive the\n                content\n                of any such notice.\n            </li>\n            <li>\n                <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n                electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if\n                sent\n                by mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory\n                holidays)\n                after the date the notice was sent.\n            </li>\n            <li>\n                <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact\n                mechanism\n                by updating your contact information in PRIME.\n            </li>\n        </ol>\n\n    </li>\n    {$lcPlaceholder}\n    <li>\n\n        <p class=\"bold underline\">\n            GENERAL\n        </p>\n\n        <ol type=\"a\">\n            <li>\n\n                <p>\n                    <strong>Entire Agreement.</strong> This Agreement constitutes the entire agreement between the\n                    parties with\n                    respect to the subject matter of this agreement.\n                </p>\n\n            </li>\n            <li>\n\n                <p>\n                    <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and\n                    is\n                    severable from any other covenant, and if any of them are held by a court, or other decision-maker,\n                    to be\n                    invalid, this Agreement will be interpreted as if such provisions were not included.\n                </p>\n\n            </li>\n            <li>\n\n                <p>\n                    <strong>Survival.</strong> Sections 3, 4, 5(b)(iv) (v), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any\n                    other\n                    provision of this Agreement that expressly or by its nature continues after termination, shall\n                    survive\n                    termination of this Agreement.\n                </p>\n\n            </li>\n            <li>\n\n                <p>\n                    <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and\n                    interpreted in\n                    accordance with the laws of British Columbia and the laws of Canada applicable therein.\n                </p>\n\n            </li>\n            <li>\n\n                <p>\n                    <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be\n                    assigned\n                    without the prior written approval of the Province.\n                </p>\n\n            </li>\n            <li>\n\n                <p>\n                    <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any\n                    provision of\n                    this Agreement by you is not a waiver of its right subsequently to insist on performance of that or\n                    any other\n                    provision of this Agreement.\n                </p>\n\n            </li>\n            <li>\n\n                <p>\n                    <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement,\n                    including this\n                    section, at any time in its sole discretion:\n                </p>\n\n                <ol type=\"i\">\n                    <li>\n                        by written notice to you, in which case the amendment will become effective upon the later of\n                        (A) the date\n                        notice of the amendment is first delivered to you, or (B) the effective date of the amendment\n                        specified by\n                        the Province, if any; or\n                    </li>\n                    <li>\n                        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the\n                        notice will\n                        specify the effective date of the amendment, which date will be at least 30 (thirty) days after\n                        the date\n                        that the PharmaCare Newsletter containing the notice is first published.\n                    </li>\n                </ol>\n\n                <p>\n                    If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment\n                    described in\n                    (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this\n                    Agreement will be\n                    deemed to have been so amended as of the effective date. If you do not agree with any amendment for\n                    which\n                    notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly\n                    (and in any\n                    event before the effective date) cease all access or use of PharmaNet by yourself and all\n                    On-Behalf-of Users,\n                    and take the steps necessary to terminate this Agreement in accordance with section 10.\n                </p>\n\n            </li>\n        </ol>\n\n    </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            AgreementType = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET TERMS OF ACCESS FOR ON-BEHALF-OF USER</h1>\n\n<p class=\"bold\">\n    By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n    <li>\n\n        <p class=\"bold underline\">\n            On Behalf of User Access\n        </p>\n\n        <p class=\"bold\">\n            You represent and warrant to the Province that:\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet\n                Data) to\n                support the Practitioner’s delivery of Direct Patient Care;\n            </li>\n            <li>\n                you are directly supervised by a Practitioner who has been granted access to PharmaNet by the Province;\n                and\n            </li>\n            <li>\n                all information provided by you in connection with your application for PharmaNet access, including all\n                information submitted through PRIME, is true and correct.\n            </li>\n        </ol>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            Definitions\n        </p>\n\n        <p class=\"bold\">\n            In these terms, capitalized terms will have the following meanings:\n        </p>\n\n        <ul class=\"list-unstyled\">\n            <li>\n                <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of\n                health\n                services to an individual to whom a Practitioner provides direct patient care in the context of their\n                Practice.\n            </li>\n            <li>\n                <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on\n                the\n                following website (or such other website as may be specified by the Province from time to time for this\n                purpose):\n\n                <br><br>\n\n                <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n            </li>\n            <li>\n                <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n                Regulation.\n            </li>\n            <li>\n                <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any\n                record or\n                information in the custody, control or possession of you or a Practitioner that was obtained through\n                access to\n                PharmaNet by anyone.\n            </li>\n            <li>\n                <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n            </li>\n            <li>\n                <strong>“Practitioner”</strong> means a health professional regulated under the Health Professions Act\n                who\n                supervises your access and use of PharmaNet and who has been granted access to PharmaNet by the\n                Province.\n            </li>\n            <li>\n                <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply\n                for, and\n                manage, their access to PharmaNet, and through which users are granted access by the Province.\n            </li>\n            <li>\n                <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by\n                the\n                Minister of Health.\n            </li>\n        </ul>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            Terms of Access to PharmaNet\n        </p>\n\n        <p class=\"bold\">\n            You must:\n        </p>\n\n        <ol type=\"a\">\n            <li>\n                access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by the\n                Practitioner to\n                the individuals whose PharmaNet Data you are accessing;\n            </li>\n            <li>\n                only access PharmaNet as permitted by law and directed by the Practitioner;\n            </li>\n            <li>\n                maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner,\n                in\n                strict confidence;\n            </li>\n            <li>\n                maintain the security of PharmaNet, and any applications, connections, or networks used to access\n                PharmaNet;\n            </li>\n            <li>\n                complete all training required by the Practice’s PharmaNet software vendor and the Province before\n                accessing\n                PharmaNet;\n            </li>\n            <li>\n                notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has\n                been\n                accessed or used inappropriately by any person.\n            </li>\n        </ol>\n\n        <p class=\"bold\">\n            You must not:\n        </p>\n\n        <ol type=\"a\"\n            start=\"7\">\n            <li>\n                disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and\n                directed\n                by the Practitioner;\n            </li>\n            <li>\n                permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n            </li>\n            <li>\n                reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n            </li>\n            <li>\n                use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n            </li>\n            <li>\n                take any action that might compromise the integrity of PharmaNet, its information, or the provincial\n                drug plan,\n                such as altering information or submitting false information;\n            </li>\n            <li>\n                test the security related to PharmaNet;\n            </li>\n            <li>\n                attempt to access PharmaNet from any location other than the approved Practice site of the\n                Practitioner, including by VPN or other remote access technology,\n                unless that VPN or remote access technology has first been approved by the Province in writing for use\n                at the Practice.\n                You must be physically located in BC whenever you use approved VPN or other approved remote access\n                technology to access PharmaNet.\n            </li>\n        </ol>\n\n        <p>\n            Your access to PharmaNet and use of PharmaNet Data are governed by the Pharmaceutical Services Act and you\n            must\n            comply with all your duties under that Act.\n        </p>\n\n        <p>\n            The Province may, in writing and from time to time, set further limits and conditions in respect of\n            PharmaNet,\n            either for you or for the Practitioner(s), and that you must comply with any such further limits and\n            conditions.\n        </p>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            How to Notify the Province\n        </p>\n\n        <p>\n            Notice to the Province may be sent in writing to:\n        </p>\n\n        <address>\n            Director, Information and PharmaNet Development<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n            <br>\n\n            <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n    </li>\n    <li>\n\n        <p class=\"bold underline\">\n            Province may modify these terms\n        </p>\n\n        <p>\n            The Province may amend these terms, including this section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n            <li>\n                by written notice to you, in which case the amendment will become effective upon the later of (A) the\n                date\n                notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n                by the\n                Province, if any; or\n            </li>\n            <li>\n                by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n                specify\n                the effective date of the amendment, which date will be at least thirty (30) days after the date that\n                the\n                PharmaCare Newsletter containing the notice is first published.\n            </li>\n        </ol>\n\n        <p>\n            If you do not agree with any amendment for which notice has been provided by the Province in accordance with\n            (i)\n            or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n            PharmaNet.\n        </p>\n\n        <p>\n            Any written notice to you under (i) above will be in writing and delivered by the Province to you using any\n            of the\n            contact mechanisms identified by you in PRIME, including by mail to a specified postal address, email to a\n            specified email address or text message to a specified cell phone number. You may be required to click a URL\n            link\n            or log into PRIME to receive the contents of any such notice.\n        </p>\n\n    </li>\n    {$lcPlaceholder}\n    <li>\n\n        <p class=\"bold underline\">\n            Governing Law\n        </p>\n\n        <p>\n            These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n            Columbia and the laws of Canada applicable therein.\n        </p>\n\n        <p>\n            Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation\n            of\n            British Columbia of that name, as amended or replaced from time to time, and includes any enactment made\n            under the\n            authority of that statute or regulation.\n        </p>\n\n    </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            AgreementType = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET REGULATED USER TERMS OF ACCESS: TEST OF INSERTION OF INDIVIDUAL L&C COPY</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means the physical site at which you provide Direct Patient Care\n            and which is approved by the Province for PharmaNet access.\n            <span class=\"underline\">For greater certainty, “Approved Practice Site” does not include a location from which remote access to PharmaNet takes place;</span>\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the Information Management Regulation, B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet on your behalf;\n            and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or an On-Behalf-of User that was obtained\n            through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the <em>Health\n            Professions Act</em>, or your practice as an enrolled device provider under the\n            <em>Provider Regulation</em>, B.C. Reg.222/2014, as identified by you through PRIME.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the\n            <em>Freedom of Information and Protection of Privacy Act</em>,\n            the <em>Personal Information Protection Act</em>, and any other statutory or legal obligations of privacy\n            owed by you or the Province, whether arising under statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further\n            limits or conditions communicated to you in writing by the Province, unless the conflicting provision\n            expressly states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act, including the <em>Information Management Regulation</em> and sections 24, 25 and\n        29 of the Act, apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in section 5(b) below and otherwise in this Agreement. The\n        Province may from time to time, at its discretion, amend or change the scope of your access privileges to\n        PharmaNet as privacy, security, business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Limits and Conditions of Access.</strong> The following limits and conditions apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet;\n          </li>\n          <li>\n            <p>you will only access PharmaNet:</p>\n\n            <ul>\n              <li>\n                at the Approved Practice Site, and using only the technologies and applications approved by the\n                Province; or\n              </li>\n              <li>\n                using a VPN or similar remote access technology, if you are physically located in British Columbia and\n                remotely connected to the Approved Practice Site using a VPN or other remote access technology\n                specifically approved by the Province in writing for the Approved Practice Site.\n              </li>\n            </ul>\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access\n            takes place at the Approved Practice Site and the access is in relation to patients for whom you will be\n            providing Direct Patient Care at the Approved Practice Site requiring the access to PharmaNet;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of Users do not access PharmaNet using VPN or other remote access\n            technology\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as\n            required by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Practice to prevent viewing of PharmaNet\n            Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and prohibit\n            sharing or other multiple use of your access credential, or an On-Behalf-of User’s access credential, for\n            access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\n            PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of\n        Users comply with, the rules specified in the Conformance Standards when accessing and recording information in\n        PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with\n        Professional College requirements and in connection with your provision of Direct Patient Care and otherwise is\n        in compliance with the Conformance Standards. You will not modify any records retained in accordance with this\n        section other than as may be expressly authorized in the Conformance Standards. For clarity, you may annotate a\n        discrete record provided that the discrete record is not itself modified other than as expressly authorized in\n        the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the\n        <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\n        thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content of\n        any such notice.\n      </li>\n      <li>\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent by\n        mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays) after\n        the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vi) (vii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            AgreementType = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>\n  PHARMANET TERMS OF ACCESS FOR ON-BEHALF-OF USER<br>\n  with individual limits and conditions added\n</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<p class=\"bold underline\">\n  On Behalf-of-User Access\n</p>\n\n<ol>\n  <li>\n    <p>\n      You represent and warrant to the Province that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\n        support the Practitioner’s delivery of Direct Patient Care;\n      </li>\n      <li>\n        you are directly supervised by a Practitioner who has been granted access to PharmaNet by the Province; and\n      </li>\n      <li>\n        all information provided by you in connection with your application for PharmaNet access, including all\n        information submitted through PRIME, is true and correct.\n      </li>\n    </ol>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Definitions\n</p>\n\n<ol start=\"2\">\n  <li>\n    <p>\n      In these terms, capitalized terms will have the following meanings:\n    </p>\n\n    <ul class=\"list-unstyled\">\n      <li>\n        <strong>“Approved Practice Site”</strong> means the physical site at which a Practitioner provides Direct\n        Patient Care and which is approved by the Province for PharmaNet access. For greater certainty, “Approved\n        Practice Site” does not include a location from which remote access to PharmaNet takes place.\n      </li>\n      <li>\n        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\n      </li>\n      <li>\n        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n        following website (or such other website as may be specified by the Province from time to time for this\n        purpose):\n\n        <br><br>\n\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n      </li>\n      <li>\n        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the <em>Information Management\n        Regulation</em>, B.C. Reg. 74/2015.\n      </li>\n      <li>\n        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record or\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\n        PharmaNet by anyone.\n      </li>\n      <li>\n        <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n      </li>\n      <li>\n        <strong>“Practitioner”</strong> means a health professional regulated under the <em>Health Professions Act</em>,\n        or an enrolled device provide under the <em>Provider Regulation</em> B.C. Reg. 222/2014, who supervises your\n        access to and use of PharmaNet and who has been granted access to PharmaNet by the Province.\n      </li>\n      <li>\n        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for, and\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\n      </li>\n      <li>\n        <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n        Minister of Health.\n      </li>\n    </ul>\n\n  </li>\n  <li>\n    Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\n    British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\n    authority of that statute or regulation.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Terms of Access to PharmaNet\n</p>\n\n<ol start=\"4\">\n  <li>\n\n    <p>\n      You must:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        access and use PharmaNet and PharmaNet Data only at the Approved Practice Site of a Practitioner;\n      </li>\n      <li>\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by a Practitioner to\n        the individuals whose PharmaNet Data you are accessing, and only if the Practitioner is or will be delivering\n        Direct Patient Care requiring that access to those individuals at the same Approved Practice Site at which the\n        access occurs;\n      </li>\n      <li>\n        only access PharmaNet as permitted by law and directed by a Practitioner;\n      </li>\n      <li>\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\n        strict confidence;\n      </li>\n      <li>\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\n      </li>\n      <li>\n        complete all training required by the Approved Practice Site’s PharmaNet software vendor and the Province before\n        accessing PharmaNet;\n      </li>\n      <li>\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\n        accessed or used inappropriately by any person.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p>\n      You must not:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and\n        directed by a Practitioner;\n      </li>\n      <li>\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n      </li>\n      <li>\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n      </li>\n      <li>\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n      </li>\n      <li>\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\n        such as altering information or submitting false information;\n      </li>\n      <li>\n        test the security related to PharmaNet;\n      </li>\n      <li>\n        attempt to access PharmaNet from any location other than the Approved Practice Site of a Practitioner,\n        including by VPN or other remote access technology;\n      </li>\n      <li>\n        access PharmaNet unless the access is for the purpose of supporting a Practitioner in providing Direct\n        Patient Care to a patient at the same Approved Practice Site at which your access occurs.\n      </li>\n    </ol>\n  </li>\n</ol>\n<ol start=\"6\">\n  <li>\n    Your access to PharmaNet and use of PharmaNet Data are governed by the <em>Pharmaceutical Services Act</em> and you\n    must comply with all your duties under that Act.\n  </li>\n  <li>\n    The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\n    either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  How to Notify the Province\n</p>\n\n<ol start=\"8\">\n  <li>\n\n    <p>\n      Notice to the Province may be sent in writing to:\n    </p>\n\n    <address>\n      Director, Information and PharmaNet Development<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n      <br>\n\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n    </address>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Province May Modify These Terms\n</p>\n\n<ol start=\"9\">\n  <li>\n    <p>\n      The Province may amend these terms, including this section, at any time in its sole discretion:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\n        Province, if any; or\n      </li>\n      <li>\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\n        PharmaCare Newsletter containing the notice is first published.\n      </li>\n    </ol>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n\n    <p>\n      Any written notice to you under (i) above will be in writing and delivered by the Province to you using any of the\n      contact mechanisms identified by you in PRIME, including by mail to a specified postal address, email to a\n      specified email address or text message to a specified cell phone number. You may be required to click a URL link\n      or log into PRIME to receive the contents of any such notice.\n    </p>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Governing Law\n</p>\n\n<ol start=\"10\">\n  <li>\n\n    <p>\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n      Columbia and the laws of Canada applicable therein.\n    </p>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            AgreementType = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET REGULATED USER TERMS OF ACCESS</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means the physical site at which you provide Direct Patient Care\n            and which is approved by the Province for PharmaNet access.\n            <span class=\"underline\">For greater certainty, “Approved Practice Site” does not include a location from which remote access to PharmaNet takes place;</span>\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the Information Management Regulation, B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet on your behalf;\n            and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or an On-Behalf-of User that was obtained\n            through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the <em>Health\n            Professions Act</em>, or your practice as an enrolled device provider under the\n            <em>Provider Regulation</em>, B.C. Reg.222/2014, as identified by you through PRIME.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the\n            <em>Freedom of Information and Protection of Privacy Act</em>,\n            the <em>Personal Information Protection Act</em>, and any other statutory or legal obligations of privacy\n            owed by you or the Province, whether arising under statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further\n            limits or conditions communicated to you in writing by the Province, unless the conflicting provision\n            expressly states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act, including the <em>Information Management Regulation</em> and sections 24, 25 and\n        29 of the Act, apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in section 5(b) below and otherwise in this Agreement. The\n        Province may from time to time, at its discretion, amend or change the scope of your access privileges to\n        PharmaNet as privacy, security, business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Limits and Conditions of Access.</strong> The following limits and conditions apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet;\n          </li>\n          <li>\n            <p>you will only access PharmaNet:</p>\n\n            <ul>\n              <li>\n                at the Approved Practice Site, and using only the technologies and applications approved by the\n                Province; or\n              </li>\n              <li>\n                using a VPN or similar remote access technology, if you are physically located in British Columbia and\n                remotely connected to the Approved Practice Site using a VPN or other remote access technology\n                specifically approved by the Province in writing for the Approved Practice Site.\n              </li>\n            </ul>\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access\n            takes place at the Approved Practice Site and the access is in relation to patients for whom you will be\n            providing Direct Patient Care at the Approved Practice Site requiring the access to PharmaNet;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of Users do not access PharmaNet using VPN or other remote access\n            technology\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as\n            required by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Practice to prevent viewing of PharmaNet\n            Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and prohibit\n            sharing or other multiple use of your access credential, or an On-Behalf-of User’s access credential, for\n            access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\n            PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of\n        Users comply with, the rules specified in the Conformance Standards when accessing and recording information in\n        PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with\n        Professional College requirements and in connection with your provision of Direct Patient Care and otherwise is\n        in compliance with the Conformance Standards. You will not modify any records retained in accordance with this\n        section other than as may be expressly authorized in the Conformance Standards. For clarity, you may annotate a\n        discrete record provided that the discrete record is not itself modified other than as expressly authorized in\n        the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the\n        <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\n        thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content of\n        any such notice.\n      </li>\n      <li>\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent by\n        mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays) after\n        the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vi) (vii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            AgreementType = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET COMMUNITY PHARMACIST TERMS OF ACCESS</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means the physical site at which you provide Direct Patient Care\n            and which is approved by the Province for PharmaNet access.\n            <span class=\"underline\">For greater certainty, “Approved Practice Site” does not include a location from which remote access to PharmaNet takes place;</span>\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards<br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n                </a>;\n              </li>\n              <li>\n                Policy for Secure Remote Access to PharmaNet\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n                </a>; and\n              </li>\n              <li>\n                iii. Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider”</strong> means a person enrolled under section 11 of the Act in the class of\n            provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <em>Information Management Regulation</em>,\n            B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet on your behalf;\n            and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or an On-Behalf-of User that was obtained\n            through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the <em>Health\n                      Professions Act</em>, or your practice as a Device Provider, as identified by you through PRIME\n            or another mechanism provided by the Province.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the\n            <em>Freedom of Information and Protection of Privacy Act</em>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the Province, whether arising under\n            statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the purpose of receiving\n            payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <em>Provider Regulation</em>, B.C. Reg. 222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            i. a provision in the body of this Agreement will prevail over any conflicting provision in any further\n            limits or conditions communicated to you in writing by the Province, unless the conflicting provision\n            expressly states otherwise; and a provision referred to in (i) above will prevail over any conflicting\n            provision in the Conformance Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act, the\n      Information Management Regulation and all Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        a. PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        b. specific provisions of the Act (including but not limited to sections 24, 25 and 29) and the Information\n        Management Regulation apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        c. this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in this Agreement. The Province may from time to time, at its\n        discretion, amend or change the scope of your access privileges to PharmaNet as privacy, security, business and\n        clinical practice requirements change. In such circumstances, the Province will use reasonable efforts to notify\n        you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet or, in the case of access as a Device\n            Provider, for so long as you are enrolled as a Device Provider;\n          </li>\n          <li>\n            <p>you will only access PharmaNet:</p>\n\n            <ul>\n              <li>\n                at the Approved Practice Site, and using only the technologies and applications approved by the\n                Province; or\n              </li>\n              <li>\n                • using a VPN or similar remote access technology, if you are physically located in British Columbia and\n                remotely connected to the Approved Practice Site using a VPN or other remote access technology\n                specifically approved by the Province in writing for the Approved Practice Site.\n              </li>\n            </ul>\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access\n            takes place at the Approved Practice Site and the access is required in relation to patients for whom you\n            will be providing Direct Patient Care at the Approved Practice Site;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of Users do not access PharmaNet using VPN or other remote access\n            technology;\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will\n            ensure that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct\n            Patient Care;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved Practice Site in respect of which a\n            person is enrolled as a Provider, and you will ensure that On-Behalf-of Users submit Claims on PharmaNet\n            only from an Approved Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable\n            measures to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as\n            required by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Approved Practice Site to prevent\n            viewing of PharmaNet Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and\n            prohibit sharing or other multiple use of your access credential, or an On-Behalf-of User’s access\n            credential, for access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access\n            to PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with the\n        Act, the Provider Regulation, and Professional College requirements and in connection with your provision of\n        Direct Patient Care and otherwise is in compliance with the Conformance Standards. You will not modify any\n        records retained in accordance with this section other than as may be expressly authorized in the Conformance\n        Standards. For clarity, you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the\n        <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\n        thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement or in connection with access to PharmaNet by you or an\n        On-Behalf-of User.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content of\n        any such notice.\n      </li>\n      <li>\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent by\n        mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays) after\n        the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vii) (viii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            AgreementType = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<h1>PHARMANET USER TERMS OF ACCESS FOR PHARMACISTS</h1>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means the physical site at which you provide Direct Patient Care\n            and which is approved by the Province for PharmaNet access.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards<br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n                </a>; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n                </a>\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider”</strong> means a person enrolled under section 11 of the Act in the class of\n            provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <em>Information Management Regulation</em>,\n            B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet on your behalf;\n            and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or an On-Behalf-of User that was obtained\n            through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the <em>Health\n                      Professions Act</em>, or your practice as a Device Provider, as identified by you through PRIME\n            or another mechanism provided by the Province.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the\n            <em>Freedom of Information and Protection of Privacy Act</em>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the Province, whether arising under\n            statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the purpose of receiving\n            payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <em>Provider Regulation</em>, B.C. Reg. 222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further limits\n            or conditions communicated to you in writing by the Province, unless the conflicting provision expressly\n            states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act, the\n      Information Management Regulation and all Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        a. PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        b. specific provisions of the Act (including but not limited to sections 24, 25 and 29) and the Information\n        Management Regulation apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        c. this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in this Agreement. The Province may from time to time, at its\n        discretion, amend or change the scope of your access privileges to PharmaNet as privacy, security, business and\n        clinical practice requirements change. In such circumstances, the Province will use reasonable efforts to notify\n        you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet or, in the case of access as a Device\n            Provider, for so long as you are enrolled as a Device Provider;\n          </li>\n          <li>\n            you will only access PharmaNet: at the Approved Practice Site, and using only the technologies and\n            applications approved by the Province;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access takes\n            place at the Approved Practice Site and the access is required in relation to patients for whom you will be\n            providing Direct Patient Care at the Approved Practice Site;\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved Practice Site in respect of which a\n            person is enrolled as a Provider, and you will ensure that On-Behalf-of Users submit Claims on PharmaNet\n            only from an Approved Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as\n            required by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Approved Practice Site to prevent\n            viewing of PharmaNet Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and\n            prohibit sharing or other multiple use of your access credential, or an On-Behalf-of User’s access\n            credential, for access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access\n            to PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with the\n        Act, the Provider Regulation, and Professional College requirements and in connection with your provision of\n        Direct Patient Care and otherwise is in compliance with the Conformance Standards. You will not modify any\n        records retained in accordance with this section other than as may be expressly authorized in the Conformance\n        Standards. For clarity, you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record Contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON-COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet Access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the\n        <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\n        thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by Operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You Are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province If You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement or in connection with access to PharmaNet by you or an\n        On-Behalf-of User.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content of\n        any such notice.\n      </li>\n      <li>\n        <strong>Deemed Receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent by\n        mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays) after\n        the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute Contact Information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vi) (vii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province May Modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            AgreementType = 4,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\n\n<p>\n  This Organization Agreement for PharmaNet Use (the &quot;Agreement&quot;) is executed by {{organization_name}}\n  (&quot;Organization&quot;) for the benefit of HER MAJESTY THE QUEEN IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as\n  represented by the Minister of Health (the &quot;Province&quot;).\n</p>\n\n<p>\n  <strong>WHEREAS:</strong>\n</p>\n\n<ol type=\"A\">\n  <li>\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\n    Columbia is entered into PharmaNet.\n  </li>\n  <li>\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is in\n    the public interest to ensure that appropriate measures are in place to protect the confidentiality and\n    integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to the\n    Act and other applicable law.\n  </li>\n  <li>\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\n    the care of, the individual whose personal information is being accessed.\n  </li>\n  <li>\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\n    at the Site(s) operated by Organization.\n  </li>\n</ol>\n\n<p>\n  <strong>NOW THEREFORE</strong> Organization makes this Agreement knowing that the Province will rely on it\n  in permitting access to and use of PharmaNet from Sites operated by Organization. Organization conclusively\n  acknowledges that reliance by the Province on this Agreement is in every respect justifiable and that it\n  received fair and valuable consideration for this Agreement, the receipt and adequacy of which is hereby\n  acknowledged. Organization hereby agrees as follows:\n</p>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"1\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided\n            Technology used at the Site;\n          </li>\n          <li>\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is\n            in any way used in connection with Site Access or any PharmaNet Data;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\n              Province and who is:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                an employee or independent contractor of Organization, or\n              </li>\n              <li>\n                if Organization is an individual, the Organization;\n              </li>\n            </ol>\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\n            <em>Information Management Regulation</em>,\n            B.C. Reg. 74/2015;\n          </li>\n          <li>\n            <strong>&quot;On-Behalf-Of User&quot;</strong> means an Authorized User described in subsection 4 (5) of the\n            <em>Information Management Regulation</em> who acts on behalf of a Regulated User when accessing\n            PharmaNet;\n          </li>\n          <li>\n            &quot;PharmaNet&quot; means PharmaNet as continued under section 2 of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet and\n            any records\n            or information in the custody, control or possession of Organization or any Authorized User as the result of\n            any Site Access;\n          </li>\n          <li>\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\n            of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\n            &quot;Signing Authority&quot;\n            for a Site, with the associated contact information, as set out in section 2 of the Site Request;\n          </li>\n          <li>\n            <p>\n              &quot;Site&quot; means a premises operated by Organization and located in British Columbia that:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                is the subject of a Site Request submitted to the Province, and\n              </li>\n              <li>\n                has been approved for Site Access by the Province in writing\n              </li>\n            </ol>\n\n            <p class=\"underline\">\n              For greater certainty, &quot;Site&quot; does not include a location from which remote access to PharmaNet\n              takes place;\n            </p>\n          </li>\n          <li>\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site or remotely as\n            permitted\n            by the Province;\n          </li>\n          <li>\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\n            PharmaNet access\n            request form submitted to the Province by the Organization, requesting PharmaNet access at the Site, as such\n            information is updated by the Organization from time to time in accordance with section 2.2;\n          </li>\n          <li>\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\n            services\n            provided to Organization by an Approved SSO for the purpose of Site Access;\n          </li>\n        </ol>\n      </li>\n      <li>\n        Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\n        British\n        Columbia of that name, as amended or replaced from time to time, and includes any enactments made under the\n        authority\n        of that statute or regulation.\n      </li>\n      <li>\n        <p>\n          The following are the Schedules attached to and incorporated into this Agreement:\n        </p>\n\n        <ul>\n          <li>\n            Schedule A – Specific Privacy and Security Measures\n          </li>\n        </ul>\n      </li>\n      <li>\n        The main body of this Agreement, the Schedules, and any documents incorporated by reference into this Agreement\n        are to\n        be interpreted so that all of the provisions are given as full effect as possible. In the event of a conflict,\n        unless\n        expressly stated to the contrary the main body of the Agreement will prevail over the Schedules, which will\n        prevail\n        over any document incorporated by reference.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"2\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          Organization represents and warrants to the Province, as of the date of this\n          Agreement and throughout its term, that:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the information contained in the Site Request for each Site is true and correct;\n          </li>\n          <li>\n            <p>\n              if Organization is not an individual:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\n              </li>\n              <li>\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery\n                of this Agreement by, or on behalf of, Organization; and\n              </li>\n              <li>\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\n                legally binding upon and enforceable against Organization in accordance with its terms.\n              </li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization must immediately notify the Province of any change to the information contained in a Site Request,\n        including any change to a Site’s status, location, normal operating hours, Approved SSO, or the name and contact\n        information of the Signing Authority or any of the other specific roles set out in the Site Request. Such\n        notices\n        must be submitted to the Province in the form and manner directed by the Province in its published instructions\n        regarding the submission of updated Site Request information, as such instructions may be updated from time to\n        time by the Province.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"3\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must comply with the Act and all applicable law.\n      </li>\n      <li>\n        Organization must submit a Site Request to the Province for each physical location where it intends to provide\n        Site\n        Access, and must only provide Site Access from Sites approved in writing by the Province. For greater certainty,\n        a\n        Site Request is not required for each physical location from which remote access, as permitted under section\n        3.6,\n        may occur, but Organization must provide, with the Site Request, a list of the locations from which remote\n        access\n        may occur, and ensure this list remains current for the term of this agreement.\n      </li>\n      <li>\n        Organization must only provide Site Access using SSO-Provided Technology. For the purposes of remote access,\n        Organization must ensure that technology used meets the requirements of Schedule A.\n      </li>\n      <li>\n        Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network or\n        security technology that the Province certifies or makes available to Organization for the purpose of Site\n        Access.\n        The use of any such network or technology by Organization may be subject to terms and conditions of use,\n        including\n        acceptable use policies, established by the Province and communicated to Organization from time to time in\n        writing.\n      </li>\n      <li>\n        <p>\n          Organization must only make Site Access available to the following individuals:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            Authorized Users when they are physically located at a Site, and, in the case of an On-Behalf-of-User\n            accessing\n            personal information of a patient on behalf of a Regulated User, only if the Regulated User will be\n            delivering\n            care to that patient at the same Site at which the access to personal information occurs;\n          </li>\n          <li>\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\n            <em>Information Management Regulation</em>.\n          </li>\n        </ol>\n      </li>\n      <li>\n        Despite section 3.5(a), Organization may make Site Access available to Regulated Users who are physically\n        located in\n        British Columbia and remotely connected to a Site using a VPN or other remote access technology specifically\n        approved\n        by the Province in writing for the Site.\n      </li>\n      <li>\n        <p>\n          Organization must ensure that Authorized Users with Site Access:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            only access PharmaNet to the extent necessary to provide health services to, or facilitate the care of, the\n            individual whose personal information is being accessed;\n          </li>\n          <li>\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\n            available\n            in relation to PharmaNet;\n          </li>\n          <li>\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\n            multiple use of any such login identifications and credentials;\n          </li>\n          <li>\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use; and\n          </li>\n          <li>\n            in the case of remote access, comply with the policies of the Province relating to remote access to\n            PharmaNet.\n          </li>\n        </ol>\n      </li>\n      <li>\n        If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\n        Organization\n        will immediately take any local measures necessary to remove the Authorized User’s Site Access. Organization\n        will\n        only restore Site Access to a previously suspended or revoked Authorized User upon the Province’s specific\n        written\n        direction.\n      </li>\n      <li>\n        <p>\n          For the purposes of this section:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\n            Regulated User by whom,\n            or on whose behalf, that data was obtained from PharmaNet; and\n          </li>\n          <li>\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\n          </li>\n        </ol>\n\n        <p>\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\n          Responsible\n          User to whom it is disclosed.\n        </p>\n\n        <p>\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\n          Responsible\n          User has authorized such Use and it is otherwise permitted under the Act, applicable law, and the limits and\n          conditions imposed by the Province on the Responsible User.\n        </p>\n      </li>\n      <li>\n        <p>\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\n          unauthorized access,\n          collection, use, modification, retention, disclosure or disposal, including by:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\n            in\n            accordance with sections 3.1 to 3.9 above, and\n          </li>\n          <li>\n            complying with the requirements of Schedule A.\n          </li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"4\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\n        anticipates\n        that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge of any\n        circumstances,\n        incidents or events which have or may jeopardize the security, confidentiality or integrity of PharmaNet,\n        including any\n        attempt by any person to gain unauthorized access to PharmaNet or the networks or equipment used to connect to\n        PharmaNet\n        or convey PharmaNet Data.\n      </li>\n      <li>\n        Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable steps\n        to prevent\n        recurrences of any such breaches.\n      </li>\n      <li>\n        Organization must cooperate with any audits or investigations conducted by the Province (including any\n        independent auditor\n        appointed by the Province) regarding compliance with this Agreement, including by providing access upon request\n        to a Site\n        and any associated facilities, networks, equipment, systems, books, records and personnel for the purposes of\n        such audit\n        or investigation.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"5\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for the\n          Site, if:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\n            hardware, software,\n            or service in connection with PharmaNet, or\n          </li>\n          <li>\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or any\n            component\n            thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to PharmaNet,\n          </li>\n        </ol>\n\n        <p>\n          and the Organization is unable or unwilling to remedy the problem within a timeframe acceptable to the\n          Province.\n        </p>\n      </li>\n      <li>\n        As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\n        Access at a\n        Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to the Signing\n        Authority\n        for the Site, terminate all further Site Access at the Site.\n      </li>\n      <li>\n        Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\n        accordance with\n        this Article 5, of Site Access at the Site.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"6\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The term of this Agreement begins on the date first noted above and continues until it is terminated\n        in accordance with this Article 6.\n      </li>\n      <li>\n        Organization may terminate this Agreement at any time on notice to the Province.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\n        comply with any\n        provision of this Agreement.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\n        longer operates\n        any Sites where Site Access is permitted.\n      </li>\n      <li>\n        The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\n      </li>\n      <li>\n        Organization must prevent any further Site Access immediately upon termination of this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"7\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The PharmaNet access and PharmaNet Data provided under this Agreement are provided &quot;as is&quot; without\n        warranty of any kind,\n        whether express or implied. All implied warranties, including, without limitation, implied warranties of\n        merchantability,\n        fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed. The Province does not\n        warrant\n        the accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\n        to or\n        the operation of PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\n        special,\n        incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data, including\n        without\n        limitation any lost profits, business interruption, or loss of programs or information, even if the Province has\n        been specifically advised of the possibility of such damages.\n      </li>\n\n      <li>\n        Organization must indemnify and save harmless the Province, and the Province’s employees and agents (each an\n        <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages, actions, causes of action, costs and\n        expenses that an Indemnified Person may sustain, incur, suffer or be put to at any time, either before or after\n        this Agreement ends, which are based upon, arise out of or occur directly or indirectly by reason of any act\n        or omission by Organization, or by any Authorized User at the Site, in connection with this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 8 – GENERAL</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"8\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\n          of delivery, any notice to be given to the Province must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n        <p>\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\n          faxed\n          or text messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a\n          URL link or to log in to the Province’s &quot;PRIME&quot; system to receive the content of any such notice.\n        </p>\n\n        <p>\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\n          the\n          time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\n          Saturdays,\n          Sundays and statutory holidays) after the date the notice was sent.\n        </p>\n      </li>\n      <li>\n        <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\n        any\n        provision of this Agreement by Organization is not a waiver of its right subsequently to insist on performance\n        of\n        that or any other provision of this Agreement. A waiver of any provision or breach of this Agreement is\n        effective\n        only if it is writing and signed by, or on behalf of, the waiving party.\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\n          in writing and signed\n          by, or on behalf of, the parties.\n        </p>\n\n        <p>\n          Notwithstanding the foregoing, the Province may amend this Agreement, including the Schedules and this\n          section,\n          at any time in its sole discretion, by written notice to Organization, in which case the amendment will become\n          effective upon the later of: (i) the date notice of the amendment is delivered to Organization; and (ii) the\n          effective date of the amendment specified by the Province. The Province will make reasonable efforts to\n          provide\n          at least thirty (30) days advance notice of any such amendment, subject to any determination by the Province\n          that a shorter notice period is necessary due to changes in the Act, applicable law or applicable policies of\n          the Province, or is necessary to maintain privacy and security in relation to PharmaNet or PharmaNet Data.\n        </p>\n\n        <p>\n          If Organization does not agree with any amendment for which notice has been provided by the Province in\n          accordance with this section, Organization must promptly (and in any event prior to the effective date)\n          cease Site Access at all Sites and take the steps necessary to terminate this Agreement in accordance\n          with Article 6.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n{{signature_block}}\n\n<p class=\"text-center break-before\">\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\n</p>\n\n<p>\n  Organization must, in relation to each Site and in relation to Remote Access:\n</p>\n\n<ol type=\"a\">\n  <li>\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other\n    than Authorized Users;\n  </li>\n  <li>\n    <p>\n      implement all privacy and security measures specified in the following documents published by the Province, as\n      amended from time to time:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        <p>\n          the PharmaNet Professional and Software Conformance Standards\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n      <li>\n        <p>\n          Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\n          Architecture for Wireless Local Area Network Connectivity&quot;\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n        </a>\n      </li>\n      <li>\n        <p>\n          Policy for Secure Remote Access to PharmaNet\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n    </ol>\n  </li>\n  <li>\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\n    Technology\n    and Associated Technology, and should be capable of understanding and adhering to the standards set forth in this\n    Agreement and Schedule. Note that any such qualified technical support person must not be permitted by Organization\n    to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\n  </li>\n  <li>\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\n    in relation to the Site;\n  </li>\n  <li>\n    establish breach reporting and response processes in relation to the Site;\n  </li>\n  <li>\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\n  </li>\n  <li>\n    regularly review the administrative, physical and technological safeguards at the Site;\n  </li>\n  <li>\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\n    monitoring\n    and reporting mechanisms available to Authorized Users for this purpose.\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            AgreementType = 5,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\n\n<p>\n  <strong>BETWEEN:</strong>\n</p>\n\n<p>\n  HER MAJESTY THE QUEEN IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as represented by the Minister of Health\n  (the &quot;Province&quot;).\n</p>\n\n<p>\n  <strong>AND:</strong>\n</p>\n\n<p>\n  {{organization_name}} (&quot;Organization&quot;)\n</p>\n\n<p>\n  <strong>WHEREAS:</strong>\n</p>\n\n<ol type=\"A\">\n  <li>\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\n    Columbia is entered into PharmaNet.\n  </li>\n  <li>\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is\n    in the public interest to ensure that appropriate measures are in place to protect the confidentiality\n    and integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to\n    the Act and other applicable law.\n  </li>\n  <li>\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\n    the care of, the individual whose personal information is being accessed.\n  </li>\n  <li>\n    Organization is a service provider to HealthLink BC, the Province’s self-care program providing health\n    information and advice to British Columbia through integrated print, web, and telephony channels to help\n    the public make better decisions about their health, and provides Services to the Province in accordance\n    with the Service Contract,\n  </li>\n  <li>\n    Pharmacists at Organization require access to PharmaNet so Organization can provide the Services in\n    accordance with the Service Contract.\n  </li>\n  <li>\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\n    at the Site(s) operated by Organization.\n  </li>\n</ol>\n\n<p>\n  <strong>NOW THEREFORE</strong> in consideration of the promises and the covenants, agreements, representations\n  and warranties set out in this Agreement (the receipt and sufficiency of which is hereby acknowledged by each\n  party), the parties agree as follows:\n</p>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"1\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided Technology\n            used at the Site;\n          </li>\n          <li>\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is in any way\n            used in connection with Site Access or any PharmaNet Data;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\n              Province and who is:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                an employee or independent contractor of Organization, or\n              </li>\n              <li>\n                if Organization is an individual, the Organization;\n              </li>\n            </ol>\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\n            <em>Information Management Regulation</em>, B.C. Reg. 74/2015;\n          </li>\n          <li>\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet\n            and any records or information in the custody, control or possession of Organization or any Authorized User\n            as the result of any Site Access;\n          </li>\n          <li>\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\n            of the <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;Service Contract&quot;</strong> means the contract for services between the Province and\n            Organization, contract file number 2021-075, dated November 1, 2020, as amended from time to time by the\n            parties in accordance with its terms;\n          </li>\n          <li>\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\n            &quot;Signing Authority&quot; for a Site, with the associated contact information, as set out in section 2\n            of the Site Request;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Site&quot;</strong> means a licensed community pharmacy premises operated by Organization\n              and located in British Columbia that:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                is the subject of a Site Request submitted to the Province, and\n              </li>\n              <li>\n                has been approved for Site Access by the Province in writing\n              </li>\n            </ol>\n          </li>\n          <li>\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site as permitted by\n            the Province;\n          </li>\n          <li>\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\n            PharmaNet access request form submitted to the Province by the Organization, requesting PharmaNet access at\n            the Site, as such information is updated by the Organization from time to time in accordance with\n            section 2.2;\n          </li>\n          <li>\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\n            services provided to Organization by an Approved SSO for the purpose of Site Access;\n          </li>\n        </ol>\n      </li>\n      <li>\n        Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\n        British Columbia of that name, as amended or replaced from time to time, and includes any enactments made\n        under the authority of that statute or regulation.\n      </li>\n      <li>\n        <p>\n          The following are the Schedules attached to and incorporated into this Agreement:\n        </p>\n\n        <ul>\n          <li>\n            Schedule A – Specific Privacy and Security Measures\n          </li>\n        </ul>\n      </li>\n      <li>\n        The main body of this Agreement, the Schedules, and any documents incorporated by reference into this Agreement\n        are to be interpreted so that all of the provisions are given as full effect as possible. In the event of a\n        conflict, unless expressly stated to the contrary, the main body of the Agreement will prevail over the\n        Schedules, which will prevail over any document incorporated by reference.\n      </li>\n      <li>\n        For greater certainty, nothing in this Agreement is intended to modify or otherwise limit the applicability of\n        the privacy, security or confidentiality obligations agreed to by the Organization in the Service Contract.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"2\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          Organization represents and warrants to the Province, as of the date of this Agreement and throughout its\n          term, that:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the information contained in the Site Request for each Site is true and correct;\n          </li>\n          <li>\n            <p>\n              if Organization is not an individual:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\n              </li>\n              <li>\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery of\n                this Agreement by, or on behalf of, Organization; and\n              </li>\n              <li>\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\n                legally binding upon and enforceable against Organization in accordance with its terms.\n              </li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization must notify the Province at least seven (7) days in advance of any change to the information\n        contained in a Site Request, including any change to a Site’s status, location, normal operating hours,\n        Approved SSO, or the name and contact information of the Signing Authority or any of the other specific\n        roles set out in the Site Request. Such notices must be submitted to the Province in the form and manner\n        directed by the Province in its published instructions regarding the submission of updated Site Request\n        information, as such instructions may be updated from time to time by the Province.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"3\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must comply with the Act and all applicable law.\n      </li>\n      <li>\n        Organization must submit a Site Request to the Province for each physical location where it intends to provide\n        Site Access, and must only provide Site Access from Sites approved in writing by the Province and only as\n        authorized by the Province.\n      </li>\n      <li>\n        Organization must only provide Site Access using SSO-Provided Technology.\n      </li>\n      <li>\n        Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network\n        or security technology that the Province certifies or makes available to Organization for the purpose of Site\n        Access. The use of any such network or technology by Organization may be subject to terms and conditions of\n        use, including acceptable use policies, established by the Province and communicated to Organization from time\n        to time in writing (including through this Agreement), and Organization must comply with all such terms and\n        conditions of use.\n      </li>\n      <li>\n        <p>\n          Organization must only make Site Access available to the following individuals:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            Authorized Users when they are physically located at a Site;\n          </li>\n          <li>\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\n            <em>Information Management Regulation</em>.\n          </li>\n        </ol>\n      </li>\n      <li>\n        <p>\n          Organization must ensure that Authorized Users with Site Access:\n        </p>\n        <ol type=\"a\">\n          <li>\n            only access PharmaNet to the extent necessary to provide Services in accordance with the Service Contract;\n          </li>\n          <li>\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\n            available in relation to PharmaNet;\n          </li>\n          <li>\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\n            multiple use of any such login identifications and credentials;\n          </li>\n          <li>\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use;\n          </li>\n        </ol>\n      </li>\n      <li>\n        If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\n        Organization will immediately take any local measures necessary to remove the Authorized User’s Site Access.\n        Organization will only restore Site Access to a previously suspended or revoked Authorized User upon the\n        Province’s specific written direction.\n      </li>\n      <li>\n        <p>\n          For the purposes of this section:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\n            Regulated User by whom that data was obtained from PharmaNet; and\n          </li>\n          <li>\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\n          </li>\n        </ol>\n\n        <p>\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\n          Responsible Authorized User to whom it is disclosed.\n        </p>\n\n        <p>\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\n          Responsible Authorized User has authorized such Use and it is otherwise permitted under the Act, applicable\n          law, and the limits and conditions imposed by the Province on the Responsible Authorized User.\n        </p>\n\n        <p>\n          Organization explicitly acknowledges that sections 24 and 25 of the Act apply to all PharmaNet Data.\n        </p>\n\n        <p>\n          This Agreement documents limits and conditions, set by the Minister in writing, that the Act requires\n          Organization and Authorized Users to comply with.\n        </p>\n      </li>\n      <li>\n        <p>\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\n          unauthorized access, collection, use, modification, retention, disclosure or disposal, including by:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\n            in accordance with sections 3.1 to 3.9 above, and\n          </li>\n          <li>\n            complying with the requirements of Schedule A.\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization must ensure that no Authorized User submits Claims on PharmaNet other than from a Site in respect\n        of which\n        a person is enrolled as a Provider.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"4\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\n        anticipates that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge\n        of any circumstances, incidents or events which have or may jeopardize the security, confidentiality or\n        integrity of PharmaNet, including any attempt by any person to gain unauthorized access to PharmaNet or the\n        networks or equipment used to connect to PharmaNet or convey PharmaNet Data.\n      </li>\n      <li>\n        Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable steps\n        to prevent recurrences of any such breaches.\n      </li>\n      <li>\n        Organization must cooperate with any audits or investigations conducted by the Province (including any\n        independent auditor appointed by the Province) regarding compliance with this Agreement, including by providing\n        access upon request to a Site and any associated facilities, networks, equipment, systems, books, records and\n        personnel for the purposes of such audit or investigation.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"5\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for\n          the Site, if:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\n            hardware, software, or service in connection with PharmaNet, or\n          </li>\n          <li>\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or\n            any component thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to\n            PharmaNet and Organization is unable or unwilling to remedy the problem within a time frame acceptable to\n            the Province.\n          </li>\n        </ol>\n      </li>\n      <li>\n        As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\n        Access at a Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to\n        the Signing Authority for the Site, terminate all further Site Access at the Site.\n      </li>\n      <li>\n        Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\n        accordance with this Article 5 of Site Access at the Site.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"6\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          The term of this Agreement begins on the date first noted above and continues until the earliest of:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the expiration or earlier termination of the term of the Service Contract; or\n          </li>\n          <li>\n            the date this Agreement is terminated in accordance with this Article 6.\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization may terminate this Agreement at any time on notice to the Province.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\n        comply with any provision of this Agreement.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\n        longer operates any Sites where Site Access is permitted.\n      </li>\n      <li>\n        The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\n      </li>\n      <li>\n        Organization must prevent any further Site Access immediately upon expiration or termination of the term of\n        this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"7\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The PharmaNet access and PharmaNet Data provided under this Agreement are provided \"as is\" without warranty of\n        any kind, whether express or implied. All implied warranties, including, without limitation, implied warranties\n        of merchantability, fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed.\n        The Province does not warrant the accuracy, completeness or reliability of the PharmaNet Data or the\n        availability of PharmaNet, or that access to or the operation of PharmaNet will function without error,\n        failure or interruption.\n      </li>\n      <li>\n        Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\n        special, incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data,\n        including without limitation any lost profits, business interruption, or loss of programs or information, even\n        if the Province has been specifically advised of the possibility of such damages.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 8 – GENERAL</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"8\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\n          of delivery, any notice to be given to the Province must be in writing and mailed or emailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n        <p>\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\n          faxed or text-messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a URL\n          link or to log in to the Province’s \"PRIME\" system to receive the content of any such notice.\n        </p>\n\n        <p>\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\n          the time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\n          Saturdays, Sundays and statutory holidays) after the date the notice was sent.\n        </p>\n      </li>\n      <li>\n        <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\n        any provision of this Agreement by Organization is not a waiver of its right subsequently to insist on\n        performance of that or any other provision of this Agreement. A waiver of any provision or breach of this\n        Agreement is effective only if it is writing and signed by, or on behalf of, the waiving party.\n      </li>\n      <li>\n        <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\n        in writing and signed by, or on behalf of, the parties.\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Survival.</strong> Sections 3.1, 3.8, 3.9, 4, 7 and any other provision of this\n          Agreement that expressly or by its nature continues after termination, shall survive termination of this\n          Agreement.\n        </p>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n{{signature_block}}\n\n<p class=\"text-center break-before\">\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\n</p>\n\n<p>\n  Organization must, in relation to each Site\n</p>\n\n<ol type=\"a\">\n  <li>\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other than\n    Authorized Users;\n  </li>\n  <li>\n    <p>\n      implement all privacy and security measures specified in the following documents published by the Province, as\n      amended from time to time:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        <p>\n          the PharmaNet Professional and Software Conformance Standards\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n      <li>\n        <p>\n          Office of the Chief Information Officer: \"Submission for Technical Security Standard and High Level\n          Architecture for Wireless Local Area Network Connectivity\"\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n        </a>\n      </li>\n    </ol>\n  </li>\n  <li>\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\n    Technology and Associated Technology, and should be capable of understanding and adhering to the standards set\n    forth in this Agreement and Schedule. Note that any such qualified technical support person must not be permitted\n    by Organization to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\n  </li>\n  <li>\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\n    in relation to the Site;\n  </li>\n  <li>\n    establish breach reporting and response processes in relation to the Site;\n  </li>\n  <li>\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\n  </li>\n  <li>\n    regularly review the administrative, physical and technological safeguards at the Site;\n  </li>\n  <li>\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\n    monitoring and reporting mechanisms available to Authorized Users for this purpose.\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            AgreementType = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<h1>PHARMANET USER TERMS OF ACCESS FOR PHARMACISTS</h1>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means the physical site at which you provide Direct Patient Care\n            and which is approved by the Province for PharmaNet access.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards<br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n                </a>; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n                </a>\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider”</strong> means a person enrolled under section 11 of the Act in the class of\n            provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <em>Information Management Regulation</em>,\n            B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet on your behalf;\n            and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or an On-Behalf-of User that was obtained\n            through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the <em>Health\n                      Professions Act</em>, or your practice as a Device Provider, as identified by you through PRIME\n            or another mechanism provided by the Province.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the\n            <em>Freedom of Information and Protection of Privacy Act</em>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the Province, whether arising under\n            statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the purpose of receiving\n            payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <em>Provider Regulation</em>, B.C. Reg. 222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further limits\n            or conditions communicated to you in writing by the Province, unless the conflicting provision expressly\n            states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act, the\n      Information Management Regulation and all Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act (including but not limited to sections 24, 25 and 29) and the Information\n        Management Regulation apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in this Agreement. The Province may from time to time, at its\n        discretion, amend or change the scope of your access privileges to PharmaNet as privacy, security, business and\n        clinical practice requirements change. In such circumstances, the Province will use reasonable efforts to notify\n        you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet or, in the case of access as a Device\n            Provider, for so long as you are enrolled as a Device Provider;\n          </li>\n          <li>\n            you will only access PharmaNet: at the Approved Practice Site, and using only the technologies and\n            applications approved by the Province;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access takes\n            place at the Approved Practice Site and the access is required in relation to patients for whom you will be\n            providing Direct Patient Care at the Approved Practice Site;\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved Practice Site in respect of which a\n            person is enrolled as a Provider, and you will ensure that On-Behalf-of Users submit Claims on PharmaNet\n            only from an Approved Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as\n            required by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Approved Practice Site to prevent\n            viewing of PharmaNet Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and\n            prohibit sharing or other multiple use of your access credential, or an On-Behalf-of User’s access\n            credential, for access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access\n            to PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with the\n        Act, the Provider Regulation, and Professional College requirements and in connection with your provision of\n        Direct Patient Care and otherwise is in compliance with the Conformance Standards. You will not modify any\n        records retained in accordance with this section other than as may be expressly authorized in the Conformance\n        Standards. For clarity, you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record Contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON-COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet Access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the\n        <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\n        thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by Operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You Are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province If You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement or in connection with access to PharmaNet by you or an\n        On-Behalf-of User.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content of\n        any such notice.\n      </li>\n      <li>\n        <strong>Deemed Receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent by\n        mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays) after\n        the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute Contact Information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vi) (vii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province May Modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            AgreementType = 6,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>\n  PHARMANET TERMS OF ACCESS FOR PHARMACY OR DEVICE PROVIDER ON-BEHALF-OF USER\n</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<p class=\"bold underline\">\n  On-Behalf-of User Access\n</p>\n\n<ol>\n  <li>\n    <p>\n      You represent and warrant to the Province that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\n        support the Practitioner’s delivery of Direct Patient Care;\n      </li>\n      <li>\n        you are directly supervised by a Practitioner, who has been granted access to PharmaNet by the Province; and\n      </li>\n      <li>\n        all information provided by you in connection with your application for PharmaNet access, including all\n        information submitted through PRIME, is true and correct.\n      </li>\n    </ol>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Definitions\n</p>\n\n<ol start=\"2\">\n  <li>\n\n    <p>\n      In these terms, capitalized terms will have the following meanings:\n    </p>\n\n    <ul class=\"list-unstyled\">\n      <li>\n        <strong>“Approved Practice Site”</strong> means the physical site at which a Practitioner provides Direct\n        Patient Care and which is approved by the Province for PharmaNet access. For greater certainty, “Approved\n        Practice Site” does not include a location from which remote access to PharmaNet takes place.\n      </li>\n      <li>\n        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\n      </li>\n      <li>\n        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n        following website (or such other website as may be specified by the Province from time to time for this\n        purpose):\n\n        <br><br>\n\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.gov.bc.ca/pharmacarenewsletter</a>\n      </li>\n      <li>\n        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the <em>Information Management\n        Regulation, B.C</em>. Reg. 74/2015.\n      </li>\n      <li>\n        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record or\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\n        PharmaNet by anyone.\n      </li>\n      <li>\n        <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n      </li>\n      <li>\n        <strong>“Practitioner”</strong> means a health professional regulated under the <em>Health Professions Act</em>,\n        or an\n        enrolled device provider under the <em>Provider Regulation</em>, B.C. Reg. 222/2014,who supervises your access\n        to and use of PharmaNet and who has been granted access to PharmaNet by the Province.\n      </li>\n      <li>\n        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for, and\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\n      </li>\n      <li>\n        <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n        Minister of Health.\n      </li>\n    </ul>\n\n  </li>\n  <li>\n    Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\n    British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\n    authority of that statute or regulation.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Terms of Access to PharmaNet\n</p>\n\n<ol start=\"4\">\n  <li>\n\n    <p>\n      You must:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        access and use PharmaNet and PharmaNet Data only at the Approved Practice Site of a Practitioner;\n      </li>\n      <li>\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by a Practitioner to\n        the individuals whose PharmaNet Data you are accessing, and only if the Practitioner is or will be delivering\n        Direct Patient Care requiring that access to those individuals at the same Approved Practice Site at which the\n        access occurs;\n      </li>\n      <li>\n        only access PharmaNet as permitted by law and directed by a Practitioner;\n      </li>\n      <li>\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\n        strict confidence;\n      </li>\n      <li>\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\n      </li>\n      <li>\n        complete all training required by the Approved Practice Site’s PharmaNet software vendor and the Province before\n        accessing PharmaNet;\n      </li>\n      <li>\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\n        accessed or used inappropriately by any person.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p>\n      You must not:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and directed\n        by a Practitioner;\n      </li>\n      <li>\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n      </li>\n      <li>\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n      </li>\n      <li>\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n      </li>\n      <li>\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\n        such as altering information or submitting false information;\n      </li>\n      <li>\n        test the security related to PharmaNet;\n      </li>\n      <li>\n        attempt to access PharmaNet from any location other than the Approved Practice Site of a Practitioner, including\n        by VPN or other remote access technology;\n      </li>\n      <li>\n        access PharmaNet unless the access is for the purpose of supporting a Practitioner in providing Direct Patient\n        Care to a patient at the same Approved Practice Site at which your access occurs;\n      </li>\n      <li>\n        use PharmaNet to submit claims to PharmaCare or a third-party insurer unless directed to do so by a Practitioner\n        at an Approved Practice Site that is enrolled as a provider or device provider under the\n        <em>Provider Regulation</em>, B.C. Reg. 222/2014.\n      </li>\n    </ol>\n  </li>\n</ol>\n<ol start=\"6\">\n  <li>\n    Your access to PharmaNet and use of PharmaNet Data are governed by the Pharmaceutical Services Act and you must\n    comply with all your duties under that Act.\n  </li>\n  <li>\n    The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\n    either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  How to Notify the Province\n</p>\n\n<ol start=\"8\">\n  <li>\n\n    <p>\n      Notice to the Province may be sent in writing to:\n    </p>\n\n    <address>\n      Director, Information and PharmaNet Innovation<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n      <br>\n\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n    </address>\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Province May Modify These Terms\n</p>\n\n<ol start=\"9\">\n  <li>\n\n    <p>\n      The Province may amend these terms, including this section, at any time in its sole discretion:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\n        Province, if any; or\n      </li>\n      <li>\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\n        PharmaCare Newsletter containing the notice is first published.\n      </li>\n    </ol>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Governing Law\n</p>\n\n<ol start=\"10\">\n  <li>\n\n    <p>\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n      Columbia and the laws of Canada applicable therein.\n    </p>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            AgreementType = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -8, 0, 0, 0)),
                            Text = "<h1>\n  PHARMANET TERMS OF ACCESS FOR ON-BEHALF-OF USER<br>\n</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<p class=\"bold underline\">\n  On Behalf-of-User Access\n</p>\n\n<ol>\n  <li>\n    <p>\n      You represent and warrant to the Province that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\n        support the Practitioner’s delivery of Direct Patient Care;\n      </li>\n      <li>\n        you are directly supervised by a Practitioner who has been granted access to PharmaNet by the Province; and\n      </li>\n      <li>\n        all information provided by you in connection with your application for PharmaNet access, including all\n        information submitted through PRIME, is true and correct.\n      </li>\n    </ol>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Definitions\n</p>\n\n<ol start=\"2\">\n  <li>\n    <p>\n      In these terms, capitalized terms will have the following meanings:\n    </p>\n\n    <ul class=\"list-unstyled\">\n      <li>\n        <strong>“Approved Practice Site”</strong> means the physical site at which a Practitioner provides Direct\n        Patient Care and which is approved by the Province for PharmaNet access. For greater certainty, “Approved\n        Practice Site” does not include a location from which remote access to PharmaNet takes place.\n      </li>\n      <li>\n        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\n      </li>\n      <li>\n        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n        following website (or such other website as may be specified by the Province from time to time for this\n        purpose):\n\n        <br><br>\n\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n      </li>\n      <li>\n        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the <em>Information Management\n        Regulation</em>, B.C. Reg. 74/2015.\n      </li>\n      <li>\n        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record or\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\n        PharmaNet by anyone.\n      </li>\n      <li>\n        <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n      </li>\n      <li>\n        <strong>“Practitioner”</strong> means a health professional regulated under the <em>Health Professions Act</em>,\n        or an enrolled device provide under the <em>Provider Regulation</em> B.C. Reg. 222/2014, who supervises your\n        access to and use of PharmaNet and who has been granted access to PharmaNet by the Province.\n      </li>\n      <li>\n        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for, and\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\n      </li>\n      <li>\n        <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n        Minister of Health.\n      </li>\n    </ul>\n\n  </li>\n  <li>\n    Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\n    British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\n    authority of that statute or regulation.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Terms of Access to PharmaNet\n</p>\n\n<ol start=\"4\">\n  <li>\n\n    <p>\n      You must:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        access and use PharmaNet and PharmaNet Data only at the Approved Practice Site of a Practitioner;\n      </li>\n      <li>\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by a Practitioner to\n        the individuals whose PharmaNet Data you are accessing, and only if the Practitioner is or will be delivering\n        Direct Patient Care requiring that access to those individuals at the same Approved Practice Site at which the\n        access occurs;\n      </li>\n      <li>\n        only access PharmaNet as permitted by law and directed by a Practitioner;\n      </li>\n      <li>\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\n        strict confidence;\n      </li>\n      <li>\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\n      </li>\n      <li>\n        complete all training required by the Approved Practice Site’s PharmaNet software vendor and the Province before\n        accessing PharmaNet;\n      </li>\n      <li>\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\n        accessed or used inappropriately by any person.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p>\n      You must not:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and\n        directed by a Practitioner;\n      </li>\n      <li>\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n      </li>\n      <li>\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n      </li>\n      <li>\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n      </li>\n      <li>\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\n        such as altering information or submitting false information;\n      </li>\n      <li>\n        test the security related to PharmaNet;\n      </li>\n      <li>\n        attempt to access PharmaNet from any location other than the Approved Practice Site of a Practitioner,\n        including by VPN or other remote access technology;\n      </li>\n      <li>\n        access PharmaNet unless the access is for the purpose of supporting a Practitioner in providing Direct\n        Patient Care to a patient at the same Approved Practice Site at which your access occurs.\n      </li>\n    </ol>\n  </li>\n</ol>\n<ol start=\"6\">\n  <li>\n    Your access to PharmaNet and use of PharmaNet Data are governed by the <em>Pharmaceutical Services Act</em> and you\n    must comply with all your duties under that Act.\n  </li>\n  <li>\n    The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\n    either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  How to Notify the Province\n</p>\n\n<ol start=\"8\">\n  <li>\n\n    <p>\n      Notice to the Province may be sent in writing to:\n    </p>\n\n    <address>\n      Director, Information and PharmaNet Development<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n      <br>\n\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n    </address>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Province May Modify These Terms\n</p>\n\n<ol start=\"9\">\n  <li>\n    <p>\n      The Province may amend these terms, including this section, at any time in its sole discretion:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\n        Province, if any; or\n      </li>\n      <li>\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\n        PharmaCare Newsletter containing the notice is first published.\n      </li>\n    </ol>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n\n    <p>\n      Any written notice to you under (i) above will be in writing and delivered by the Province to you using any of the\n      contact mechanisms identified by you in PRIME, including by mail to a specified postal address, email to a\n      specified email address or text message to a specified cell phone number. You may be required to click a URL link\n      or log into PRIME to receive the contents of any such notice.\n    </p>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Governing Law\n</p>\n\n<ol start=\"10\">\n  <li>\n\n    <p>\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n      Columbia and the laws of Canada applicable therein.\n    </p>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            AgreementType = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 11, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -8, 0, 0, 0)),
                            Text = "<h1>PHARMANET REGULATED USER TERMS OF ACCESS</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the &quot;Agreement&quot;). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul>\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>&quot;Approved Practice Site&quot;</strong> means the physical site at which you provide Direct\n            Patient Care and which is approved by the Province for PharmaNet access. For greater certainty,\n            &quot;Approved Practice Site&quot; does not include a location from which remote access to PharmaNet takes\n            place;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means a software support organization approved by the Province\n            that provides you with the information technology software and/or services through which you and\n            On-Behalf-of Users access PharmaNet.\n          </li>\n          <li>\n\n            <p>\n              <strong>&quot;Conformance Standards&quot;</strong> means the following documents published by the\n              Province, as amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity&quot;.\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>&quot;Direct Patient Care&quot;</strong> means, for the purposes of this Agreement, the provision of\n            health services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the Information Management Regulation,\n            B.C. Reg. 74/2015.\n          </li>\n          <li>\n            <strong>&quot;On-Behalf-of User&quot;</strong> means a member of your staff who (i) requires access to\n            PharmaNet to carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet\n            on your behalf; and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>&quot;Personal Information&quot;</strong> means all recorded information that is about an\n            identifiable individual or is defined as, or deemed to be, &quot;personal information&quot; or\n            &quot;personal health information&quot; pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>&quot;PharmaCare Newsletter&quot;</strong> means the PharmaCare newsletter published by the Province\n            on the following website (or such other website as may be specified by the Province from time to time for\n            this purpose):\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">\n              www.gov.bc.ca/pharmacarenewsletter\n            </a>\n          </li>\n          <li>\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any record or information contained in PharmaNet and\n            any record or information in the custody, control or possession of you or an On-Behalf-of User that was\n            obtained through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>&quot;Practice&quot;</strong> means your practice of the health profession regulated under the\n            <em>Health Professions Act</em>, or your practice as an enrolled device provider under the Provider\n            Regulation, B.C. Reg. 222/2014, as identified by you through PRIME.\n          </li>\n          <li>\n            <strong>&quot;PRIME&quot;</strong> means the online service provided by the Province that allows users to\n            apply for, and manage, their access to PharmaNet, and through which users are granted access by the\n            Province.\n          </li>\n          <li>\n            <strong>&quot;Privacy Laws&quot;</strong> means the Act, the <em>Freedom of Information and Protection of\n            Privacy Act</em>, the <em>Personal Information Protection Act</em>, and any other statutory or legal\n            obligations of privacy owed by you or the Province, whether arising under statute, by contract or at common\n            law.\n          </li>\n          <li>\n            <strong>&quot;Province&quot;</strong> means Her Majesty the Queen in Right of British Columbia, as\n            represented by the Minister of Health.\n          </li>\n          <li>\n            <strong>&quot;Professional College&quot;</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n\n            <p>\n              <strong>&quot;Unauthorized Person&quot;</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further\n            limits or conditions communicated to you in writing by the Province, unless the conflicting provision\n            expressly states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act, including the <em>Information Management Regulation</em> and sections 24, 25 and\n        29 of the Act, apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in section 5(b) below and otherwise in this Agreement. The\n        Province may from time to time, at its discretion, amend or change the scope of your access privileges to\n        PharmaNet as privacy, security, business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Limits and Conditions of Access.</strong> The following limits and conditions apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet;\n          </li>\n          <li>\n            unless (iii) below applies, you will only access PharmaNet at the Approved Practice Site, and using only the\n            technologies and applications approved by the Province.\n          </li>\n          <li>\n            <p>\n              you may only access PharmaNet using remote access technology if all of the following conditions are met:\n            </p>\n\n            <ol>\n              <li>\n                the remote access technology used at the Approved Practice Site has been specifically approved in\n                writing by the Province,\n              </li>\n              <li>\n                the requirements of the Province’s Policy for Remote Access to PharmaNet\n                (<a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>) are met,\n              </li>\n              <li>\n                your Approved Practice Site has registered you with the Province for remote access at the Approved\n                Practice Site,\n              </li>\n              <li>\n                you have applied to the Province for remote access at the Approved Practice Site and the Province has\n                approved that application in writing, and\n              </li>\n              <li>\n                you are physically located in British Columbia at the time of any such remote access.\n              </li>\n            </ol>\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access takes\n            place at the Approved Practice Site and the access is in relation to patients for whom you will be providing\n            Direct Patient Care at the Approved Practice Site requiring the access to PharmaNet;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of Users do not access PharmaNet using VPN or other remote access\n            technology\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of deidentification or aggregation, quality improvement, evaluation, health\n            care planning, surveillance, research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as required\n            by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Practice to prevent viewing of PharmaNet\n            Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and prohibit\n            sharing or other multiple use of your access credential, or an On-Behalf-of User’s access credential, for\n            access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\n            PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with\n        Professional College requirements and in connection with your provision of Direct Patient Care and otherwise\n        is in compliance with the Conformance Standards. You will not modify any records retained in accordance with\n        this section other than as may be expressly authorized in the Conformance Standards. For clarity, you may\n        annotate a discrete record provided that the discrete record is not itself modified other than as expressly\n        authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or &quot;print outs&quot; produced directly from PharmaNet, and will refer any requests for access to such\n        records or &quot;print outs&quot; to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates your\n        right to access PharmaNet under the <em>Information Management Regulation</em>, this Agreement will\n        automatically terminate as of the date of such suspension or termination.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an &quot;as is&quot; and\n        &quot;as available&quot; basis without warranty or condition of any kind. The Province does not warrant the\n        accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\n        to or the operation of PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents  (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content\n        of any such notice.\n      </li>\n      <li>\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent\n        by mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays)\n        after the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vii) (viii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            AgreementType = 7,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\n\n<p>\n  This Organization Agreement for PharmaNet Use (the &quot;Agreement&quot;) is executed by {{organization_name}}\n  (&quot;Organization&quot;) for the benefit of HER MAJESTY THE QUEEN IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as\n  represented by the Minister of Health (the &quot;Province&quot;).\n</p>\n\n<p>\n  <strong>WHEREAS:</strong>\n</p>\n\n<ol type=\"A\">\n  <li>\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\n    Columbia is entered into PharmaNet.\n  </li>\n  <li>\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is in\n    the public interest to ensure that appropriate measures are in place to protect the confidentiality and\n    integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to the\n    Act and other applicable law.\n  </li>\n  <li>\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\n    the care of, the individual whose personal information is being accessed.\n  </li>\n  <li>\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\n    at the Site(s) operated by Organization.\n  </li>\n</ol>\n\n<p>\n  <strong>NOW THEREFORE</strong> Organization makes this Agreement knowing that the Province will rely on it\n  in permitting access to and use of PharmaNet from Sites operated by Organization. Organization conclusively\n  acknowledges that reliance by the Province on this Agreement is in every respect justifiable and that it\n  received fair and valuable consideration for this Agreement, the receipt and adequacy of which is hereby\n  acknowledged. Organization hereby agrees as follows:\n</p>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"1\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided\n            Technology used at the Site;\n          </li>\n          <li>\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is\n            in any way used in connection with Site Access or any PharmaNet Data;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\n              Province and who is:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                an employee or independent contractor of Organization, or\n              </li>\n              <li>\n                if Organization is an individual, the Organization;\n              </li>\n            </ol>\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\n            <em>Information Management Regulation</em>,\n            B.C. Reg. 74/2015;\n          </li>\n          <li>\n            <strong>&quot;On-Behalf-Of User&quot;</strong> means an Authorized User described in subsection 4 (5) of the\n            <em>Information Management Regulation</em> who acts on behalf of a Regulated User when accessing\n            PharmaNet;\n          </li>\n          <li>\n            &quot;PharmaNet&quot; means PharmaNet as continued under section 2 of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet and\n            any records\n            or information in the custody, control or possession of Organization or any Authorized User as the result of\n            any Site Access;\n          </li>\n          <li>\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\n            of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\n            &quot;Signing Authority&quot;\n            for a Site, with the associated contact information, as set out in section 2 of the Site Request;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Site&quot;</strong> means a premises operated by Organization and located in British\n              Columbia that:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                is the subject of a Site Request submitted to the Province, and\n              </li>\n              <li>\n                has been approved for Site Access by the Province in writing\n              </li>\n            </ol>\n\n            <p class=\"underline\">\n              For greater certainty, &quot;Site&quot; does not include a location from which remote access to PharmaNet\n              takes place;\n            </p>\n          </li>\n          <li>\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site or remotely as\n            permitted\n            by the Province;\n          </li>\n          <li>\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\n            PharmaNet access\n            request form submitted to the Province by the Organization, requesting PharmaNet access at the Site, as such\n            information is updated by the Organization from time to time in accordance with section 2.2;\n          </li>\n          <li>\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\n            services\n            provided to Organization by an Approved SSO for the purpose of Site Access;\n          </li>\n        </ol>\n      </li>\n      <li>\n        Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\n        British\n        Columbia of that name, as amended or replaced from time to time, and includes any enactments made under the\n        authority\n        of that statute or regulation.\n      </li>\n      <li>\n        <p>\n          The following are the Schedules attached to and incorporated into this Agreement:\n        </p>\n\n        <ul>\n          <li>\n            Schedule A – Specific Privacy and Security Measures\n          </li>\n        </ul>\n      </li>\n      <li>\n        The main body of this Agreement, the Schedules, and any documents incorporated by reference into this Agreement\n        are to\n        be interpreted so that all of the provisions are given as full effect as possible. In the event of a conflict,\n        unless\n        expressly stated to the contrary the main body of the Agreement will prevail over the Schedules, which will\n        prevail\n        over any document incorporated by reference.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"2\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          Organization represents and warrants to the Province, as of the date of this\n          Agreement and throughout its term, that:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the information contained in the Site Request for each Site is true and correct;\n          </li>\n          <li>\n            <p>\n              if Organization is not an individual:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\n              </li>\n              <li>\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery\n                of this Agreement by, or on behalf of, Organization; and\n              </li>\n              <li>\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\n                legally binding upon and enforceable against Organization in accordance with its terms.\n              </li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization must immediately notify the Province of any change to the information contained in a Site Request,\n        including any change to a Site’s status, location, normal operating hours, Approved SSO, or the name and contact\n        information of the Signing Authority or any of the other specific roles set out in the Site Request. Such\n        notices\n        must be submitted to the Province in the form and manner directed by the Province in its published instructions\n        regarding the submission of updated Site Request information, as such instructions may be updated from time to\n        time by the Province.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"3\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must comply with the Act and all applicable law.\n      </li>\n      <li>\n        Organization must submit a Site Request to the Province for each physical location where it intends to provide\n        Site\n        Access, and must only provide Site Access from Sites approved in writing by the Province. For greater certainty,\n        a\n        Site Request is not required for each physical location from which remote access, as permitted under section\n        3.6,\n        may occur, but Organization must provide, with the Site Request, a list of the locations from which remote\n        access\n        may occur, and ensure this list remains current for the term of this agreement.\n      </li>\n      <li>\n        Organization must only provide Site Access using SSO-Provided Technology. For the purposes of remote access,\n        Organization must ensure that technology used meets the requirements of Schedule A.\n      </li>\n      <li>\n        Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network or\n        security technology that the Province certifies or makes available to Organization for the purpose of Site\n        Access.\n        The use of any such network or technology by Organization may be subject to terms and conditions of use,\n        including\n        acceptable use policies, established by the Province and communicated to Organization from time to time in\n        writing.\n      </li>\n      <li>\n        <p>\n          Organization must only make Site Access available to the following individuals:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            Authorized Users when they are physically located at a Site, and, in the case of an On-Behalf-of-User\n            accessing\n            personal information of a patient on behalf of a Regulated User, only if the Regulated User will be\n            delivering\n            care to that patient at the same Site at which the access to personal information occurs;\n          </li>\n          <li>\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\n            <em>Information Management Regulation</em>.\n          </li>\n        </ol>\n      </li>\n      <li>\n        Despite section 3.5(a), Organization may make Site Access available to Regulated Users who are physically\n        located in\n        British Columbia and remotely connected to a Site using a VPN or other remote access technology specifically\n        approved\n        by the Province in writing for the Site.\n      </li>\n      <li>\n        <p>\n          Organization must ensure that Authorized Users with Site Access:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            only access PharmaNet to the extent necessary to provide health services to, or facilitate the care of, the\n            individual whose personal information is being accessed;\n          </li>\n          <li>\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\n            available\n            in relation to PharmaNet;\n          </li>\n          <li>\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\n            multiple use of any such login identifications and credentials;\n          </li>\n          <li>\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use; and\n          </li>\n          <li>\n            in the case of remote access, comply with the policies of the Province relating to remote access to\n            PharmaNet.\n          </li>\n        </ol>\n      </li>\n      <li>\n        If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\n        Organization\n        will immediately take any local measures necessary to remove the Authorized User’s Site Access. Organization\n        will\n        only restore Site Access to a previously suspended or revoked Authorized User upon the Province’s specific\n        written\n        direction.\n      </li>\n      <li>\n        <p>\n          For the purposes of this section:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\n            Regulated User by whom,\n            or on whose behalf, that data was obtained from PharmaNet; and\n          </li>\n          <li>\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\n          </li>\n        </ol>\n\n        <p>\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\n          Responsible\n          User to whom it is disclosed.\n        </p>\n\n        <p>\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\n          Responsible\n          User has authorized such Use and it is otherwise permitted under the Act, applicable law, and the limits and\n          conditions imposed by the Province on the Responsible User.\n        </p>\n      </li>\n      <li>\n        <p>\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\n          unauthorized access,\n          collection, use, modification, retention, disclosure or disposal, including by:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\n            in\n            accordance with sections 3.1 to 3.9 above, and\n          </li>\n          <li>\n            complying with the requirements of Schedule A.\n          </li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"4\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\n        anticipates\n        that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge of any\n        circumstances,\n        incidents or events which have or may jeopardize the security, confidentiality or integrity of PharmaNet,\n        including any\n        attempt by any person to gain unauthorized access to PharmaNet or the networks or equipment used to connect to\n        PharmaNet\n        or convey PharmaNet Data.\n      </li>\n      <li>\n        Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable steps\n        to prevent\n        recurrences of any such breaches.\n      </li>\n      <li>\n        Organization must cooperate with any audits or investigations conducted by the Province (including any\n        independent auditor\n        appointed by the Province) regarding compliance with this Agreement, including by providing access upon request\n        to a Site\n        and any associated facilities, networks, equipment, systems, books, records and personnel for the purposes of\n        such audit\n        or investigation.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"5\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for the\n          Site, if:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\n            hardware, software,\n            or service in connection with PharmaNet, or\n          </li>\n          <li>\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or any\n            component\n            thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to PharmaNet,\n          </li>\n        </ol>\n\n        <p>\n          and the Organization is unable or unwilling to remedy the problem within a timeframe acceptable to the\n          Province.\n        </p>\n      </li>\n      <li>\n        As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\n        Access at a\n        Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to the Signing\n        Authority\n        for the Site, terminate all further Site Access at the Site.\n      </li>\n      <li>\n        Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\n        accordance with\n        this Article 5, of Site Access at the Site.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"6\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The term of this Agreement begins on the date first noted above and continues until it is terminated\n        in accordance with this Article 6.\n      </li>\n      <li>\n        Organization may terminate this Agreement at any time on notice to the Province.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\n        comply with any\n        provision of this Agreement.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\n        longer operates\n        any Sites where Site Access is permitted.\n      </li>\n      <li>\n        The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\n      </li>\n      <li>\n        Organization must prevent any further Site Access immediately upon termination of this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"7\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The PharmaNet access and PharmaNet Data provided under this Agreement are provided &quot;as is&quot; without\n        warranty of any kind,\n        whether express or implied. All implied warranties, including, without limitation, implied warranties of\n        merchantability,\n        fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed. The Province does not\n        warrant\n        the accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\n        to or\n        the operation of PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\n        special,\n        incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data, including\n        without\n        limitation any lost profits, business interruption, or loss of programs or information, even if the Province has\n        been specifically advised of the possibility of such damages.\n      </li>\n\n      <li>\n        Organization must indemnify and save harmless the Province, and the Province’s employees and agents (each an\n        <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages, actions, causes of action, costs and\n        expenses that an Indemnified Person may sustain, incur, suffer or be put to at any time, either before or after\n        this Agreement ends, which are based upon, arise out of or occur directly or indirectly by reason of any act\n        or omission by Organization, or by any Authorized User at the Site, in connection with this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 8 – GENERAL</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"8\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\n          of delivery, any notice to be given to the Province must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n        <p>\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\n          faxed\n          or text messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a\n          URL link or to log in to the Province’s &quot;PRIME&quot; system to receive the content of any such notice.\n        </p>\n\n        <p>\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\n          the\n          time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\n          Saturdays,\n          Sundays and statutory holidays) after the date the notice was sent.\n        </p>\n      </li>\n      <li>\n        <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\n        any\n        provision of this Agreement by Organization is not a waiver of its right subsequently to insist on performance\n        of\n        that or any other provision of this Agreement. A waiver of any provision or breach of this Agreement is\n        effective\n        only if it is writing and signed by, or on behalf of, the waiving party.\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\n          in writing and signed\n          by, or on behalf of, the parties.\n        </p>\n\n        <p>\n          Notwithstanding the foregoing, the Province may amend this Agreement, including the Schedules and this\n          section,\n          at any time in its sole discretion, by written notice to Organization, in which case the amendment will become\n          effective upon the later of: (i) the date notice of the amendment is delivered to Organization; and (ii) the\n          effective date of the amendment specified by the Province. The Province will make reasonable efforts to\n          provide\n          at least thirty (30) days advance notice of any such amendment, subject to any determination by the Province\n          that a shorter notice period is necessary due to changes in the Act, applicable law or applicable policies of\n          the Province, or is necessary to maintain privacy and security in relation to PharmaNet or PharmaNet Data.\n        </p>\n\n        <p>\n          If Organization does not agree with any amendment for which notice has been provided by the Province in\n          accordance with this section, Organization must promptly (and in any event prior to the effective date)\n          cease Site Access at all Sites and take the steps necessary to terminate this Agreement in accordance\n          with Article 6.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n{{signature_block}}\n\n<p class=\"text-center break-before\">\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\n</p>\n\n<p>\n  Organization must, in relation to each Site and in relation to Remote Access:\n</p>\n\n<ol type=\"a\">\n  <li>\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other\n    than Authorized Users;\n  </li>\n  <li>\n    <p>\n      implement all privacy and security measures specified in the following documents published by the Province, as\n      amended from time to time:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        <p>\n          the PharmaNet Professional and Software Conformance Standards\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n      <li>\n        <p>\n          Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\n          Architecture for Wireless Local Area Network Connectivity&quot;\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n        </a>\n      </li>\n      <li>\n        <p>\n          Policy for Secure Remote Access to PharmaNet\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n    </ol>\n  </li>\n  <li>\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\n    Technology\n    and Associated Technology, and should be capable of understanding and adhering to the standards set forth in this\n    Agreement and Schedule. Note that any such qualified technical support person must not be permitted by Organization\n    to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\n  </li>\n  <li>\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\n    in relation to the Site;\n  </li>\n  <li>\n    establish breach reporting and response processes in relation to the Site;\n  </li>\n  <li>\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\n  </li>\n  <li>\n    regularly review the administrative, physical and technological safeguards at the Site;\n  </li>\n  <li>\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\n    monitoring\n    and reporting mechanisms available to Authorized Users for this purpose.\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            AgreementType = 8,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET TERMS OF ACCESS FOR PHARMACY TECHNICIANS</h1>\n\n<p class=\"bold\">\n  By enrolling for access to PharmaNet, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide\n      network that links B.C. pharmacies to a central data system. Every prescription dispensed\n      in community pharmacies in B.C. is entered into PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you with access to PharmaNet is to enhance patient care by\n      providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal\n      Information and the proprietary and confidential information of third-party licensors to\n      the Province, and it is in the public interest to ensure that appropriate measures are in\n      place to protect the confidentiality of all such information. All access to and use of\n      PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will\n          have the meanings given below:\n        </p>\n\n        <ul>\n          <li>\n            <strong>“Act”</strong> means the <i>Pharmaceutical Services Act</i>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means a location within which you are directly\n            providing Health Services, devices or related services to the person in\n            respect of whom PharmaNet is being accessed and which is approved by\n            the Province for PharmaNet access.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the\n            Province that provides you with the information technology software\n            and/or services through which you access PharmaNet.\n          </li>\n          <li>\n            <strong>“Authorized Technician”</strong> means an “authorized technician” as defined in\n            the Information Management Regulation.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a\n            benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by\n              the Province, as amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards\n                <br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>\n                ; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical\n                Security Standard and High Level Architecture for Wireless Local\n                Area Network Connectivity”.\n                <br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\" target=\"_blank\" rel=\"noopener noreferrer\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet</a>\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider Agent”</strong> means a person enrolled under section 11 of\n            the Act in the class of provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Grant Holder”</strong> means a person permitted access to PharmaNet who has\n            been issued a “grant” as defined in the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“Health Services”</strong> means “health services” as defined in the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <i>Information\n              Management Regulation</i>, B.C. Reg. 328/2021.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an\n            identifiable individual or is defined as, or deemed to be, “personal\n            information” or “personal health information” pursuant to any Privacy\n            Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published\n            by the Province on the following website (or such other website as may be\n            specified by the Province from time to time for this purpose):\n\n            <br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means “PharmaNet” as defined in the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in\n            PharmaNet and any record or information in your custody, control or\n            possession obtained through your access to PharmaNet.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows\n            users to apply for, and manage, their access to PharmaNet, and through\n            which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the <i>Freedom of Information and\n              Protection of Privacy Act</i>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the\n            Province, whether arising under statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the\n            purpose of receiving payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <i>Provider Regulation</i>, B.C. Reg.\n            222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your provision\n            of Health Services.\n          </li>\n          <li>\n            <strong>“Unauthorized Person”</strong> means any person other than a Grant Holder or\n            an Authorized Technician.\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or\n        regulation by name means the statute or regulation of British Columbia of that name, as amended or replaced from\n        time to time, and includes any enactment\n        made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this\n          Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting\n            provision in any further limits or conditions communicated to you in\n            writing by the Province, unless the conflicting provision expressly states\n            otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting\n            provision in the Conformance Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with the Act, the Information Management Regulation and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you is disclosed to you by the Province under the\n        authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act (including but not limited to sections 24, 25 and 29)\n        and the Information Management Regulation apply directly to you as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing,\n        that the Act requires you to comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet\n        subject to your compliance with the limits and conditions set out in this\n        Agreement. The Province may from time to time, at its discretion, amend or\n        change the scope of your access privileges to PharmaNet as privacy, security,\n        business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet: at an Approved Practice Site, and using\n            only the technologies and applications approved by the Province;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved\n            Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet\n            Data for the purposes of quality improvement, evaluation, health care\n            planning, surveillance, research or other secondary uses, and will only use\n            PharmaNet Data for your provision of Health Services;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and\n            you will take all reasonable measures to ensure that no Unauthorized\n            Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes\n            available to you in relation to PharmaNet;\n          </li>\n          <li>\n            you will comply with any additional limits or conditions applicable to you,\n            as may be communicated to you by the Province in writing.\n          </li>\n        </ol>\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You will take all reasonable measures to\n          safeguard Personal Information, including any Personal Information in\n          PharmaNet Data that is in your custody, control or possession.. In particular, you\n          will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal\n            Information, generally and as required by Privacy Laws;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes\n            or passwords that enable access to PharmaNet;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may\n            reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with the rules specified in the\n        Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in\n        any paper files or any electronic system, unless such storage or retention is\n        required for record keeping in accordance with the Act, the Provider Regulation,\n        and Professional College requirements and in connection with your provision of\n        Health Services and otherwise is in compliance with the Conformance Standards.\n        You will not modify any records retained in accordance with this section other\n        than as may be expressly authorized in the Conformance Standards. For clarity,\n        you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not disclose PharmaNet Data to any\n        Unauthorized Person, unless disclosure is required for Health Services or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you\n        in accordance with section 6(a) of this Agreement, you will not provide to patients\n        any copies of records containing PharmaNet Data or “print outs” produced\n        directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record Contained in PharmaNet.</strong> If you\n        receive a request for correction of any record or information contained in\n        PharmaNet that can not be completed at the pharmacy, you will refer the request\n        to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately\n        notify the Province if you receive any order, demand or request compelling, or\n        threatening to compel, disclosure of records contained in PharmaNet. You will\n        cooperate and consult with the Province in responding to any such demands. For greater certainty, the foregoing\n        requires that you notify the Province only with\n        respect to any access requests or demands for records contained in PharmaNet,\n        and not records retained by you in accordance with section 6(a) of this\n        Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by\n      you in PharmaNet is accurate, complete and up to date. In the event that you become\n      aware of a material inaccuracy or error in such information, you will take reasonable\n      steps to investigate the inaccuracy or error, correct it if necessary, and notify the Province\n      of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide\n          particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you do not comply, or you anticipate that you will be unable to comply\n            with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have\n            or may jeopardize the security, confidentiality, or integrity of PharmaNet,\n            the provincial drug program, or any government network or electronic\n            system including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <p>\n          <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge that the\n          Province may report any material breach of the Act, the Information Management\n          Regulation, or these terms to your Professional College or to the Information and\n          Privacy Commissioner of British Columbia.\n        </p>\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to\n        PharmaNet by the Province and will continue until the date this Agreement is\n        terminated under paragraph (b), (c), (d) or (e) below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on\n        written notice to the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet Access.</strong> If the Province suspends or\n        terminates your right to access PharmaNet under the Information Management\n        Regulation, the Province may also terminate this Agreement at any time thereafter\n        upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province\n        may terminate this Agreement immediately upon notice to you if you fail to\n        comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by Operation of the Information Management Regulation.</strong> This\n        Agreement will terminate automatically if your access to PharmaNet ends by\n        operation of section 39 or 40 of the Information Management Regulation.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province\n        may suspend your account after a period of inactivity, in accordance with the\n        Province’s policies. Please contact the Province immediately if your account has\n        been suspended for inactivity but you still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of\n        PharmaNet and PharmaNet Data is solely at your own risk. All such access and\n        information is provided on an “as is” and “as available” basis without warranty or\n        condition of any kind. The Province does not warrant the accuracy, completeness\n        or reliability of the PharmaNet Data or the availability of PharmaNet, or that\n        access to or the operation of PharmaNet will function without error, failure or\n        interruption.\n      </li>\n      <li>\n        <strong>You Are Responsible.</strong> You are responsible for verifying the accuracy of\n        information disclosed to you as a result of your access to PharmaNet or otherwise\n        pursuant to this Agreement before relying or acting upon such information. The\n        clinical or other information disclosed to you pursuant to this Agreement is in no\n        way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person\n        against the Province for any loss or damage of any kind caused by any reason or\n        purpose related to reliance on PharmaNet or PharmaNet Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province If You Cause a Loss or Claim.</strong> You agree\n        to indemnify and save harmless the Province, and the Province’s employees and\n        agents (each an <strong>“Indemnified Person\"</strong>) from any losses, claims, damages,\n        actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement\n        ends, which are based upon, arise out of or occur directly or indirectly by reason\n        of any act or omission by you in connection with this Agreement or in connection\n        with access to PharmaNet by you.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another\n          method of delivery, any notice to be given by you to the Province that is\n          contemplated by this Agreement, to be effective, must be in writing and emailed\n          or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this\n        Agreement will be in writing and delivered by the Province to you using any of\n        the contact mechanisms identified by you in PRIME, including by mail to a\n        specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into\n        PRIME to receive the content of any such notice.\n      </li>\n      <li>\n        <strong>Deemed Receipt.</strong> Any written communication from a party, if personally\n        delivered or sent electronically, will be deemed to have been received 24 hours\n        after the time the notice was sent, or, if sent by mail, will be deemed to have been\n        received 3 days (excluding Saturdays, Sundays and statutory holidays) after the\n        date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute Contact Information.</strong> You may notify the Province of a substitute\n        contact mechanism by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant\n          and is severable from any other covenant, and if any of them are held by a court,\n          or other decision-maker, to be invalid, this Agreement will be interpreted as if\n          such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Any provision of this Agreement that expressly or by its nature\n          continues after termination, shall survive termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and\n          interpreted in accordance with the laws of British Columbia and the laws of\n          Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may\n          not be assigned without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any\n          provision of this Agreement by you is not a waiver of its right subsequently to\n          insist on performance of that or any other provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province May Modify this Agreement.</strong> The Province may amend this\n          Agreement, including this section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become\n            effective upon the later of (A) the date notice of the amendment is first\n            delivered to you, or (B) the effective date of the amendment specified by\n            the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare\n            Newsletter, in which case the notice will specify the effective date of the\n            amendment, which date will be at least 30 (thirty) days after the date that\n            the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you use PharmaNet after the effective date of an amendment described in (i) or\n          (ii) above, you will be deemed to have accepted the corresponding amendment,\n          and this Agreement will be deemed to have been so amended as of the effective\n          date. If you do not agree with any amendment for which notice has been provided\n          by the Province in accordance with (i) or (ii) above, you must promptly (and in\n          any event before the effective date) cease all access or use of PharmaNet by yourself and take the steps\n          necessary to terminate this Agreement in accordance\n          with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            AgreementType = 8,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 3, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Text = "<h1>PHARMANET TERMS OF ACCESS FOR PHARMACY TECHNICIANS</h1>\n\n<p class=\"bold\">\n  By enrolling for access to PharmaNet, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide\n      network that links B.C. pharmacies to a central data system. Every prescription dispensed\n      in community pharmacies in B.C. is entered into PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you with access to PharmaNet is to enhance patient care by\n      providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal\n      Information and the proprietary and confidential information of third-party licensors to\n      the Province, and it is in the public interest to ensure that appropriate measures are in\n      place to protect the confidentiality of all such information. All access to and use of\n      PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will\n          have the meanings given below:\n        </p>\n\n        <ul>\n          <li>\n            <strong>“Act”</strong> means the <i>Pharmaceutical Services Act</i>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means a location within which you are directly\n            providing Health Services, devices or related services to the person in\n            respect of whom PharmaNet is being accessed and which is approved by\n            the Province for PharmaNet access.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the\n            Province that provides you with the information technology software\n            and/or services through which you access PharmaNet.\n          </li>\n          <li>\n            <strong>“Authorized Technician”</strong> means an “authorized technician” as defined in\n            the Information Management Regulation.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a\n            benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by\n              the Province, as amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards\n                <br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>\n                ; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical\n                Security Standard and High Level Architecture for Wireless Local\n                Area Network Connectivity”.\n                <br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\" target=\"_blank\" rel=\"noopener noreferrer\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet</a>\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider Agent”</strong> means a person enrolled under section 11 of\n            the Act in the class of provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Grant Holder”</strong> means a person permitted access to PharmaNet who has\n            been issued a “grant” as defined in the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“Health Services”</strong> means “health services” as defined in the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <i>Information\n              Management Regulation</i>, B.C. Reg. 328/2021.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an\n            identifiable individual or is defined as, or deemed to be, “personal\n            information” or “personal health information” pursuant to any Privacy\n            Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published\n            by the Province on the following website (or such other website as may be\n            specified by the Province from time to time for this purpose):\n\n            <br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means “PharmaNet” as defined in the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in\n            PharmaNet and any record or information in your custody, control or\n            possession obtained through your access to PharmaNet.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows\n            users to apply for, and manage, their access to PharmaNet, and through\n            which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the <i>Freedom of Information and\n              Protection of Privacy Act</i>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the\n            Province, whether arising under statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the\n            purpose of receiving payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <i>Provider Regulation</i>, B.C. Reg.\n            222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means Her Majesty the Queen in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your provision\n            of Health Services.\n          </li>\n          <li>\n            <strong>“Unauthorized Person”</strong> means any person other than a Grant Holder or\n            an Authorized Technician.\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or\n        regulation by name means the statute or regulation of British Columbia of that name, as amended or replaced from\n        time to time, and includes any enactment\n        made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this\n          Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting\n            provision in any further limits or conditions communicated to you in\n            writing by the Province, unless the conflicting provision expressly states\n            otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting\n            provision in the Conformance Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with the Act, the Information Management Regulation and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you is disclosed to you by the Province under the\n        authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act (including but not limited to sections 24, 25 and 29)\n        and the Information Management Regulation apply directly to you as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing,\n        that the Act requires you to comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet\n        subject to your compliance with the limits and conditions set out in this\n        Agreement. The Province may from time to time, at its discretion, amend or\n        change the scope of your access privileges to PharmaNet as privacy, security,\n        business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet: at an Approved Practice Site, and using\n            only the technologies and applications approved by the Province;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved\n            Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet\n            Data for the purposes of quality improvement, evaluation, health care\n            planning, surveillance, research or other secondary uses, and will only use\n            PharmaNet Data for your provision of Health Services;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and\n            you will take all reasonable measures to ensure that no Unauthorized\n            Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes\n            available to you in relation to PharmaNet;\n          </li>\n          <li>\n            you will comply with any additional limits or conditions applicable to you,\n            as may be communicated to you by the Province in writing.\n          </li>\n        </ol>\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You will take all reasonable measures to\n          safeguard Personal Information, including any Personal Information in\n          PharmaNet Data that is in your custody, control or possession.. In particular, you\n          will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal\n            Information, generally and as required by Privacy Laws;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes\n            or passwords that enable access to PharmaNet;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may\n            reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with the rules specified in the\n        Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in\n        any paper files or any electronic system, unless such storage or retention is\n        required for record keeping in accordance with the Act, the Provider Regulation,\n        and Professional College requirements and in connection with your provision of\n        Health Services and otherwise is in compliance with the Conformance Standards.\n        You will not modify any records retained in accordance with this section other\n        than as may be expressly authorized in the Conformance Standards. For clarity,\n        you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not disclose PharmaNet Data to any\n        Unauthorized Person, unless disclosure is required for Health Services or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you\n        in accordance with section 6(a) of this Agreement, you will not provide to patients\n        any copies of records containing PharmaNet Data or “print outs” produced\n        directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record Contained in PharmaNet.</strong> If you\n        receive a request for correction of any record or information contained in\n        PharmaNet that can not be completed at the pharmacy, you will refer the request\n        to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately\n        notify the Province if you receive any order, demand or request compelling, or\n        threatening to compel, disclosure of records contained in PharmaNet. You will\n        cooperate and consult with the Province in responding to any such demands. For greater certainty, the foregoing\n        requires that you notify the Province only with\n        respect to any access requests or demands for records contained in PharmaNet,\n        and not records retained by you in accordance with section 6(a) of this\n        Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by\n      you in PharmaNet is accurate, complete and up to date. In the event that you become\n      aware of a material inaccuracy or error in such information, you will take reasonable\n      steps to investigate the inaccuracy or error, correct it if necessary, and notify the Province\n      of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON-COMPLIANCE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide\n          particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you do not comply, or you anticipate that you will be unable to comply\n            with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have\n            or may jeopardize the security, confidentiality, or integrity of PharmaNet,\n            the provincial drug program, or any government network or electronic\n            system including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <p>\n          <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge that the\n          Province may report any material breach of the Act, the Information Management\n          Regulation, or these terms to your Professional College or to the Information and\n          Privacy Commissioner of British Columbia.\n        </p>\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to\n        PharmaNet by the Province and will continue until the date this Agreement is\n        terminated under paragraph (b), (c), (d) or (e) below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on\n        written notice to the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet Access.</strong> If the Province suspends or\n        terminates your right to access PharmaNet under the Information Management\n        Regulation, the Province may also terminate this Agreement at any time thereafter\n        upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province\n        may terminate this Agreement immediately upon notice to you if you fail to\n        comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by Operation of the Information Management Regulation.</strong> This\n        Agreement will terminate automatically if your access to PharmaNet ends by\n        operation of section 39 or 40 of the Information Management Regulation.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province\n        may suspend your account after a period of inactivity, in accordance with the\n        Province’s policies. Please contact the Province immediately if your account has\n        been suspended for inactivity but you still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of\n        PharmaNet and PharmaNet Data is solely at your own risk. All such access and\n        information is provided on an “as is” and “as available” basis without warranty or\n        condition of any kind. The Province does not warrant the accuracy, completeness\n        or reliability of the PharmaNet Data or the availability of PharmaNet, or that\n        access to or the operation of PharmaNet will function without error, failure or\n        interruption.\n      </li>\n      <li>\n        <strong>You Are Responsible.</strong> You are responsible for verifying the accuracy of\n        information disclosed to you as a result of your access to PharmaNet or otherwise\n        pursuant to this Agreement before relying or acting upon such information. The\n        clinical or other information disclosed to you pursuant to this Agreement is in no\n        way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person\n        against the Province for any loss or damage of any kind caused by any reason or\n        purpose related to reliance on PharmaNet or PharmaNet Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province If You Cause a Loss or Claim.</strong> You agree\n        to indemnify and save harmless the Province, and the Province’s employees and\n        agents (each an <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages,\n        actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement\n        ends, which are based upon, arise out of or occur directly or indirectly by reason\n        of any act or omission by you in connection with this Agreement or in connection\n        with access to PharmaNet by you.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another\n          method of delivery, any notice to be given by you to the Province that is\n          contemplated by this Agreement, to be effective, must be in writing and emailed\n          or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">Email:PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this\n        Agreement will be in writing and delivered by the Province to you using any of\n        the contact mechanisms identified by you in PRIME, including by mail to a\n        specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into\n        PRIME to receive the content of any such notice.\n      </li>\n      <li>\n        <strong>Deemed Receipt.</strong> Any written communication from a party, if personally\n        delivered or sent electronically, will be deemed to have been received 24 hours\n        after the time the notice was sent, or, if sent by mail, will be deemed to have been\n        received 3 days (excluding Saturdays, Sundays and statutory holidays) after the\n        date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute Contact Information.</strong> You may notify the Province of a substitute\n        contact mechanism by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant\n          and is severable from any other covenant, and if any of them are held by a court,\n          or other decision-maker, to be invalid, this Agreement will be interpreted as if\n          such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Any provision of this Agreement that expressly or by its nature\n          continues after termination, shall survive termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and\n          interpreted in accordance with the laws of British Columbia and the laws of\n          Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may\n          not be assigned without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any\n          provision of this Agreement by you is not a waiver of its right subsequently to\n          insist on performance of that or any other provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province May Modify this Agreement.</strong> The Province may amend this\n          Agreement, including this section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become\n            effective upon the later of (A) the date notice of the amendment is first\n            delivered to you, or (B) the effective date of the amendment specified by\n            the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare\n            Newsletter, in which case the notice will specify the effective date of the\n            amendment, which date will be at least 30 (thirty) days after the date that\n            the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you use PharmaNet after the effective date of an amendment described in (i) or\n          (ii) above, you will be deemed to have accepted the corresponding amendment,\n          and this Agreement will be deemed to have been so amended as of the effective\n          date. If you do not agree with any amendment for which notice has been provided\n          by the Province in accordance with (i) or (ii) above, you must promptly (and in\n          any event before the effective date) cease all access or use of PharmaNet by yourself and take the steps\n          necessary to terminate this Agreement in accordance\n          with section 10.\n        </p>\n\n      </li>\n    </ol>\n  </li>\n</ol>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            AgreementType = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<h1>PHARMANET USER TERMS OF ACCESS FOR PHARMACISTS</h1>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <strong>“Act”</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means the physical site at which you provide Direct Patient Care\n            and which is approved by the Province for PharmaNet access.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the Province that provides\n            you with the information technology software and/or services through which you and On-Behalf-of Users access\n            PharmaNet.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by the Province, as\n              amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards<br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n                </a>; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity”.\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\" target=\"_blank\" rel=\"noopener noreferrer\">\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n                </a>\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider”</strong> means a person enrolled under section 11 of the Act in the class of\n            provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n            services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <em>Information Management Regulation</em>,\n            B.C. Reg.\n            74/2015.\n          </li>\n          <li>\n            <strong>“On-Behalf-of User”</strong> means a member of your staff who (i) requires access to PharmaNet to\n            carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet on your behalf;\n            and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an identifiable\n            individual or is defined as, or deemed to be, “personal information” or “personal health information”\n            pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n            following website (or such other website as may be specified by the Province from time to time for this\n            purpose):\n\n            <br><br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record\n            or information in the custody, control or possession of you or an On-Behalf-of User that was obtained\n            through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>“Practice”</strong> means your practice of the health profession regulated under the <em>Health\n                      Professions Act</em>, or your practice as a Device Provider, as identified by you through PRIME\n            or another mechanism provided by the Province.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for,\n            and manage, their access to PharmaNet, and through which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the\n            <em>Freedom of Information and Protection of Privacy Act</em>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the Province, whether arising under\n            statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the purpose of receiving\n            payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <em>Provider Regulation</em>, B.C. Reg. 222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means His Majesty the King in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n            <p>\n              <strong>“Unauthorized Person”</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further limits\n            or conditions communicated to you in writing by the Province, unless the conflicting provision expressly\n            states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act, the\n      Information Management Regulation and all Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act (including but not limited to sections 24, 25 and 29) and the Information\n        Management Regulation apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in this Agreement. The Province may from time to time, at its\n        discretion, amend or change the scope of your access privileges to PharmaNet as privacy, security, business and\n        clinical practice requirements change. In such circumstances, the Province will use reasonable efforts to notify\n        you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet or, in the case of access as a Device\n            Provider, for so long as you are enrolled as a Device Provider;\n          </li>\n          <li>\n            you will only access PharmaNet: at the Approved Practice Site, and using only the technologies and\n            applications approved by the Province;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access takes\n            place at the Approved Practice Site and the access is required in relation to patients for whom you will be\n            providing Direct Patient Care at the Approved Practice Site;\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved Practice Site in respect of which a\n            person is enrolled as a Provider, and you will ensure that On-Behalf-of Users submit Claims on PharmaNet\n            only from an Approved Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of quality improvement, evaluation, health care planning, surveillance,\n            research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as\n            required by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Approved Practice Site to prevent\n            viewing of PharmaNet Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and\n            prohibit sharing or other multiple use of your access credential, or an On-Behalf-of User’s access\n            credential, for access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access\n            to PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with the\n        Act, the Provider Regulation, and Professional College requirements and in connection with your provision of\n        Direct Patient Care and otherwise is in compliance with the Conformance Standards. You will not modify any\n        records retained in accordance with this section other than as may be expressly authorized in the Conformance\n        Standards. For clarity, you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or “print outs” produced directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record Contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON-COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet Access.</strong> If the Province suspends or terminates your\n        right, or an On-Behalf-of User’s right, to access PharmaNet under the\n        <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\n        thereafter upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by Operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an “as is” and “as available”\n        basis without warranty or condition of any kind. The Province does not warrant the accuracy, completeness or\n        reliability of the PharmaNet Data or the availability of PharmaNet, or that access to or the operation of\n        PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You Are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province If You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement or in connection with access to PharmaNet by you or an\n        On-Behalf-of User.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content of\n        any such notice.\n      </li>\n      <li>\n        <strong>Deemed Receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent by\n        mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays) after\n        the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute Contact Information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vi) (vii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province May Modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            AgreementType = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>\n  PHARMANET TERMS OF ACCESS FOR ON-BEHALF-OF USER<br>\n</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<p class=\"bold underline\">\n  On Behalf-of-User Access\n</p>\n\n<ol>\n  <li>\n    <p>\n      You represent and warrant to the Province that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\n        support the Practitioner’s delivery of Direct Patient Care;\n      </li>\n      <li>\n        you are directly supervised by a Practitioner who has been granted access to PharmaNet by the Province; and\n      </li>\n      <li>\n        all information provided by you in connection with your application for PharmaNet access, including all\n        information submitted through PRIME, is true and correct.\n      </li>\n    </ol>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Definitions\n</p>\n\n<ol start=\"2\">\n  <li>\n    <p>\n      In these terms, capitalized terms will have the following meanings:\n    </p>\n\n    <ul class=\"list-unstyled\">\n      <li>\n        <strong>“Approved Practice Site”</strong> means the physical site at which a Practitioner provides Direct\n        Patient Care and which is approved by the Province for PharmaNet access. For greater certainty, “Approved\n        Practice Site” does not include a location from which remote access to PharmaNet takes place.\n      </li>\n      <li>\n        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\n      </li>\n      <li>\n        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n        following website (or such other website as may be specified by the Province from time to time for this\n        purpose):\n\n        <br><br>\n\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n      </li>\n      <li>\n        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the <em>Information Management\n        Regulation</em>, B.C. Reg. 74/2015.\n      </li>\n      <li>\n        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record or\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\n        PharmaNet by anyone.\n      </li>\n      <li>\n        <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n      </li>\n      <li>\n        <strong>“Practitioner”</strong> means a health professional regulated under the <em>Health Professions Act</em>,\n        or an enrolled device provide under the <em>Provider Regulation</em> B.C. Reg. 222/2014, who supervises your\n        access to and use of PharmaNet and who has been granted access to PharmaNet by the Province.\n      </li>\n      <li>\n        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for, and\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\n      </li>\n      <li>\n        <strong>“Province”</strong> means His Majesty the King in Right of British Columbia, as represented by the\n        Minister of Health.\n      </li>\n    </ul>\n\n  </li>\n  <li>\n    Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\n    British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\n    authority of that statute or regulation.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Terms of Access to PharmaNet\n</p>\n\n<ol start=\"4\">\n  <li>\n\n    <p>\n      You must:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        access and use PharmaNet and PharmaNet Data only at the Approved Practice Site of a Practitioner;\n      </li>\n      <li>\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by a Practitioner to\n        the individuals whose PharmaNet Data you are accessing, and only if the Practitioner is or will be delivering\n        Direct Patient Care requiring that access to those individuals at the same Approved Practice Site at which the\n        access occurs;\n      </li>\n      <li>\n        only access PharmaNet as permitted by law and directed by a Practitioner;\n      </li>\n      <li>\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\n        strict confidence;\n      </li>\n      <li>\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\n      </li>\n      <li>\n        complete all training required by the Approved Practice Site’s PharmaNet software vendor and the Province before\n        accessing PharmaNet;\n      </li>\n      <li>\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\n        accessed or used inappropriately by any person.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p>\n      You must not:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and\n        directed by a Practitioner;\n      </li>\n      <li>\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n      </li>\n      <li>\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n      </li>\n      <li>\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n      </li>\n      <li>\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\n        such as altering information or submitting false information;\n      </li>\n      <li>\n        test the security related to PharmaNet;\n      </li>\n      <li>\n        attempt to access PharmaNet from any location other than the Approved Practice Site of a Practitioner,\n        including by VPN or other remote access technology;\n      </li>\n      <li>\n        access PharmaNet unless the access is for the purpose of supporting a Practitioner in providing Direct\n        Patient Care to a patient at the same Approved Practice Site at which your access occurs.\n      </li>\n    </ol>\n  </li>\n</ol>\n<ol start=\"6\">\n  <li>\n    Your access to PharmaNet and use of PharmaNet Data are governed by the <em>Pharmaceutical Services Act</em> and you\n    must comply with all your duties under that Act.\n  </li>\n  <li>\n    The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\n    either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  How to Notify the Province\n</p>\n\n<ol start=\"8\">\n  <li>\n\n    <p>\n      Notice to the Province may be sent in writing to:\n    </p>\n\n    <address>\n      Director, Information and PharmaNet Development<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n      <br>\n\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n    </address>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Province May Modify These Terms\n</p>\n\n<ol start=\"9\">\n  <li>\n    <p>\n      The Province may amend these terms, including this section, at any time in its sole discretion:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\n        Province, if any; or\n      </li>\n      <li>\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\n        PharmaCare Newsletter containing the notice is first published.\n      </li>\n    </ol>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n\n    <p>\n      Any written notice to you under (i) above will be in writing and delivered by the Province to you using any of the\n      contact mechanisms identified by you in PRIME, including by mail to a specified postal address, email to a\n      specified email address or text message to a specified cell phone number. You may be required to click a URL link\n      or log into PRIME to receive the contents of any such notice.\n    </p>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Governing Law\n</p>\n\n<ol start=\"10\">\n  <li>\n\n    <p>\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n      Columbia and the laws of Canada applicable therein.\n    </p>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 22,
                            AgreementType = 6,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>\n  PHARMANET TERMS OF ACCESS FOR PHARMACY OR DEVICE PROVIDER ON-BEHALF-OF USER\n</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<p class=\"bold underline\">\n  On-Behalf-of User Access\n</p>\n\n<ol>\n  <li>\n    <p>\n      You represent and warrant to the Province that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\n        support the Practitioner’s delivery of Direct Patient Care;\n      </li>\n      <li>\n        you are directly supervised by a Practitioner, who has been granted access to PharmaNet by the Province; and\n      </li>\n      <li>\n        all information provided by you in connection with your application for PharmaNet access, including all\n        information submitted through PRIME, is true and correct.\n      </li>\n    </ol>\n\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Definitions\n</p>\n\n<ol start=\"2\">\n  <li>\n\n    <p>\n      In these terms, capitalized terms will have the following meanings:\n    </p>\n\n    <ul class=\"list-unstyled\">\n      <li>\n        <strong>“Approved Practice Site”</strong> means the physical site at which a Practitioner provides Direct\n        Patient Care and which is approved by the Province for PharmaNet access. For greater certainty, “Approved\n        Practice Site” does not include a location from which remote access to PharmaNet takes place.\n      </li>\n      <li>\n        <strong>“Direct Patient Care”</strong> means, for the purposes of this Agreement, the provision of health\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\n      </li>\n      <li>\n        <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published by the Province on the\n        following website (or such other website as may be specified by the Province from time to time for this\n        purpose):\n\n        <br><br>\n\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.gov.bc.ca/pharmacarenewsletter</a>\n      </li>\n      <li>\n        <strong>“PharmaNet”</strong> means PharmaNet as continued under section 2 of the <em>Information Management\n        Regulation, B.C</em>. Reg. 74/2015.\n      </li>\n      <li>\n        <strong>“PharmaNet Data”</strong> includes any record or information contained in PharmaNet and any record or\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\n        PharmaNet by anyone.\n      </li>\n      <li>\n        <strong>“Practice”</strong> means a Practitioner’s practice of their health profession.\n      </li>\n      <li>\n        <strong>“Practitioner”</strong> means a health professional regulated under the <em>Health Professions Act</em>,\n        or an\n        enrolled device provider under the <em>Provider Regulation</em>, B.C. Reg. 222/2014,who supervises your access\n        to and use of PharmaNet and who has been granted access to PharmaNet by the Province.\n      </li>\n      <li>\n        <strong>“PRIME”</strong> means the online service provided by the Province that allows users to apply for, and\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\n      </li>\n      <li>\n        <strong>“Province”</strong> means His Majesty the King in Right of British Columbia, as represented by the\n        Minister of Health.\n      </li>\n    </ul>\n\n  </li>\n  <li>\n    Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\n    British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\n    authority of that statute or regulation.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Terms of Access to PharmaNet\n</p>\n\n<ol start=\"4\">\n  <li>\n\n    <p>\n      You must:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        access and use PharmaNet and PharmaNet Data only at the Approved Practice Site of a Practitioner;\n      </li>\n      <li>\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by a Practitioner to\n        the individuals whose PharmaNet Data you are accessing, and only if the Practitioner is or will be delivering\n        Direct Patient Care requiring that access to those individuals at the same Approved Practice Site at which the\n        access occurs;\n      </li>\n      <li>\n        only access PharmaNet as permitted by law and directed by a Practitioner;\n      </li>\n      <li>\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\n        strict confidence;\n      </li>\n      <li>\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\n      </li>\n      <li>\n        complete all training required by the Approved Practice Site’s PharmaNet software vendor and the Province before\n        accessing PharmaNet;\n      </li>\n      <li>\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\n        accessed or used inappropriately by any person.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p>\n      You must not:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and directed\n        by a Practitioner;\n      </li>\n      <li>\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\n      </li>\n      <li>\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\n      </li>\n      <li>\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\n      </li>\n      <li>\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\n        such as altering information or submitting false information;\n      </li>\n      <li>\n        test the security related to PharmaNet;\n      </li>\n      <li>\n        attempt to access PharmaNet from any location other than the Approved Practice Site of a Practitioner, including\n        by VPN or other remote access technology;\n      </li>\n      <li>\n        access PharmaNet unless the access is for the purpose of supporting a Practitioner in providing Direct Patient\n        Care to a patient at the same Approved Practice Site at which your access occurs;\n      </li>\n      <li>\n        use PharmaNet to submit claims to PharmaCare or a third-party insurer unless directed to do so by a Practitioner\n        at an Approved Practice Site that is enrolled as a provider or device provider under the\n        <em>Provider Regulation</em>, B.C. Reg. 222/2014.\n      </li>\n    </ol>\n  </li>\n</ol>\n<ol start=\"6\">\n  <li>\n    Your access to PharmaNet and use of PharmaNet Data are governed by the Pharmaceutical Services Act and you must\n    comply with all your duties under that Act.\n  </li>\n  <li>\n    The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\n    either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  How to Notify the Province\n</p>\n\n<ol start=\"8\">\n  <li>\n\n    <p>\n      Notice to the Province may be sent in writing to:\n    </p>\n\n    <address>\n      Director, Information and PharmaNet Innovation<br>\n      Ministry of Health<br>\n      PO Box 9652, STN PROV GOVT<br>\n      Victoria, BC V8W 9P4<br>\n\n      <br>\n\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n    </address>\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Province May Modify These Terms\n</p>\n\n<ol start=\"9\">\n  <li>\n\n    <p>\n      The Province may amend these terms, including this section, at any time in its sole discretion:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\n        Province, if any; or\n      </li>\n      <li>\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\n        PharmaCare Newsletter containing the notice is first published.\n      </li>\n    </ol>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n\n    <p>\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\n      PharmaNet.\n    </p>\n  </li>\n</ol>\n\n<p class=\"bold underline\">\n  Governing Law\n</p>\n\n<ol start=\"10\">\n  <li>\n\n    <p>\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\n      Columbia and the laws of Canada applicable therein.\n    </p>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 23,
                            AgreementType = 8,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>PHARMANET TERMS OF ACCESS FOR PHARMACY TECHNICIANS</h1>\n\n<p class=\"bold\">\n  By enrolling for access to PharmaNet, you agree to the following terms (the “Agreement”). Please read them carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide\n      network that links B.C. pharmacies to a central data system. Every prescription dispensed\n      in community pharmacies in B.C. is entered into PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you with access to PharmaNet is to enhance patient care by\n      providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal\n      Information and the proprietary and confidential information of third-party licensors to\n      the Province, and it is in the public interest to ensure that appropriate measures are in\n      place to protect the confidentiality of all such information. All access to and use of\n      PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will\n          have the meanings given below:\n        </p>\n\n        <ul>\n          <li>\n            <strong>“Act”</strong> means the <i>Pharmaceutical Services Act</i>.\n          </li>\n          <li>\n            <strong>“Approved Practice Site”</strong> means a location within which you are directly\n            providing Health Services, devices or related services to the person in\n            respect of whom PharmaNet is being accessed and which is approved by\n            the Province for PharmaNet access.\n          </li>\n          <li>\n            <strong>“Approved SSO”</strong> means a software support organization approved by the\n            Province that provides you with the information technology software\n            and/or services through which you access PharmaNet.\n          </li>\n          <li>\n            <strong>“Authorized Technician”</strong> means an “authorized technician” as defined in\n            the Information Management Regulation.\n          </li>\n          <li>\n            <strong>“Claim”</strong> means a claim made under the Act for payment in respect of a\n            benefit under the Act.\n          </li>\n          <li>\n\n            <p>\n              <strong>“Conformance Standards”</strong> means the following documents published by\n              the Province, as amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards\n                <br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>\n                ; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: “Submission for Technical\n                Security Standard and High Level Architecture for Wireless Local\n                Area Network Connectivity”.\n                <br>\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\" target=\"_blank\" rel=\"noopener noreferrer\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet</a>\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>“Device Provider Agent”</strong> means a person enrolled under section 11 of\n            the Act in the class of provider known as “device provider”.\n          </li>\n          <li>\n            <strong>“Grant Holder”</strong> means a person permitted access to PharmaNet who has\n            been issued a “grant” as defined in the Information Management\n            Regulation.\n          </li>\n          <li>\n            <strong>“Health Services”</strong> means “health services” as defined in the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>“Information Management Regulation”</strong> means the <i>Information\n              Management Regulation</i>, B.C. Reg. 328/2021.\n          </li>\n          <li>\n            <strong>“Personal Information”</strong> means all recorded information that is about an\n            identifiable individual or is defined as, or deemed to be, “personal\n            information” or “personal health information” pursuant to any Privacy\n            Laws.\n          </li>\n          <li>\n            <strong>“PharmaCare Newsletter”</strong> means the PharmaCare newsletter published\n            by the Province on the following website (or such other website as may be\n            specified by the Province from time to time for this purpose):\n\n            <br>\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">www.gov.bc.ca/pharmacarenewsletter</a>\n          </li>\n          <li>\n            <strong>“PharmaNet”</strong> means “PharmaNet” as defined in the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>“PharmaNet Data”</strong> includes any record or information contained in\n            PharmaNet and any record or information in your custody, control or\n            possession obtained through your access to PharmaNet.\n          </li>\n          <li>\n            <strong>“PRIME”</strong> means the online service provided by the Province that allows\n            users to apply for, and manage, their access to PharmaNet, and through\n            which users are granted access by the Province.\n          </li>\n          <li>\n            <strong>“Privacy Laws”</strong> means the Act, the <i>Freedom of Information and\n              Protection of Privacy Act</i>, the Personal Information Protection Act, and\n            any other statutory or legal obligations of privacy owed by you or the\n            Province, whether arising under statute, by contract or at common law.\n          </li>\n          <li>\n            <strong>“Provider”</strong> means a person enrolled under section 11 of the Act for the\n            purpose of receiving payment for providing benefits.\n          </li>\n          <li>\n            <strong>“Provider Regulation”</strong> means the <i>Provider Regulation</i>, B.C. Reg.\n            222/2014.\n          </li>\n          <li>\n            <strong>“Province”</strong> means His Majesty the King in Right of British Columbia, as represented by the\n            Minister of Health.\n          </li>\n          <li>\n            <strong>“Professional College”</strong> is the regulatory body governing your provision\n            of Health Services.\n          </li>\n          <li>\n            <strong>“Unauthorized Person”</strong> means any person other than a Grant Holder or\n            an Authorized Technician.\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or\n        regulation by name means the statute or regulation of British Columbia of that name, as amended or replaced from\n        time to time, and includes any enactment\n        made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this\n          Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting\n            provision in any further limits or conditions communicated to you in\n            writing by the Province, unless the conflicting provision expressly states\n            otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting\n            provision in the Conformance Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with the Act, the Information Management Regulation and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you is disclosed to you by the Province under the\n        authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act (including but not limited to sections 24, 25 and 29)\n        and the Information Management Regulation apply directly to you as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing,\n        that the Act requires you to comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet\n        subject to your compliance with the limits and conditions set out in this\n        Agreement. The Province may from time to time, at its discretion, amend or\n        change the scope of your access privileges to PharmaNet as privacy, security,\n        business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet: at an Approved Practice Site, and using\n            only the technologies and applications approved by the Province;\n          </li>\n          <li>\n            you will not submit Claims on PharmaNet other than from an Approved\n            Practice Site in respect of which a person is enrolled as a Provider;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet\n            Data for the purposes of quality improvement, evaluation, health care\n            planning, surveillance, research or other secondary uses, and will only use\n            PharmaNet Data for your provision of Health Services;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and\n            you will take all reasonable measures to ensure that no Unauthorized\n            Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes\n            available to you in relation to PharmaNet;\n          </li>\n          <li>\n            you will comply with any additional limits or conditions applicable to you,\n            as may be communicated to you by the Province in writing.\n          </li>\n        </ol>\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You will take all reasonable measures to\n          safeguard Personal Information, including any Personal Information in\n          PharmaNet Data that is in your custody, control or possession.. In particular, you\n          will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal\n            Information, generally and as required by Privacy Laws;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes\n            or passwords that enable access to PharmaNet;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may\n            reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with the rules specified in the\n        Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in\n        any paper files or any electronic system, unless such storage or retention is\n        required for record keeping in accordance with the Act, the Provider Regulation,\n        and Professional College requirements and in connection with your provision of\n        Health Services and otherwise is in compliance with the Conformance Standards.\n        You will not modify any records retained in accordance with this section other\n        than as may be expressly authorized in the Conformance Standards. For clarity,\n        you may annotate a discrete record provided that the discrete record is not itself\n        modified other than as expressly authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not disclose PharmaNet Data to any\n        Unauthorized Person, unless disclosure is required for Health Services or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you\n        in accordance with section 6(a) of this Agreement, you will not provide to patients\n        any copies of records containing PharmaNet Data or “print outs” produced\n        directly from PharmaNet, and will refer any requests for access to such records or\n        “print outs” to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record Contained in PharmaNet.</strong> If you\n        receive a request for correction of any record or information contained in\n        PharmaNet that can not be completed at the pharmacy, you will refer the request\n        to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately\n        notify the Province if you receive any order, demand or request compelling, or\n        threatening to compel, disclosure of records contained in PharmaNet. You will\n        cooperate and consult with the Province in responding to any such demands. For greater certainty, the foregoing\n        requires that you notify the Province only with\n        respect to any access requests or demands for records contained in PharmaNet,\n        and not records retained by you in accordance with section 6(a) of this\n        Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by\n      you in PharmaNet is accurate, complete and up to date. In the event that you become\n      aware of a material inaccuracy or error in such information, you will take reasonable\n      steps to investigate the inaccuracy or error, correct it if necessary, and notify the Province\n      of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON-COMPLIANCE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide\n          particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you do not comply, or you anticipate that you will be unable to comply\n            with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have\n            or may jeopardize the security, confidentiality, or integrity of PharmaNet,\n            the provincial drug program, or any government network or electronic\n            system including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <p>\n          <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge that the\n          Province may report any material breach of the Act, the Information Management\n          Regulation, or these terms to your Professional College or to the Information and\n          Privacy Commissioner of British Columbia.\n        </p>\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to\n        PharmaNet by the Province and will continue until the date this Agreement is\n        terminated under paragraph (b), (c), (d) or (e) below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on\n        written notice to the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet Access.</strong> If the Province suspends or\n        terminates your right to access PharmaNet under the Information Management\n        Regulation, the Province may also terminate this Agreement at any time thereafter\n        upon written notice to you.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province\n        may terminate this Agreement immediately upon notice to you if you fail to\n        comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by Operation of the Information Management Regulation.</strong> This\n        Agreement will terminate automatically if your access to PharmaNet ends by\n        operation of section 39 or 40 of the Information Management Regulation.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province\n        may suspend your account after a period of inactivity, in accordance with the\n        Province’s policies. Please contact the Province immediately if your account has\n        been suspended for inactivity but you still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of\n        PharmaNet and PharmaNet Data is solely at your own risk. All such access and\n        information is provided on an “as is” and “as available” basis without warranty or\n        condition of any kind. The Province does not warrant the accuracy, completeness\n        or reliability of the PharmaNet Data or the availability of PharmaNet, or that\n        access to or the operation of PharmaNet will function without error, failure or\n        interruption.\n      </li>\n      <li>\n        <strong>You Are Responsible.</strong> You are responsible for verifying the accuracy of\n        information disclosed to you as a result of your access to PharmaNet or otherwise\n        pursuant to this Agreement before relying or acting upon such information. The\n        clinical or other information disclosed to you pursuant to this Agreement is in no\n        way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person\n        against the Province for any loss or damage of any kind caused by any reason or\n        purpose related to reliance on PharmaNet or PharmaNet Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province If You Cause a Loss or Claim.</strong> You agree\n        to indemnify and save harmless the Province, and the Province’s employees and\n        agents (each an <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages,\n        actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement\n        ends, which are based upon, arise out of or occur directly or indirectly by reason\n        of any act or omission by you in connection with this Agreement or in connection\n        with access to PharmaNet by you.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another\n          method of delivery, any notice to be given by you to the Province that is\n          contemplated by this Agreement, to be effective, must be in writing and emailed\n          or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">Email:PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this\n        Agreement will be in writing and delivered by the Province to you using any of\n        the contact mechanisms identified by you in PRIME, including by mail to a\n        specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into\n        PRIME to receive the content of any such notice.\n      </li>\n      <li>\n        <strong>Deemed Receipt.</strong> Any written communication from a party, if personally\n        delivered or sent electronically, will be deemed to have been received 24 hours\n        after the time the notice was sent, or, if sent by mail, will be deemed to have been\n        received 3 days (excluding Saturdays, Sundays and statutory holidays) after the\n        date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute Contact Information.</strong> You may notify the Province of a substitute\n        contact mechanism by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant\n          and is severable from any other covenant, and if any of them are held by a court,\n          or other decision-maker, to be invalid, this Agreement will be interpreted as if\n          such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Any provision of this Agreement that expressly or by its nature\n          continues after termination, shall survive termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and\n          interpreted in accordance with the laws of British Columbia and the laws of\n          Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may\n          not be assigned without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any\n          provision of this Agreement by you is not a waiver of its right subsequently to\n          insist on performance of that or any other provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province May Modify this Agreement.</strong> The Province may amend this\n          Agreement, including this section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become\n            effective upon the later of (A) the date notice of the amendment is first\n            delivered to you, or (B) the effective date of the amendment specified by\n            the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare\n            Newsletter, in which case the notice will specify the effective date of the\n            amendment, which date will be at least 30 (thirty) days after the date that\n            the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you use PharmaNet after the effective date of an amendment described in (i) or\n          (ii) above, you will be deemed to have accepted the corresponding amendment,\n          and this Agreement will be deemed to have been so amended as of the effective\n          date. If you do not agree with any amendment for which notice has been provided\n          by the Province in accordance with (i) or (ii) above, you must promptly (and in\n          any event before the effective date) cease all access or use of PharmaNet by yourself and take the steps\n          necessary to terminate this Agreement in accordance\n          with section 10.\n        </p>\n\n      </li>\n    </ol>\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 24,
                            AgreementType = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>PHARMANET REGULATED USER TERMS OF ACCESS</h1>\n\n<p class=\"bold\">\n  By enrolling for PharmaNet access, you agree to the following terms (the &quot;Agreement&quot;). Please read them\n  carefully.\n</p>\n\n<ol>\n  <li>\n\n    <p class=\"bold underline\">\n      BACKGROUND\n    </p>\n\n    <p>\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\n      PharmaNet.\n    </p>\n\n    <p>\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\n      patient care.\n    </p>\n\n    <p class=\"bold underline\">\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\n      and confidential information of third-party licensors to the Province, and it is in the public interest to ensure\n      that appropriate measures are in place to protect the confidentiality of all such information. All access to and\n      use of PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INTERPRETATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\n          meanings given below:\n        </p>\n\n        <ul>\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>.\n          </li>\n          <li>\n            <strong>&quot;Approved Practice Site&quot;</strong> means the physical site at which you provide Direct\n            Patient Care and which is approved by the Province for PharmaNet access. For greater certainty,\n            &quot;Approved Practice Site&quot; does not include a location from which remote access to PharmaNet takes\n            place;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means a software support organization approved by the Province\n            that provides you with the information technology software and/or services through which you and\n            On-Behalf-of Users access PharmaNet.\n          </li>\n          <li>\n\n            <p>\n              <strong>&quot;Conformance Standards&quot;</strong> means the following documents published by the\n              Province, as amended from time to time:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                PharmaNet Professional and Software Conformance Standards; and\n              </li>\n              <li>\n                Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\n                Architecture for Wireless Local Area Network Connectivity&quot;.\n              </li>\n            </ol>\n\n          </li>\n          <li>\n            <strong>&quot;Direct Patient Care&quot;</strong> means, for the purposes of this Agreement, the provision of\n            health services to an individual to whom you provide direct patient care in the context of your Practice.\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the Information Management Regulation,\n            B.C. Reg. 74/2015.\n          </li>\n          <li>\n            <strong>&quot;On-Behalf-of User&quot;</strong> means a member of your staff who (i) requires access to\n            PharmaNet to carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet\n            on your behalf; and (iii) has been granted access to PharmaNet by the Province.\n          </li>\n          <li>\n            <strong>&quot;Personal Information&quot;</strong> means all recorded information that is about an\n            identifiable individual or is defined as, or deemed to be, &quot;personal information&quot; or\n            &quot;personal health information&quot; pursuant to any Privacy Laws.\n          </li>\n          <li>\n            <strong>&quot;PharmaCare Newsletter&quot;</strong> means the PharmaCare newsletter published by the Province\n            on the following website (or such other website as may be specified by the Province from time to time for\n            this purpose):\n\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">\n              www.gov.bc.ca/pharmacarenewsletter\n            </a>\n          </li>\n          <li>\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the Information\n            Management Regulation.\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any record or information contained in PharmaNet and\n            any record or information in the custody, control or possession of you or an On-Behalf-of User that was\n            obtained through your or an On-Behalf-of User’s access to PharmaNet.\n          </li>\n          <li>\n            <strong>&quot;Practice&quot;</strong> means your practice of the health profession regulated under the\n            <em>Health Professions Act</em>, or your practice as an enrolled device provider under the Provider\n            Regulation, B.C. Reg. 222/2014, as identified by you through PRIME.\n          </li>\n          <li>\n            <strong>&quot;PRIME&quot;</strong> means the online service provided by the Province that allows users to\n            apply for, and manage, their access to PharmaNet, and through which users are granted access by the\n            Province.\n          </li>\n          <li>\n            <strong>&quot;Privacy Laws&quot;</strong> means the Act, the <em>Freedom of Information and Protection of\n            Privacy Act</em>, the <em>Personal Information Protection Act</em>, and any other statutory or legal\n            obligations of privacy owed by you or the Province, whether arising under statute, by contract or at common\n            law.\n          </li>\n          <li>\n            <strong>&quot;Province&quot;</strong> means His Majesty the King in Right of British Columbia, as\n            represented by the Minister of Health.\n          </li>\n          <li>\n            <strong>&quot;Professional College&quot;</strong> is the regulatory body governing your Practice.\n          </li>\n          <li>\n\n            <p>\n              <strong>&quot;Unauthorized Person&quot;</strong> means any person other than:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                you,\n              </li>\n              <li>\n                an On-Behalf-of User, or\n              </li>\n              <li>\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\n                accordance with section 6 of the <em>Information Management Regulation</em>.\n              </li>\n            </ol>\n\n          </li>\n        </ul>\n\n      </li>\n      <li>\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\n        and includes any enactment made under the authority of that statute or regulation.\n      </li>\n      <li>\n\n        <p>\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further\n            limits or conditions communicated to you in writing by the Province, unless the conflicting provision\n            expressly states otherwise; and\n          </li>\n          <li>\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\n            Standards.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      APPLICATION OF LEGISLATION\n    </p>\n\n    <p>\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act and all\n      Privacy Laws applicable to PharmaNet and PharmaNet Data.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\n    </p>\n\n    <p>\n      You acknowledge that:\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\n        Province under the authority of the Act;\n      </li>\n      <li>\n        specific provisions of the Act, including the <em>Information Management Regulation</em> and sections 24, 25 and\n        29 of the Act, apply directly to you and to On-Behalf-of Users as a result; and\n      </li>\n      <li>\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\n        comply with.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCESS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Grant of Access.</strong> The Province will provide you with access to PharmaNet subject to your\n        compliance with the limits and conditions set out in section 5(b) below and otherwise in this Agreement. The\n        Province may from time to time, at its discretion, amend or change the scope of your access privileges to\n        PharmaNet as privacy, security, business and clinical practice requirements change. In such circumstances, the\n        Province will use reasonable efforts to notify you of such changes.\n      </li>\n      <li>\n\n        <p>\n          <strong>Limits and Conditions of Access.</strong> The following limits and conditions apply to your access to\n          PharmaNet:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\n            long as you are a registrant in good standing with the Professional College and your registration permits\n            you to deliver Direct Patient Care requiring access to PharmaNet;\n          </li>\n          <li>\n            unless (iii) below applies, you will only access PharmaNet at the Approved Practice Site, and using only the\n            technologies and applications approved by the Province.\n          </li>\n          <li>\n            <p>\n              you may only access PharmaNet using remote access technology if all of the following conditions are met:\n            </p>\n\n            <ol>\n              <li>\n                the remote access technology used at the Approved Practice Site has been specifically approved in\n                writing by the Province,\n              </li>\n              <li>\n                the requirements of the Province’s Policy for Remote Access to PharmaNet\n                (<a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>)\n                are met,\n              </li>\n              <li>\n                your Approved Practice Site has registered you with the Province for remote access at the Approved\n                Practice Site,\n              </li>\n              <li>\n                you have applied to the Province for remote access at the Approved Practice Site and the Province has\n                approved that application in writing, and\n              </li>\n              <li>\n                you are physically located in British Columbia at the time of any such remote access.\n              </li>\n            </ol>\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access takes\n            place at the Approved Practice Site and the access is in relation to patients for whom you will be providing\n            Direct Patient Care at the Approved Practice Site requiring the access to PharmaNet;\n          </li>\n          <li>\n            you must ensure that your On-Behalf-of Users do not access PharmaNet using VPN or other remote access\n            technology\n          </li>\n          <li>\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\n            that On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\n          </li>\n          <li>\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\n            research, and you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the\n            purpose of market research;\n          </li>\n          <li>\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\n            On-Behalf-of Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient\n            Care, including for the purposes of deidentification or aggregation, quality improvement, evaluation, health\n            care planning, surveillance, research or other secondary uses;\n          </li>\n          <li>\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\n            to ensure that no Unauthorized Person can access PharmaNet;\n          </li>\n          <li>\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\n            PharmaNet, and you will ensure that all On-Behalf-of Users complete such training;\n          </li>\n          <li>\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\n            PharmaNet, including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence\n            from your staff, or where the On-Behalf-of User’s access-related duties in relation to the Practice have\n            changed;\n          </li>\n          <li>\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\n            conditions applicable to you, as may be communicated to you by the Province in writing;\n          </li>\n          <li>\n            you represent and warrant that all information provided by you in connection with your application for\n            PharmaNet access, including through PRIME, is true and correct.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\n        PharmaNet Data.\n      </li>\n      <li>\n\n        <p>\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\n          safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is in the\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as required\n            by Privacy Laws;\n          </li>\n          <li>\n            secure all workstations and printers in a protected area in the Practice to prevent viewing of PharmaNet\n            Data by Unauthorized Persons;\n          </li>\n          <li>\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and prohibit\n            sharing or other multiple use of your access credential, or an On-Behalf-of User’s access credential, for\n            access to PharmaNet;\n          </li>\n          <li>\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\n            PharmaNet by yourself or any On-Behalf-of User;\n          </li>\n          <li>\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\n          </li>\n        </ol>\n\n      </li>\n      <li>\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files or\n        any electronic system, unless such storage or retention is required for record keeping in accordance with\n        Professional College requirements and in connection with your provision of Direct Patient Care and otherwise\n        is in compliance with the Conformance Standards. You will not modify any records retained in accordance with\n        this section other than as may be expressly authorized in the Conformance Standards. For clarity, you may\n        annotate a discrete record provided that the discrete record is not itself modified other than as expressly\n        authorized in the Conformance Standards.\n      </li>\n      <li>\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\n        monitoring your own Practice.\n      </li>\n      <li>\n        <strong>Disclosure to Third Parties.</strong> You will not, and will ensure that On-Behalf-of Users do not,\n        disclose PharmaNet Data to any Unauthorized Person, unless disclosure is required for Direct Patient Care or is\n        otherwise authorized under section 24(1) of the Act.\n      </li>\n      <li>\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\n        not, disclose PharmaNet Data for the purpose of market research.\n      </li>\n      <li>\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\n        Data or &quot;print outs&quot; produced directly from PharmaNet, and will refer any requests for access to such\n        records or &quot;print outs&quot; to the Province.\n      </li>\n      <li>\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\n      </li>\n      <li>\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\n        this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      ACCURACY\n    </p>\n\n    <p>\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\n    </p>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      INVESTIGATIONS, AUDITS, AND REPORTING\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\n        and personnel for the purposes of such audit or investigation.\n      </li>\n      <li>\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\n        Commissioner of British Columbia.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\n        access rights.\n      </li>\n      <li>\n\n        <p>\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\n            to comply with the terms of this Agreement in any respect, or\n          </li>\n          <li>\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\n            PharmaNet.\n          </li>\n        </ol>\n\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\n        below.\n      </li>\n      <li>\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\n        the Province.\n      </li>\n      <li>\n        <strong>Suspension or Termination of PharmaNet access.</strong> If the Province suspends or terminates your\n        right to access PharmaNet under the <em>Information Management Regulation</em>, this Agreement will\n        automatically terminate as of the date of such suspension or termination.\n      </li>\n      <li>\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\n      </li>\n      <li>\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\n        <em>Information Management Regulation</em>.\n      </li>\n      <li>\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\n        still require access to PharmaNet.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\n    </p>\n\n    <ol type=\"a\">\n      <li>\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\n        Data is solely at your own risk. All such access and information is provided on an &quot;as is&quot; and\n        &quot;as available&quot; basis without warranty or condition of any kind. The Province does not warrant the\n        accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\n        to or the operation of PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\n        this Agreement is in no way intended to be a substitute for professional judgment.\n      </li>\n      <li>\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\n        Data.\n      </li>\n      <li>\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\n        On-Behalf-of User, in connection with this Agreement.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      NOTICE\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\n          effective, must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Development<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n      </li>\n      <li>\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\n        writing and delivered by the Province to you using any of the contact mechanisms identified by you in PRIME,\n        including by mail to a specified postal address, email to a specified email address or text message to the\n        specified cell phone number. You may be required to click a URL link or log into PRIME to receive the content\n        of any such notice.\n      </li>\n      <li>\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\n        electronically, will be deemed to have been received 24 hours after the time the notice was sent, or, if sent\n        by mail, will be deemed to have been received 3 days (excluding Saturdays, Sundays and statutory holidays)\n        after the date the notice was sent.\n      </li>\n      <li>\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\n        by updating your contact information in PRIME.\n      </li>\n    </ol>\n\n  </li>\n  <li>\n\n    <p class=\"bold underline\">\n      GENERAL\n    </p>\n\n    <ol type=\"a\">\n      <li>\n\n        <p>\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\n          severable from any other covenant, and if any of them are held by a court, or other decision-maker, to be\n          invalid, this Agreement will be interpreted as if such provisions were not included.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vii) (viii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and any other\n          provision of this Agreement that expressly or by its nature continues after termination, shall survive\n          termination of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\n          without the prior written approval of the Province.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\n          provision of this Agreement.\n        </p>\n\n      </li>\n      <li>\n\n        <p>\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\n          section, at any time in its sole discretion:\n        </p>\n\n        <ol type=\"i\">\n          <li>\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\n            by the Province, if any; or\n          </li>\n          <li>\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\n            that the PharmaCare Newsletter containing the notice is first published.\n          </li>\n        </ol>\n\n        <p>\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\n        </p>\n\n      </li>\n    </ol>\n\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 25,
                            AgreementType = 4,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\n\n<p>\n  This Organization Agreement for PharmaNet Use (the &quot;Agreement&quot;) is executed by {{organization_name}}\n  (&quot;Organization&quot;) for the benefit of HIS MAJESTY THE KING IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as\n  represented by the Minister of Health (the &quot;Province&quot;).\n</p>\n\n<p>\n  <strong>WHEREAS:</strong>\n</p>\n\n<ol type=\"A\">\n  <li>\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\n    Columbia is entered into PharmaNet.\n  </li>\n  <li>\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is in\n    the public interest to ensure that appropriate measures are in place to protect the confidentiality and\n    integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to the\n    Act and other applicable law.\n  </li>\n  <li>\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\n    the care of, the individual whose personal information is being accessed.\n  </li>\n  <li>\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\n    at the Site(s) operated by Organization.\n  </li>\n</ol>\n\n<p>\n  <strong>NOW THEREFORE</strong> Organization makes this Agreement knowing that the Province will rely on it\n  in permitting access to and use of PharmaNet from Sites operated by Organization. Organization conclusively\n  acknowledges that reliance by the Province on this Agreement is in every respect justifiable and that it\n  received fair and valuable consideration for this Agreement, the receipt and adequacy of which is hereby\n  acknowledged. Organization hereby agrees as follows:\n</p>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"1\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided\n            Technology used at the Site;\n          </li>\n          <li>\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is\n            in any way used in connection with Site Access or any PharmaNet Data;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\n              Province and who is:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                an employee or independent contractor of Organization, or\n              </li>\n              <li>\n                if Organization is an individual, the Organization;\n              </li>\n            </ol>\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\n            <em>Information Management Regulation</em>,\n            B.C. Reg. 74/2015;\n          </li>\n          <li>\n            <strong>&quot;On-Behalf-Of User&quot;</strong> means an Authorized User described in subsection 4 (5) of the\n            <em>Information Management Regulation</em> who acts on behalf of a Regulated User when accessing\n            PharmaNet;\n          </li>\n          <li>\n            &quot;PharmaNet&quot; means PharmaNet as continued under section 2 of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet and\n            any records\n            or information in the custody, control or possession of Organization or any Authorized User as the result of\n            any Site Access;\n          </li>\n          <li>\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\n            of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\n            &quot;Signing Authority&quot;\n            for a Site, with the associated contact information, as set out in section 2 of the Site Request;\n          </li>\n          <li>\n            <p>\n              &quot;Site&quot; means a premises operated by Organization and located in British Columbia that:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                is the subject of a Site Request submitted to the Province, and\n              </li>\n              <li>\n                has been approved for Site Access by the Province in writing\n              </li>\n            </ol>\n\n            <p class=\"underline\">\n              For greater certainty, &quot;Site&quot; does not include a location from which remote access to PharmaNet\n              takes place;\n            </p>\n          </li>\n          <li>\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site or remotely as\n            permitted\n            by the Province;\n          </li>\n          <li>\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\n            PharmaNet access\n            request form submitted to the Province by the Organization, requesting PharmaNet access at the Site, as such\n            information is updated by the Organization from time to time in accordance with section 2.2;\n          </li>\n          <li>\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\n            services\n            provided to Organization by an Approved SSO for the purpose of Site Access;\n          </li>\n        </ol>\n      </li>\n      <li>\n        Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\n        British\n        Columbia of that name, as amended or replaced from time to time, and includes any enactments made under the\n        authority\n        of that statute or regulation.\n      </li>\n      <li>\n        <p>\n          The following are the Schedules attached to and incorporated into this Agreement:\n        </p>\n\n        <ul>\n          <li>\n            Schedule A – Specific Privacy and Security Measures\n          </li>\n        </ul>\n      </li>\n      <li>\n        The main body of this Agreement, the Schedules, and any documents incorporated by reference into this Agreement\n        are to\n        be interpreted so that all of the provisions are given as full effect as possible. In the event of a conflict,\n        unless\n        expressly stated to the contrary the main body of the Agreement will prevail over the Schedules, which will\n        prevail\n        over any document incorporated by reference.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"2\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          Organization represents and warrants to the Province, as of the date of this\n          Agreement and throughout its term, that:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the information contained in the Site Request for each Site is true and correct;\n          </li>\n          <li>\n            <p>\n              if Organization is not an individual:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\n              </li>\n              <li>\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery\n                of this Agreement by, or on behalf of, Organization; and\n              </li>\n              <li>\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\n                legally binding upon and enforceable against Organization in accordance with its terms.\n              </li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization must immediately notify the Province of any change to the information contained in a Site Request,\n        including any change to a Site’s status, location, normal operating hours, Approved SSO, or the name and contact\n        information of the Signing Authority or any of the other specific roles set out in the Site Request. Such\n        notices\n        must be submitted to the Province in the form and manner directed by the Province in its published instructions\n        regarding the submission of updated Site Request information, as such instructions may be updated from time to\n        time by the Province.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"3\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must comply with the Act and all applicable law.\n      </li>\n      <li>\n        Organization must submit a Site Request to the Province for each physical location where it intends to provide\n        Site\n        Access, and must only provide Site Access from Sites approved in writing by the Province. For greater certainty,\n        a\n        Site Request is not required for each physical location from which remote access, as permitted under section\n        3.6,\n        may occur, but Organization must provide, with the Site Request, a list of the locations from which remote\n        access\n        may occur, and ensure this list remains current for the term of this agreement.\n      </li>\n      <li>\n        Organization must only provide Site Access using SSO-Provided Technology. For the purposes of remote access,\n        Organization must ensure that technology used meets the requirements of Schedule A.\n      </li>\n      <li>\n        Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network or\n        security technology that the Province certifies or makes available to Organization for the purpose of Site\n        Access.\n        The use of any such network or technology by Organization may be subject to terms and conditions of use,\n        including\n        acceptable use policies, established by the Province and communicated to Organization from time to time in\n        writing.\n      </li>\n      <li>\n        <p>\n          Organization must only make Site Access available to the following individuals:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            Authorized Users when they are physically located at a Site, and, in the case of an On-Behalf-of-User\n            accessing\n            personal information of a patient on behalf of a Regulated User, only if the Regulated User will be\n            delivering\n            care to that patient at the same Site at which the access to personal information occurs;\n          </li>\n          <li>\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\n            <em>Information Management Regulation</em>.\n          </li>\n        </ol>\n      </li>\n      <li>\n        Despite section 3.5(a), Organization may make Site Access available to Regulated Users who are physically\n        located in\n        British Columbia and remotely connected to a Site using a VPN or other remote access technology specifically\n        approved\n        by the Province in writing for the Site.\n      </li>\n      <li>\n        <p>\n          Organization must ensure that Authorized Users with Site Access:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            only access PharmaNet to the extent necessary to provide health services to, or facilitate the care of, the\n            individual whose personal information is being accessed;\n          </li>\n          <li>\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\n            available\n            in relation to PharmaNet;\n          </li>\n          <li>\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\n            multiple use of any such login identifications and credentials;\n          </li>\n          <li>\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use; and\n          </li>\n          <li>\n            in the case of remote access, comply with the policies of the Province relating to remote access to\n            PharmaNet.\n          </li>\n        </ol>\n      </li>\n      <li>\n        If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\n        Organization\n        will immediately take any local measures necessary to remove the Authorized User’s Site Access. Organization\n        will\n        only restore Site Access to a previously suspended or revoked Authorized User upon the Province’s specific\n        written\n        direction.\n      </li>\n      <li>\n        <p>\n          For the purposes of this section:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\n            Regulated User by whom,\n            or on whose behalf, that data was obtained from PharmaNet; and\n          </li>\n          <li>\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\n          </li>\n        </ol>\n\n        <p>\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\n          Responsible\n          User to whom it is disclosed.\n        </p>\n\n        <p>\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\n          Responsible\n          User has authorized such Use and it is otherwise permitted under the Act, applicable law, and the limits and\n          conditions imposed by the Province on the Responsible User.\n        </p>\n      </li>\n      <li>\n        <p>\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\n          unauthorized access,\n          collection, use, modification, retention, disclosure or disposal, including by:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\n            in\n            accordance with sections 3.1 to 3.9 above, and\n          </li>\n          <li>\n            complying with the requirements of Schedule A.\n          </li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"4\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\n        anticipates\n        that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge of any\n        circumstances,\n        incidents or events which have or may jeopardize the security, confidentiality or integrity of PharmaNet,\n        including any\n        attempt by any person to gain unauthorized access to PharmaNet or the networks or equipment used to connect to\n        PharmaNet\n        or convey PharmaNet Data.\n      </li>\n      <li>\n        Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable steps\n        to prevent\n        recurrences of any such breaches.\n      </li>\n      <li>\n        Organization must cooperate with any audits or investigations conducted by the Province (including any\n        independent auditor\n        appointed by the Province) regarding compliance with this Agreement, including by providing access upon request\n        to a Site\n        and any associated facilities, networks, equipment, systems, books, records and personnel for the purposes of\n        such audit\n        or investigation.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"5\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for the\n          Site, if:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\n            hardware, software,\n            or service in connection with PharmaNet, or\n          </li>\n          <li>\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or any\n            component\n            thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to PharmaNet,\n          </li>\n        </ol>\n\n        <p>\n          and the Organization is unable or unwilling to remedy the problem within a timeframe acceptable to the\n          Province.\n        </p>\n      </li>\n      <li>\n        As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\n        Access at a\n        Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to the Signing\n        Authority\n        for the Site, terminate all further Site Access at the Site.\n      </li>\n      <li>\n        Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\n        accordance with\n        this Article 5, of Site Access at the Site.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"6\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The term of this Agreement begins on the date first noted above and continues until it is terminated\n        in accordance with this Article 6.\n      </li>\n      <li>\n        Organization may terminate this Agreement at any time on notice to the Province.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\n        comply with any\n        provision of this Agreement.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\n        longer operates\n        any Sites where Site Access is permitted.\n      </li>\n      <li>\n        The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\n      </li>\n      <li>\n        Organization must prevent any further Site Access immediately upon termination of this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"7\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The PharmaNet access and PharmaNet Data provided under this Agreement are provided &quot;as is&quot; without\n        warranty of any kind,\n        whether express or implied. All implied warranties, including, without limitation, implied warranties of\n        merchantability,\n        fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed. The Province does not\n        warrant\n        the accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\n        to or\n        the operation of PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\n        special,\n        incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data, including\n        without\n        limitation any lost profits, business interruption, or loss of programs or information, even if the Province has\n        been specifically advised of the possibility of such damages.\n      </li>\n\n      <li>\n        Organization must indemnify and save harmless the Province, and the Province’s employees and agents (each an\n        <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages, actions, causes of action, costs and\n        expenses that an Indemnified Person may sustain, incur, suffer or be put to at any time, either before or after\n        this Agreement ends, which are based upon, arise out of or occur directly or indirectly by reason of any act\n        or omission by Organization, or by any Authorized User at the Site, in connection with this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 8 – GENERAL</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"8\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\n          of delivery, any notice to be given to the Province must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n        <p>\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\n          faxed\n          or text messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a\n          URL link or to log in to the Province’s &quot;PRIME&quot; system to receive the content of any such notice.\n        </p>\n\n        <p>\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\n          the\n          time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\n          Saturdays,\n          Sundays and statutory holidays) after the date the notice was sent.\n        </p>\n      </li>\n      <li>\n        <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\n        any\n        provision of this Agreement by Organization is not a waiver of its right subsequently to insist on performance\n        of\n        that or any other provision of this Agreement. A waiver of any provision or breach of this Agreement is\n        effective\n        only if it is writing and signed by, or on behalf of, the waiving party.\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\n          in writing and signed\n          by, or on behalf of, the parties.\n        </p>\n\n        <p>\n          Notwithstanding the foregoing, the Province may amend this Agreement, including the Schedules and this\n          section,\n          at any time in its sole discretion, by written notice to Organization, in which case the amendment will become\n          effective upon the later of: (i) the date notice of the amendment is delivered to Organization; and (ii) the\n          effective date of the amendment specified by the Province. The Province will make reasonable efforts to\n          provide\n          at least thirty (30) days advance notice of any such amendment, subject to any determination by the Province\n          that a shorter notice period is necessary due to changes in the Act, applicable law or applicable policies of\n          the Province, or is necessary to maintain privacy and security in relation to PharmaNet or PharmaNet Data.\n        </p>\n\n        <p>\n          If Organization does not agree with any amendment for which notice has been provided by the Province in\n          accordance with this section, Organization must promptly (and in any event prior to the effective date)\n          cease Site Access at all Sites and take the steps necessary to terminate this Agreement in accordance\n          with Article 6.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n{{signature_block}}\n\n<p class=\"text-center break-before\">\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\n</p>\n\n<p>\n  Organization must, in relation to each Site and in relation to Remote Access:\n</p>\n\n<ol type=\"a\">\n  <li>\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other\n    than Authorized Users;\n  </li>\n  <li>\n    <p>\n      implement all privacy and security measures specified in the following documents published by the Province, as\n      amended from time to time:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        <p>\n          the PharmaNet Professional and Software Conformance Standards\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n      <li>\n        <p>\n          Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\n          Architecture for Wireless Local Area Network Connectivity&quot;\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n        </a>\n      </li>\n      <li>\n        <p>\n          Policy for Secure Remote Access to PharmaNet\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n    </ol>\n  </li>\n  <li>\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\n    Technology\n    and Associated Technology, and should be capable of understanding and adhering to the standards set forth in this\n    Agreement and Schedule. Note that any such qualified technical support person must not be permitted by Organization\n    to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\n  </li>\n  <li>\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\n    in relation to the Site;\n  </li>\n  <li>\n    establish breach reporting and response processes in relation to the Site;\n  </li>\n  <li>\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\n  </li>\n  <li>\n    regularly review the administrative, physical and technological safeguards at the Site;\n  </li>\n  <li>\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\n    monitoring\n    and reporting mechanisms available to Authorized Users for this purpose.\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 26,
                            AgreementType = 5,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\r\n\r\n<p>\r\n  <strong>BETWEEN:</strong>\r\n</p>\r\n\r\n<p>\r\n  HIS MAJESTY THE KING IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as represented by the Minister of Health\r\n  (the &quot;Province&quot;).\r\n</p>\r\n\r\n<p>\r\n  <strong>AND:</strong>\r\n</p>\r\n\r\n<p>\r\n  {{organization_name}} (&quot;Organization&quot;)\r\n</p>\r\n\r\n<p>\r\n  <strong>WHEREAS:</strong>\r\n</p>\r\n\r\n<ol type=\"A\">\r\n  <li>\r\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\r\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\r\n    Columbia is entered into PharmaNet.\r\n  </li>\r\n  <li>\r\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is\r\n    in the public interest to ensure that appropriate measures are in place to protect the confidentiality\r\n    and integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to\r\n    the Act and other applicable law.\r\n  </li>\r\n  <li>\r\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\r\n    the care of, the individual whose personal information is being accessed.\r\n  </li>\r\n  <li>\r\n    Organization is a service provider to HealthLink BC, the Province’s self-care program providing health\r\n    information and advice to British Columbia through integrated print, web, and telephony channels to help\r\n    the public make better decisions about their health, and provides Services to the Province in accordance\r\n    with the Service Contract,\r\n  </li>\r\n  <li>\r\n    Pharmacists at Organization require access to PharmaNet so Organization can provide the Services in\r\n    accordance with the Service Contract.\r\n  </li>\r\n  <li>\r\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\r\n    at the Site(s) operated by Organization.\r\n  </li>\r\n</ol>\r\n\r\n<p>\r\n  <strong>NOW THEREFORE</strong> in consideration of the promises and the covenants, agreements, representations\r\n  and warranties set out in this Agreement (the receipt and sufficiency of which is hereby acknowledged by each\r\n  party), the parties agree as follows:\r\n</p>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"1\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <p>\r\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\r\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided Technology\r\n            used at the Site;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\r\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is in any way\r\n            used in connection with Site Access or any PharmaNet Data;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\r\n              Province and who is:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                an employee or independent contractor of Organization, or\r\n              </li>\r\n              <li>\r\n                if Organization is an individual, the Organization;\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\r\n            <em>Information Management Regulation</em>, B.C. Reg. 74/2015;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the\r\n            <em>Information Management Regulation</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet\r\n            and any records or information in the custody, control or possession of Organization or any Authorized User\r\n            as the result of any Site Access;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\r\n            of the <em>Information Management Regulation</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Service Contract&quot;</strong> means the contract for services between the Province and\r\n            Organization, contract file number 2021-075, dated November 1, 2020, as amended from time to time by the\r\n            parties in accordance with its terms;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\r\n            &quot;Signing Authority&quot; for a Site, with the associated contact information, as set out in section 2\r\n            of the Site Request;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Site&quot;</strong> means a licensed community pharmacy premises operated by Organization\r\n              and located in British Columbia that:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                is the subject of a Site Request submitted to the Province, and\r\n              </li>\r\n              <li>\r\n                has been approved for Site Access by the Province in writing\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site as permitted by\r\n            the Province;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\r\n            PharmaNet access request form submitted to the Province by the Organization, requesting PharmaNet access at\r\n            the Site, as such information is updated by the Organization from time to time in accordance with\r\n            section 2.2;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\r\n            services provided to Organization by an Approved SSO for the purpose of Site Access;\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\r\n        British Columbia of that name, as amended or replaced from time to time, and includes any enactments made\r\n        under the authority of that statute or regulation.\r\n      </li>\r\n      <li>\r\n        <p>\r\n          The following are the Schedules attached to and incorporated into this Agreement:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            Schedule A – Specific Privacy and Security Measures\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        The main body of this Agreement, the Schedules, and any documents incorporated by reference into this Agreement\r\n        are to be interpreted so that all of the provisions are given as full effect as possible. In the event of a\r\n        conflict, unless expressly stated to the contrary, the main body of the Agreement will prevail over the\r\n        Schedules, which will prevail over any document incorporated by reference.\r\n      </li>\r\n      <li>\r\n        For greater certainty, nothing in this Agreement is intended to modify or otherwise limit the applicability of\r\n        the privacy, security or confidentiality obligations agreed to by the Organization in the Service Contract.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"2\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <p>\r\n          Organization represents and warrants to the Province, as of the date of this Agreement and throughout its\r\n          term, that:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the information contained in the Site Request for each Site is true and correct;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              if Organization is not an individual:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\r\n              </li>\r\n              <li>\r\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery of\r\n                this Agreement by, or on behalf of, Organization; and\r\n              </li>\r\n              <li>\r\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\r\n                legally binding upon and enforceable against Organization in accordance with its terms.\r\n              </li>\r\n            </ol>\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        Organization must notify the Province at least seven (7) days in advance of any change to the information\r\n        contained in a Site Request, including any change to a Site’s status, location, normal operating hours,\r\n        Approved SSO, or the name and contact information of the Signing Authority or any of the other specific\r\n        roles set out in the Site Request. Such notices must be submitted to the Province in the form and manner\r\n        directed by the Province in its published instructions regarding the submission of updated Site Request\r\n        information, as such instructions may be updated from time to time by the Province.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"3\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        Organization must comply with the Act and all applicable law.\r\n      </li>\r\n      <li>\r\n        Organization must submit a Site Request to the Province for each physical location where it intends to provide\r\n        Site Access, and must only provide Site Access from Sites approved in writing by the Province and only as\r\n        authorized by the Province.\r\n      </li>\r\n      <li>\r\n        Organization must only provide Site Access using SSO-Provided Technology.\r\n      </li>\r\n      <li>\r\n        Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network\r\n        or security technology that the Province certifies or makes available to Organization for the purpose of Site\r\n        Access. The use of any such network or technology by Organization may be subject to terms and conditions of\r\n        use, including acceptable use policies, established by the Province and communicated to Organization from time\r\n        to time in writing (including through this Agreement), and Organization must comply with all such terms and\r\n        conditions of use.\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Organization must only make Site Access available to the following individuals:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            Authorized Users when they are physically located at a Site;\r\n          </li>\r\n          <li>\r\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\r\n            <em>Information Management Regulation</em>.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Organization must ensure that Authorized Users with Site Access:\r\n        </p>\r\n        <ol type=\"a\">\r\n          <li>\r\n            only access PharmaNet to the extent necessary to provide Services in accordance with the Service Contract;\r\n          </li>\r\n          <li>\r\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\r\n            available in relation to PharmaNet;\r\n          </li>\r\n          <li>\r\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\r\n            multiple use of any such login identifications and credentials;\r\n          </li>\r\n          <li>\r\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use;\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\r\n        Organization will immediately take any local measures necessary to remove the Authorized User’s Site Access.\r\n        Organization will only restore Site Access to a previously suspended or revoked Authorized User upon the\r\n        Province’s specific written direction.\r\n      </li>\r\n      <li>\r\n        <p>\r\n          For the purposes of this section:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\r\n            Regulated User by whom that data was obtained from PharmaNet; and\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\r\n          </li>\r\n        </ol>\r\n\r\n        <p>\r\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\r\n          Responsible Authorized User to whom it is disclosed.\r\n        </p>\r\n\r\n        <p>\r\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\r\n          Responsible Authorized User has authorized such Use and it is otherwise permitted under the Act, applicable\r\n          law, and the limits and conditions imposed by the Province on the Responsible Authorized User.\r\n        </p>\r\n\r\n        <p>\r\n          Organization explicitly acknowledges that sections 24 and 25 of the Act apply to all PharmaNet Data.\r\n        </p>\r\n\r\n        <p>\r\n          This Agreement documents limits and conditions, set by the Minister in writing, that the Act requires\r\n          Organization and Authorized Users to comply with.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\r\n          unauthorized access, collection, use, modification, retention, disclosure or disposal, including by:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\r\n            in accordance with sections 3.1 to 3.9 above, and\r\n          </li>\r\n          <li>\r\n            complying with the requirements of Schedule A.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        Organization must ensure that no Authorized User submits Claims on PharmaNet other than from a Site in respect\r\n        of which\r\n        a person is enrolled as a Provider.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"4\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\r\n        anticipates that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge\r\n        of any circumstances, incidents or events which have or may jeopardize the security, confidentiality or\r\n        integrity of PharmaNet, including any attempt by any person to gain unauthorized access to PharmaNet or the\r\n        networks or equipment used to connect to PharmaNet or convey PharmaNet Data.\r\n      </li>\r\n      <li>\r\n        Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable steps\r\n        to prevent recurrences of any such breaches.\r\n      </li>\r\n      <li>\r\n        Organization must cooperate with any audits or investigations conducted by the Province (including any\r\n        independent auditor appointed by the Province) regarding compliance with this Agreement, including by providing\r\n        access upon request to a Site and any associated facilities, networks, equipment, systems, books, records and\r\n        personnel for the purposes of such audit or investigation.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"5\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <p>\r\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for\r\n          the Site, if:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\r\n            hardware, software, or service in connection with PharmaNet, or\r\n          </li>\r\n          <li>\r\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or\r\n            any component thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to\r\n            PharmaNet and Organization is unable or unwilling to remedy the problem within a time frame acceptable to\r\n            the Province.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\r\n        Access at a Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to\r\n        the Signing Authority for the Site, terminate all further Site Access at the Site.\r\n      </li>\r\n      <li>\r\n        Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\r\n        accordance with this Article 5 of Site Access at the Site.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"6\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <p>\r\n          The term of this Agreement begins on the date first noted above and continues until the earliest of:\r\n        </p>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the expiration or earlier termination of the term of the Service Contract; or\r\n          </li>\r\n          <li>\r\n            the date this Agreement is terminated in accordance with this Article 6.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        Organization may terminate this Agreement at any time on notice to the Province.\r\n      </li>\r\n      <li>\r\n        The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\r\n        comply with any provision of this Agreement.\r\n      </li>\r\n      <li>\r\n        The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\r\n        longer operates any Sites where Site Access is permitted.\r\n      </li>\r\n      <li>\r\n        The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\r\n      </li>\r\n      <li>\r\n        Organization must prevent any further Site Access immediately upon expiration or termination of the term of\r\n        this Agreement.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"7\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        The PharmaNet access and PharmaNet Data provided under this Agreement are provided \"as is\" without warranty of\r\n        any kind, whether express or implied. All implied warranties, including, without limitation, implied warranties\r\n        of merchantability, fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed.\r\n        The Province does not warrant the accuracy, completeness or reliability of the PharmaNet Data or the\r\n        availability of PharmaNet, or that access to or the operation of PharmaNet will function without error,\r\n        failure or interruption.\r\n      </li>\r\n      <li>\r\n        Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\r\n        special, incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data,\r\n        including without limitation any lost profits, business interruption, or loss of programs or information, even\r\n        if the Province has been specifically advised of the possibility of such damages.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center\">\r\n  <strong>ARTICLE 8 – GENERAL</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"8\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <p>\r\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\r\n          of delivery, any notice to be given to the Province must be in writing and mailed or emailed to:\r\n        </p>\r\n\r\n        <address>\r\n          Director, Information and PharmaNet Innovation<br>\r\n          Ministry of Health<br>\r\n          PO Box 9652, STN PROV GOVT<br>\r\n          Victoria, BC V8W 9P4<br>\r\n\r\n          <br>\r\n\r\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\r\n        </address>\r\n\r\n        <p>\r\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\r\n          faxed or text-messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\r\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a URL\r\n          link or to log in to the Province’s \"PRIME\" system to receive the content of any such notice.\r\n        </p>\r\n\r\n        <p>\r\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\r\n          the time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\r\n          Saturdays, Sundays and statutory holidays) after the date the notice was sent.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\r\n        any provision of this Agreement by Organization is not a waiver of its right subsequently to insist on\r\n        performance of that or any other provision of this Agreement. A waiver of any provision or breach of this\r\n        Agreement is effective only if it is writing and signed by, or on behalf of, the waiving party.\r\n      </li>\r\n      <li>\r\n        <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\r\n        in writing and signed by, or on behalf of, the parties.\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\r\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong class=\"underline\">Survival.</strong> Sections 3.1, 3.8, 3.9, 4, 7 and any other provision of this\r\n          Agreement that expressly or by its nature continues after termination, shall survive termination of this\r\n          Agreement.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n{{signature_block}}\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\r\n</p>\r\n\r\n<p>\r\n  Organization must, in relation to each Site\r\n</p>\r\n\r\n<ol type=\"a\">\r\n  <li>\r\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other than\r\n    Authorized Users;\r\n  </li>\r\n  <li>\r\n    <p>\r\n      implement all privacy and security measures specified in the following documents published by the Province, as\r\n      amended from time to time:\r\n    </p>\r\n\r\n    <ol type=\"i\">\r\n      <li>\r\n        <p>\r\n          the PharmaNet Professional and Software Conformance Standards\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Office of the Chief Information Officer: \"Submission for Technical Security Standard and High Level\r\n          Architecture for Wireless Local Area Network Connectivity\"\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\r\n        </a>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\r\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\r\n    Technology and Associated Technology, and should be capable of understanding and adhering to the standards set\r\n    forth in this Agreement and Schedule. Note that any such qualified technical support person must not be permitted\r\n    by Organization to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\r\n  </li>\r\n  <li>\r\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\r\n    in relation to the Site;\r\n  </li>\r\n  <li>\r\n    establish breach reporting and response processes in relation to the Site;\r\n  </li>\r\n  <li>\r\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\r\n  </li>\r\n  <li>\r\n    regularly review the administrative, physical and technological safeguards at the Site;\r\n  </li>\r\n  <li>\r\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\r\n    monitoring and reporting mechanisms available to Authorized Users for this purpose.\r\n  </li>\r\n</ol>\r\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 27,
                            AgreementType = 7,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 11, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\n\n<p>\n  This Organization Agreement for PharmaNet Use (the &quot;Agreement&quot;) is executed by {{organization_name}}\n  (&quot;Organization&quot;) for the benefit of HIS MAJESTY THE KING IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as\n  represented by the Minister of Health (the &quot;Province&quot;).\n</p>\n\n<p>\n  <strong>WHEREAS:</strong>\n</p>\n\n<ol type=\"A\">\n  <li>\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\n    Columbia is entered into PharmaNet.\n  </li>\n  <li>\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is in\n    the public interest to ensure that appropriate measures are in place to protect the confidentiality and\n    integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to the\n    Act and other applicable law.\n  </li>\n  <li>\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\n    the care of, the individual whose personal information is being accessed.\n  </li>\n  <li>\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\n    at the Site(s) operated by Organization.\n  </li>\n</ol>\n\n<p>\n  <strong>NOW THEREFORE</strong> Organization makes this Agreement knowing that the Province will rely on it\n  in permitting access to and use of PharmaNet from Sites operated by Organization. Organization conclusively\n  acknowledges that reliance by the Province on this Agreement is in every respect justifiable and that it\n  received fair and valuable consideration for this Agreement, the receipt and adequacy of which is hereby\n  acknowledged. Organization hereby agrees as follows:\n</p>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"1\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\n          </li>\n          <li>\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided\n            Technology used at the Site;\n          </li>\n          <li>\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is\n            in any way used in connection with Site Access or any PharmaNet Data;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\n              Province and who is:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                an employee or independent contractor of Organization, or\n              </li>\n              <li>\n                if Organization is an individual, the Organization;\n              </li>\n            </ol>\n          </li>\n          <li>\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\n            <em>Information Management Regulation</em>,\n            B.C. Reg. 74/2015;\n          </li>\n          <li>\n            <strong>&quot;On-Behalf-Of User&quot;</strong> means an Authorized User described in subsection 4 (5) of the\n            <em>Information Management Regulation</em> who acts on behalf of a Regulated User when accessing\n            PharmaNet;\n          </li>\n          <li>\n            &quot;PharmaNet&quot; means PharmaNet as continued under section 2 of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet and\n            any records\n            or information in the custody, control or possession of Organization or any Authorized User as the result of\n            any Site Access;\n          </li>\n          <li>\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\n            of the\n            <em>Information Management Regulation</em>;\n          </li>\n          <li>\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\n            &quot;Signing Authority&quot;\n            for a Site, with the associated contact information, as set out in section 2 of the Site Request;\n          </li>\n          <li>\n            <p>\n              <strong>&quot;Site&quot;</strong> means a premises operated by Organization and located in British\n              Columbia that:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                is the subject of a Site Request submitted to the Province, and\n              </li>\n              <li>\n                has been approved for Site Access by the Province in writing\n              </li>\n            </ol>\n\n            <p class=\"underline\">\n              For greater certainty, &quot;Site&quot; does not include a location from which remote access to PharmaNet\n              takes place;\n            </p>\n          </li>\n          <li>\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site or remotely as\n            permitted\n            by the Province;\n          </li>\n          <li>\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\n            PharmaNet access\n            request form submitted to the Province by the Organization, requesting PharmaNet access at the Site, as such\n            information is updated by the Organization from time to time in accordance with section 2.2;\n          </li>\n          <li>\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\n            services\n            provided to Organization by an Approved SSO for the purpose of Site Access;\n          </li>\n        </ol>\n      </li>\n      <li>\n        Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\n        British\n        Columbia of that name, as amended or replaced from time to time, and includes any enactments made under the\n        authority\n        of that statute or regulation.\n      </li>\n      <li>\n        <p>\n          The following are the Schedules attached to and incorporated into this Agreement:\n        </p>\n\n        <ul>\n          <li>\n            Schedule A – Specific Privacy and Security Measures\n          </li>\n        </ul>\n      </li>\n      <li>\n        The main body of this Agreement, the Schedules, and any documents incorporated by reference into this Agreement\n        are to\n        be interpreted so that all of the provisions are given as full effect as possible. In the event of a conflict,\n        unless\n        expressly stated to the contrary the main body of the Agreement will prevail over the Schedules, which will\n        prevail\n        over any document incorporated by reference.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"2\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          Organization represents and warrants to the Province, as of the date of this\n          Agreement and throughout its term, that:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the information contained in the Site Request for each Site is true and correct;\n          </li>\n          <li>\n            <p>\n              if Organization is not an individual:\n            </p>\n\n            <ol type=\"i\">\n              <li>\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\n              </li>\n              <li>\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery\n                of this Agreement by, or on behalf of, Organization; and\n              </li>\n              <li>\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\n                legally binding upon and enforceable against Organization in accordance with its terms.\n              </li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n      <li>\n        Organization must immediately notify the Province of any change to the information contained in a Site Request,\n        including any change to a Site’s status, location, normal operating hours, Approved SSO, or the name and contact\n        information of the Signing Authority or any of the other specific roles set out in the Site Request. Such\n        notices\n        must be submitted to the Province in the form and manner directed by the Province in its published instructions\n        regarding the submission of updated Site Request information, as such instructions may be updated from time to\n        time by the Province.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"3\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must comply with the Act and all applicable law.\n      </li>\n      <li>\n        Organization must submit a Site Request to the Province for each physical location where it intends to provide\n        Site\n        Access, and must only provide Site Access from Sites approved in writing by the Province. For greater certainty,\n        a\n        Site Request is not required for each physical location from which remote access, as permitted under section\n        3.6,\n        may occur, but Organization must provide, with the Site Request, a list of the locations from which remote\n        access\n        may occur, and ensure this list remains current for the term of this agreement.\n      </li>\n      <li>\n        Organization must only provide Site Access using SSO-Provided Technology. For the purposes of remote access,\n        Organization must ensure that technology used meets the requirements of Schedule A.\n      </li>\n      <li>\n        Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network or\n        security technology that the Province certifies or makes available to Organization for the purpose of Site\n        Access.\n        The use of any such network or technology by Organization may be subject to terms and conditions of use,\n        including\n        acceptable use policies, established by the Province and communicated to Organization from time to time in\n        writing.\n      </li>\n      <li>\n        <p>\n          Organization must only make Site Access available to the following individuals:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            Authorized Users when they are physically located at a Site, and, in the case of an On-Behalf-of-User\n            accessing\n            personal information of a patient on behalf of a Regulated User, only if the Regulated User will be\n            delivering\n            care to that patient at the same Site at which the access to personal information occurs;\n          </li>\n          <li>\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\n            <em>Information Management Regulation</em>.\n          </li>\n        </ol>\n      </li>\n      <li>\n        Despite section 3.5(a), Organization may make Site Access available to Regulated Users who are physically\n        located in\n        British Columbia and remotely connected to a Site using a VPN or other remote access technology specifically\n        approved\n        by the Province in writing for the Site.\n      </li>\n      <li>\n        <p>\n          Organization must ensure that Authorized Users with Site Access:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            only access PharmaNet to the extent necessary to provide health services to, or facilitate the care of, the\n            individual whose personal information is being accessed;\n          </li>\n          <li>\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\n            available\n            in relation to PharmaNet;\n          </li>\n          <li>\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\n            multiple use of any such login identifications and credentials;\n          </li>\n          <li>\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use; and\n          </li>\n          <li>\n            in the case of remote access, comply with the policies of the Province relating to remote access to\n            PharmaNet.\n          </li>\n        </ol>\n      </li>\n      <li>\n        If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\n        Organization\n        will immediately take any local measures necessary to remove the Authorized User’s Site Access. Organization\n        will\n        only restore Site Access to a previously suspended or revoked Authorized User upon the Province’s specific\n        written\n        direction.\n      </li>\n      <li>\n        <p>\n          For the purposes of this section:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\n            Regulated User by whom,\n            or on whose behalf, that data was obtained from PharmaNet; and\n          </li>\n          <li>\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\n          </li>\n        </ol>\n\n        <p>\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\n          Responsible\n          User to whom it is disclosed.\n        </p>\n\n        <p>\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\n          Responsible\n          User has authorized such Use and it is otherwise permitted under the Act, applicable law, and the limits and\n          conditions imposed by the Province on the Responsible User.\n        </p>\n      </li>\n      <li>\n        <p>\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\n          unauthorized access,\n          collection, use, modification, retention, disclosure or disposal, including by:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\n            in\n            accordance with sections 3.1 to 3.9 above, and\n          </li>\n          <li>\n            complying with the requirements of Schedule A.\n          </li>\n        </ol>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"4\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\n        anticipates\n        that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge of any\n        circumstances,\n        incidents or events which have or may jeopardize the security, confidentiality or integrity of PharmaNet,\n        including any\n        attempt by any person to gain unauthorized access to PharmaNet or the networks or equipment used to connect to\n        PharmaNet\n        or convey PharmaNet Data.\n      </li>\n      <li>\n        Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable steps\n        to prevent\n        recurrences of any such breaches.\n      </li>\n      <li>\n        Organization must cooperate with any audits or investigations conducted by the Province (including any\n        independent auditor\n        appointed by the Province) regarding compliance with this Agreement, including by providing access upon request\n        to a Site\n        and any associated facilities, networks, equipment, systems, books, records and personnel for the purposes of\n        such audit\n        or investigation.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"5\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for the\n          Site, if:\n        </p>\n\n        <ol type=\"a\">\n          <li>\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\n            hardware, software,\n            or service in connection with PharmaNet, or\n          </li>\n          <li>\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or any\n            component\n            thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to PharmaNet,\n          </li>\n        </ol>\n\n        <p>\n          and the Organization is unable or unwilling to remedy the problem within a timeframe acceptable to the\n          Province.\n        </p>\n      </li>\n      <li>\n        As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\n        Access at a\n        Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to the Signing\n        Authority\n        for the Site, terminate all further Site Access at the Site.\n      </li>\n      <li>\n        Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\n        accordance with\n        this Article 5, of Site Access at the Site.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"6\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The term of this Agreement begins on the date first noted above and continues until it is terminated\n        in accordance with this Article 6.\n      </li>\n      <li>\n        Organization may terminate this Agreement at any time on notice to the Province.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\n        comply with any\n        provision of this Agreement.\n      </li>\n      <li>\n        The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\n        longer operates\n        any Sites where Site Access is permitted.\n      </li>\n      <li>\n        The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\n      </li>\n      <li>\n        Organization must prevent any further Site Access immediately upon termination of this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"7\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        The PharmaNet access and PharmaNet Data provided under this Agreement are provided &quot;as is&quot; without\n        warranty of any kind,\n        whether express or implied. All implied warranties, including, without limitation, implied warranties of\n        merchantability,\n        fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed. The Province does not\n        warrant\n        the accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\n        to or\n        the operation of PharmaNet will function without error, failure or interruption.\n      </li>\n      <li>\n        Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\n        special,\n        incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data, including\n        without\n        limitation any lost profits, business interruption, or loss of programs or information, even if the Province has\n        been specifically advised of the possibility of such damages.\n      </li>\n\n      <li>\n        Organization must indemnify and save harmless the Province, and the Province’s employees and agents (each an\n        <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages, actions, causes of action, costs and\n        expenses that an Indemnified Person may sustain, incur, suffer or be put to at any time, either before or after\n        this Agreement ends, which are based upon, arise out of or occur directly or indirectly by reason of any act\n        or omission by Organization, or by any Authorized User at the Site, in connection with this Agreement.\n      </li>\n    </ol>\n  </li>\n</ol>\n\n<p class=\"text-center\">\n  <strong>ARTICLE 8 – GENERAL</strong>\n</p>\n\n<ol type=\"1\"\n    start=\"8\"\n    class=\"decimal\">\n  <li>\n    <ol type=\"1\">\n      <li>\n        <p>\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\n          of delivery, any notice to be given to the Province must be in writing and emailed or mailed to:\n        </p>\n\n        <address>\n          Director, Information and PharmaNet Innovation<br>\n          Ministry of Health<br>\n          PO Box 9652, STN PROV GOVT<br>\n          Victoria, BC V8W 9P4<br>\n\n          <br>\n\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\n        </address>\n\n        <p>\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\n          faxed\n          or text messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a\n          URL link or to log in to the Province’s &quot;PRIME&quot; system to receive the content of any such notice.\n        </p>\n\n        <p>\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\n          the\n          time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\n          Saturdays,\n          Sundays and statutory holidays) after the date the notice was sent.\n        </p>\n      </li>\n      <li>\n        <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\n        any\n        provision of this Agreement by Organization is not a waiver of its right subsequently to insist on performance\n        of\n        that or any other provision of this Agreement. A waiver of any provision or breach of this Agreement is\n        effective\n        only if it is writing and signed by, or on behalf of, the waiving party.\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\n          in writing and signed\n          by, or on behalf of, the parties.\n        </p>\n\n        <p>\n          Notwithstanding the foregoing, the Province may amend this Agreement, including the Schedules and this\n          section,\n          at any time in its sole discretion, by written notice to Organization, in which case the amendment will become\n          effective upon the later of: (i) the date notice of the amendment is delivered to Organization; and (ii) the\n          effective date of the amendment specified by the Province. The Province will make reasonable efforts to\n          provide\n          at least thirty (30) days advance notice of any such amendment, subject to any determination by the Province\n          that a shorter notice period is necessary due to changes in the Act, applicable law or applicable policies of\n          the Province, or is necessary to maintain privacy and security in relation to PharmaNet or PharmaNet Data.\n        </p>\n\n        <p>\n          If Organization does not agree with any amendment for which notice has been provided by the Province in\n          accordance with this section, Organization must promptly (and in any event prior to the effective date)\n          cease Site Access at all Sites and take the steps necessary to terminate this Agreement in accordance\n          with Article 6.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\n        </p>\n      </li>\n    </ol>\n  </li>\n</ol>\n\n{{signature_block}}\n\n<p class=\"text-center break-before\">\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\n</p>\n\n<p>\n  Organization must, in relation to each Site and in relation to Remote Access:\n</p>\n\n<ol type=\"a\">\n  <li>\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other\n    than Authorized Users;\n  </li>\n  <li>\n    <p>\n      implement all privacy and security measures specified in the following documents published by the Province, as\n      amended from time to time:\n    </p>\n\n    <ol type=\"i\">\n      <li>\n        <p>\n          the PharmaNet Professional and Software Conformance Standards\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n      <li>\n        <p>\n          Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\n          Architecture for Wireless Local Area Network Connectivity&quot;\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\n        </a>\n      </li>\n      <li>\n        <p>\n          Policy for Secure Remote Access to PharmaNet\n        </p>\n\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\n           target=\"_blank\"\n           rel=\"noopener noreferrer\">\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\n        </a>\n      </li>\n    </ol>\n  </li>\n  <li>\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\n    Technology\n    and Associated Technology, and should be capable of understanding and adhering to the standards set forth in this\n    Agreement and Schedule. Note that any such qualified technical support person must not be permitted by Organization\n    to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\n  </li>\n  <li>\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\n    in relation to the Site;\n  </li>\n  <li>\n    establish breach reporting and response processes in relation to the Site;\n  </li>\n  <li>\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\n  </li>\n  <li>\n    regularly review the administrative, physical and technological safeguards at the Site;\n  </li>\n  <li>\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\n    monitoring\n    and reporting mechanisms available to Authorized Users for this purpose.\n  </li>\n</ol>\n",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 28,
                            AgreementType = 9,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 9, 27, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>\r\n  PharmaNet Licenced Practical Nurse Registrant Terms of Access\r\n</h1>\r\n<p class=\"bold\">\r\n  By enrolling for PharmaNet access, you agree to the following terms (the &quot;Agreement&quot;). Please read them\r\n  carefully.\r\n</p>\r\n<ol>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      BACKGROUND\r\n    </p>\r\n    <p>\r\n      The Province owns and is responsible for the operation of PharmaNet, the province- wide network that links all\r\n      health\r\n      care providers in British Columbia to a central data system. Every prescription dispensed in community pharmacies\r\n      is\r\n      entered into PharmaNet.\r\n    </p>\r\n    <p>\r\n      The purpose of providing you with access to PharmaNet is to enhance patient care by providing timely and relevant\r\n      information to persons involved in the provision of direct patient care.\r\n    </p>\r\n    <p class=\"bold\">\r\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\r\n      and\r\n      confidential information of third- party licensors to the Province, and it is in the public interest to ensure\r\n      that\r\n      appropriate measures are in place to protect the confidentiality of all such information. All access to and use of\r\n      PharmaNet and PharmaNet Data is subject to the Act and other applicable laws.\r\n    </p>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      INTERPRETATION\r\n    </p>\r\n    <ol type=\"a\">\r\n      <li>\r\n        <p>\r\n          <strong>Definitions.</strong> Unless otherwise provided, capitalized terms in these Terms of Access will have\r\n          the meanings given below:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Approved Site&quot;</strong> means a location within which you provide Health Services and\r\n              which is approved by the Province for PharmaNet access.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Conformance Standards&quot;</strong> means the following documents published by the\r\n              Province, as amended from time to time:\r\n            </p>\r\n            <ol type=\"i\">\r\n              <li>\r\n                <p>\r\n                  PharmaNet Professional and Software Conformance Standards\r\n                </p>\r\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>:\r\n                and\r\n              </li>\r\n              <li>\r\n                <p>\r\n                  Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High\r\n                  Level\r\n                  Architecture for Wireless Local Area Network Connectivity&quot;.\r\n                </p>\r\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet \">https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet</a>.\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Health Services&quot;</strong> means &quot;health services&quot; as defined in the\r\n              Information\r\n              Management Regulation.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Information Management Regulation&quot;</strong> means the Information Management\r\n              Regulation,\r\n              B.C. Reg. 328/2021.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Personal Information&quot;</strong> means recorded information about an identifiable\r\n              individual.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;PharmaNet Access Agreement&quot;</strong> means, in respect of an Approved Site, the\r\n              &quot;PharmaNet access agreement&quot; (as defined in the Information Management\r\n              Regulation) between the Province and the owner or operator of the Approved Site.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;PharmaCare Newsletter&quot;</strong>means the PharmaCare newsletter published by the\r\n              Province\r\n              on the following website (or such other website as may be\r\n              specified by the Province from time to time for this purpose):\r\n              <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\">www.gov.bc.ca/pharmacarenewsletter</a>\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the Information\r\n              Management Regulation.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;PharmaNet Data&quot;</strong> includes any record or information contained in PharmaNet and\r\n              any record or information obtained from PharmaNet that is\r\n              in your custody, control or possession.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;PRIME&quot;</strong> means the online service provided by the Province that allows users to\r\n              apply for, and manage, their access to PharmaNet,\r\n              and through which users are granted access by the Province.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Province&quot;</strong> means His Majesty the King in Right of British Columbia, as\r\n              represented by the Minister of Health.\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Professional College&quot;</strong> means the regulatory body governing your provision of\r\n              Health Services.\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Reference to Enactments.</strong> In these Terms of Access, a reference to a statute or regulation by\r\n          name means the statute or regulation of British\r\n          Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\r\n          authority of that statute or regulation.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      ACCESS TERMS\r\n    </p>\r\n    <ol type=\"a\">\r\n      <li>\r\n        <p>\r\n          <strong>Acknowledgement.</strong> You acknowledge that:\r\n        </p>\r\n        <ol type=\"i\">\r\n          <li>\r\n            the Act and the Information Management Regulation govern your PharmaNet access;\r\n          </li>\r\n          <li>\r\n            PharmaNet Data accessed or obtained as a result of such access is disclosed to you by the Province under\r\n            the\r\n            authority of the Act;\r\n          </li>\r\n          <li>\r\n            sections 24 and 25(3) of the Act govern your further use or disclosure of PharmaNet Data; and\r\n          </li>\r\n          <li>\r\n            these terms of access document limits and conditions set, in writing, by the minister, that you are required\r\n            to\r\n            comply with pursuant to section 24(2) of the Act.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Compliance with Applicable Law.</strong> You must comply with the Act, the Information Management\r\n          Regulation and all other laws applicable to PharmaNet access\r\n          and PharmaNet Data.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Written Limits and Conditions of Access.</strong> The following limits and conditions apply to your\r\n          access to PharmaNet:\r\n        </p>\r\n        <ol type=\"i\">\r\n          <li>\r\n            unless (ii) below applies, you must only access PharmaNet when you are physically at an Approved Site, using\r\n            the\r\n            technologies and applications at the Approved Site that are approved by the Province for use for PharmaNet\r\n            access.\r\n          </li>\r\n          <li>\r\n            you may access PharmaNet &quot;remotely&quot; and when you are not physically at the Approved Site only if\r\n            all the following conditions are met:\r\n            <ol type=\"1\">\r\n              <li>\r\n                the owner or operator of the Approved Site has registered you with the Province for remote access\r\n                through the\r\n                Approved Site;\r\n              </li>\r\n              <li>\r\n                you have applied for remote access at the Approved Site using PRIME and are approved by the Province;\r\n              </li>\r\n              <li>\r\n                you are physically located in British Columbia at the time of any such remote access:\r\n              </li>\r\n              <li>\r\n                the remote access technology used at the Approved Site has been specifically approved in writing by the\r\n                Province, and\r\n              </li>\r\n              <li>\r\n                the requirements of the Province’s Policy for Remote Access to PharmaNet\r\n                (https://www2.gov.bc.ca/gov/content/health/practitioner-\r\n                professional-resources/software/conformance-standards) are met.\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            you will complete any PharmaNet-related training programs made available to you by the software support\r\n            organization that provides the information technology software and/or services for accessing PharmaNet at\r\n            the Approved\r\n            Site;\r\n          </li>\r\n          <li>\r\n            you acknowledge that the Province may, in writing, communicate additional written limits or conditions\r\n            that apply to\r\n            your access to PharmaNet, in which case you must comply with any such limits or conditions in addition to\r\n            the limits and\r\n            conditions established under these terms of access.\r\n          </li>\r\n          <li>\r\n            you must not permit on-behalf-of users (as defined in the Information Management Regulation) to access\r\n            PharmaNet on\r\n            your behalf.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Privacy and Security Measures.</strong> You will take all reasonable measures to safeguard Personal\r\n          Information, including any Personal Information in the\r\n          PharmaNet Data, while it is in your custody, control or possession. Without limiting the foregoing, you will:\r\n        </p>\r\n        <ol type=\"i\">\r\n          <li>\r\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\r\n            PharmaNet;\r\n          </li>\r\n          <li>\r\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Conformance Standards.</strong> You will comply with the rules specified in the Conformance Standards\r\n          when accessing and recording information in\r\n          PharmaNet.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\r\n    </p>\r\n    <ol type=\"a\">\r\n      <li>\r\n        <p><strong>Retention of PharmaNet Data.</strong> You will not store or retain PharmaNet Data in any paper files\r\n          or\r\n          any electronic system, unless such storage or\r\n          retention is required for record keeping in connection with your provisions of Health Services; is in\r\n          accordance\r\n          with\r\n          the requirements of your Professional College; and is otherwise in compliance with the Conformance Standards.\r\n          You will\r\n          not modify any records retained in accordance with this section other than as may be expressly authorized in\r\n          the\r\n          Conformance Standards. For clarity, you may annotate a discrete record provided that the discrete record is\r\n          not\r\n          itself\r\n          modified other than as expressly authorized in the Conformance Standards.</p>\r\n      </li>\r\n      <li>\r\n        <p><strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\r\n          4(a) of these Terms of Access for a purpose\r\n          authorized under section 24(1) of the Act.</p>\r\n      </li>\r\n      <li>\r\n        <p><strong>Secondary Use.</strong> Subject to section 4(b) of these Terms of Access, you must not use PharmaNet\r\n          Data for the purpose of quality\r\n          improvement, evaluation, health care planning, surveillance, research, or any purpose other than your\r\n          provision\r\n          of\r\n          Health Services.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p><strong>Disclosure to Third Parties.</strong> You must not disclose PharmaNet Data to any third party unless\r\n          such disclosure is required for your provision of Health\r\n          Services or is otherwise authorized under section 24(1) of the Act.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p><strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\r\n          with section 4(a) of these Terms of Access, you will not provide to\r\n          patients any copies of records containing PharmaNet Data or &quot;print outs&quot; produced directly from\r\n          PharmaNet,\r\n          and\r\n          will\r\n          refer any requests for access to such records or &quot;print outs&quot; to the Province.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p><strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request\r\n          for\r\n          correction of any record or information contained in PharmaNet, you will refer the request\r\n          to the Province.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p><strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province\r\n          if\r\n          you receive any order, demand or request compelling, or threatening to\r\n          compel, disclosure of records contained in PharmaNet. You will cooperate and consult with the Province in\r\n          responding to\r\n          any such demands. For greater certainty, the foregoing requires that you notify the Province only with respect\r\n          to any\r\n          access requests or demands for records contained in PharmaNet, and not records retained by you in accordance\r\n          with\r\n          section 4(a) of these Terms of Access.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      ACCURACY\r\n    </p>\r\n    <p>\r\n      You will make reasonable efforts to ensure that any Personal Information recorded by you in PharmaNet is accurate,\r\n      complete and up to date. In the event that you become aware of a material inaccuracy or error in such information,\r\n      you\r\n      will take reasonable steps to investigate the inaccuracy or error, correct it if necessary, and notify the\r\n      Province of\r\n      the inaccuracy or error and any steps taken.\r\n    </p>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      NOTICE OF NON COMPLIANCE\r\n    </p>\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Non-Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\r\n        <ol type=\"i\">\r\n          <li>\r\n            you do not comply, or you anticipate that you will be unable to comply with these Terms of Access in any\r\n            respect, or\r\n          </li>\r\n          <li>\r\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\r\n            confidentiality, or integrity of PharmaNet, the provincial drug program, or any government network or\r\n            electronic system\r\n            including any unauthorized attempt, by any person, to access PharmaNet.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge that the Province may report of\r\n          any material breach of the Act, the Information Management Regulation,\r\n          or these Terms of Access to your Professional College or to the Information and Privacy Commissioner of\r\n          British\r\n          Columbia.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      SUSPENSION & TERMINATION OF ACCESS\r\n    </p>\r\n    <ol type=\"a\">\r\n      <li>\r\n        <p><strong>Termination by You for Any Reason.</strong> You may terminate your grant of access to PharmaNet at\r\n          any time on\r\n          written notice to the Province.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Termination of PharmaNet access.</strong> The Province may take administrative action against you in\r\n          relation to\r\n          your grant of access to PharmaNet, including to\r\n          terminate or suspend your access, in accordance with the provisions of the Information Management Regulation.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\r\n          account\r\n          after a period of inactivity, in accordance with the\r\n          Province’s policies. Please contact the Province immediately if your account has been suspended for inactivity\r\n          but you\r\n          still require access to PharmaNet.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\r\n    </p>\r\n    <ol type=\"a\">\r\n      <li>\r\n        <p>\r\n          <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\r\n          Data is solely at your own risk. All such access and information is provided on an &quot;as is&quot; and\r\n          &quot;as available&quot; basis without warranty or condition of any kind. The Province does not warrant the\r\n          accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\r\n          to or the operation of PharmaNet will function without error, failure or interruption.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed\r\n          to you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or\r\n          acting upon such information. The clinical or other information disclosed to you or an On-Behalf-of User\r\n          pursuant to this Agreement is in no way intended to be a substitute for professional judgment.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\r\n          for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or\r\n          PharmaNet Data.\r\n        </p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\r\n          harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\r\n          from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\r\n          sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\r\n          upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\r\n          On-Behalf-of User, in connection with this Agreement.\r\n        </p>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      GENERAL\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <p>\r\n          <strong>Notice to Province.</strong> Except where these Terms of Access expressly provides for another method\r\n          of delivery, any notice to be given by you to\r\n          the Province that is contemplated by these Terms of Access must be in writing and emailed or mailed to:\r\n        </p>\r\n\r\n        Director, Information and PharmaNet Development<br/>\r\n        Ministry of Health<br/>\r\n        PO Box 9652, STN PROV GOVT<br/>\r\n        Victoria, BC V8W 9P4<br/>\r\n\r\n        <p>\r\n          Email: <i><a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a></i>\r\n        </p>\r\n\r\n        <p>\r\n          <strong>Notice to You.</strong> Any notice to you to be delivered under these Terms of Access will be in\r\n          writing and delivered by the Province to you\r\n          using any of the contact mechanisms identified by you in PRIME, including by mail to a specified postal\r\n          address, email\r\n          to a specified email address or text message to the specified cell phone number. You may be required to click\r\n          a URL link\r\n          or log into PRIME to receive the content of any such notice.\r\n        </p>\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Deemed receipt.</strong>\r\n          Any written communication from a party, if sent electronically, will be deemed to have been received\r\n          immediately, or, if\r\n          sent by mail, will be deemed to have been received three days (excluding Saturdays, Sundays and statutory\r\n          holidays)\r\n          after the date the notice was sent.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Substitute contact information.</strong>\r\n          You may notify the Province of a substitute contact mechanism by updating your contact information in PRIME.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n        <strong>Province may modify Terms of Access.</strong>\r\n        The Province may amend these Terms of Access, including this section, at any time in its sole discretion:\r\n        <ol type=\"i\">\r\n          <li>\r\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\r\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment\r\n            specified by the Province, if any;\r\n            or </li>\r\n          <li>\r\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\r\n            specify the effective date of the amendment, which date will be at least thirty days after the date\r\n            that the PharmaCare Newsletter containing the notice is first published. </li>\r\n        </ol>\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n</ol>\r\n<p>\r\n  Version Date: September 27, 2022\r\n</p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 29,
                            AgreementType = 4,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2023, 6, 19, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\r\n\r\n<p>\r\n  This Organization Agreement for PharmaNet Use (the &quot;Agreement&quot;) is executed by {{organization_name}}\r\n  (&quot;Organization&quot;) for the benefit of HIS MAJESTY THE KING IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as\r\n  represented by the Minister of Health (the &quot;Province&quot;).\r\n</p>\r\n\r\n<p>\r\n  <strong>WHEREAS:</strong>\r\n</p>\r\n\r\n<ol type=\"A\">\r\n  <li>\r\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\r\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\r\n    Columbia is entered into PharmaNet.\r\n  </li>\r\n  <li>\r\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is in\r\n    the public interest to ensure that appropriate measures are in place to protect the confidentiality and\r\n    integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to the\r\n    Act and other applicable law.\r\n  </li>\r\n  <li>\r\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\r\n    the care of, the individual whose personal information is being accessed.\r\n  </li>\r\n  <li>\r\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\r\n    at the Site(s) operated by Organization.\r\n  </li>\r\n</ol>\r\n\r\n<p>\r\n  <strong>NOW THEREFORE</strong> Organization makes this Agreement knowing that the Province will rely on it\r\n  in permitting access to and use of PharmaNet from Sites operated by Organization. Organization conclusively\r\n  acknowledges that reliance by the Province on this Agreement is in every respect justifiable and that it\r\n  received fair and valuable consideration for this Agreement, the receipt and adequacy of which is hereby\r\n  acknowledged. Organization hereby agrees as follows:\r\n</p>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"1\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\r\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided\r\n            Technology used at the Site;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\r\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is\r\n            in any way used in connection with Site Access or any PharmaNet Data;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\r\n              Province and who is:\r\n            </p>\r\n            <ol type=\"i\">\r\n              <li>\r\n                an employee or independent contractor of Organization, or\r\n              </li>\r\n              <li>\r\n                if Organization is an individual, the Organization;\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\r\n            <em>Information Management Regulation</em>,\r\n            B.C. Reg. 74/2015;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;On-Behalf-Of User&quot;</strong> means an Authorized User described in subsection 4 (5) of the\r\n            <em>Information Management Regulation</em> who acts on behalf of a Regulated User when accessing\r\n            PharmaNet;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the\r\n            <em>Information Management Regulation</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet and\r\n            any records\r\n            or information in the custody, control or possession of Organization or any Authorized User as the result of\r\n            any Site Access;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\r\n            of the\r\n            <em>Information Management Regulation</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\r\n            &quot;Signing Authority&quot;\r\n            for a Site, with the associated contact information, as set out in section 2 of the Site Request;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Site&quot;</strong> means a premises operated by Organization and located in British\r\n              Columbia that:\r\n            </p>\r\n            <ol type=\"i\">\r\n              <li>\r\n                is the subject of a Site Request submitted to the Province, and\r\n              </li>\r\n              <li>\r\n                has been approved for Site Access by the Province in writing\r\n              </li>\r\n            </ol>\r\n\r\n            <p class=\"underline\">\r\n              For greater certainty, &quot;Site&quot; does not include a location from which remote access to PharmaNet\r\n              takes place;\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site or remotely as\r\n            permitted\r\n            by the Province;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\r\n            PharmaNet access\r\n            request form submitted to the Province by the Organization, requesting PharmaNet access at the Site, as such\r\n            information is updated by the Organization from time to time in accordance with section 2.2;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\r\n            services\r\n            provided to Organization by an Approved SSO for the purpose of Site Access;\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\r\n          British\r\n          Columbia of that name, as amended or replaced from time to time, and includes any enactments made under the\r\n          authority\r\n          of that statute or regulation.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The following are the Schedules attached to and incorporated into this Agreement:\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            Schedule A – Specific Privacy and Security Measures\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The main body of this Agreement, the Schedules, and any documents incorporated by reference into this\r\n          Agreement are to\r\n          be interpreted so that all of the provisions are given as full effect as possible. In the event of a conflict,\r\n          unless\r\n          expressly stated to the contrary the main body of the Agreement will prevail over the Schedules, which will\r\n          prevail\r\n          over any document incorporated by reference.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"2\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization represents and warrants to the Province, as of the date of this\r\n          Agreement and throughout its term, that:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the information contained in the Site Request for each Site is true and correct;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              if Organization is not an individual:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\r\n              </li>\r\n              <li>\r\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery\r\n                of this Agreement by, or on behalf of, Organization; and\r\n              </li>\r\n              <li>\r\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\r\n                legally binding upon and enforceable against Organization in accordance with its terms.\r\n              </li>\r\n            </ol>\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must immediately notify the Province of any change to the information contained in a Site\r\n          Request,\r\n          including any change to a Site’s status, location, normal operating hours, Approved SSO, or the name and\r\n          contact\r\n          information of the Signing Authority or any of the other specific roles set out in the Site Request. Such\r\n          notices\r\n          must be submitted to the Province in the form and manner directed by the Province in its published\r\n          instructions\r\n          regarding the submission of updated Site Request information, as such instructions may be updated from time to\r\n          time by the Province.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"3\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must comply with the Act and all applicable law.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must submit a Site Request to the Province for each physical location where it intends to provide\r\n          Site\r\n          Access, and must only provide Site Access from Sites approved in writing by the Province. For greater\r\n          certainty,\r\n          a\r\n          Site Request is not required for each physical location from which remote access, as permitted under section\r\n          3.6,\r\n          may occur, but Organization must provide, with the Site Request, a list of the locations from which remote\r\n          access\r\n          may occur, and ensure this list remains current for the term of this agreement.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only provide Site Access using SSO-Provided Technology. For the purposes of remote access,\r\n          Organization must ensure that technology used meets the requirements of Schedule A.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network\r\n          or\r\n          security technology that the Province certifies or makes available to Organization for the purpose of Site\r\n          Access.\r\n          The use of any such network or technology by Organization may be subject to terms and conditions of use,\r\n          including\r\n          acceptable use policies, established by the Province and communicated to Organization from time to time in\r\n          writing.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only make Site Access available to the following individuals:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            Authorized Users when they are physically located at a Site, and, in the case of an On-Behalf-of-User\r\n            accessing\r\n            personal information of a patient on behalf of a Regulated User, only if the Regulated User will be\r\n            delivering\r\n            care to that patient at the same Site at which the access to personal information occurs;\r\n          </li>\r\n          <li>\r\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\r\n            <em>Information Management Regulation</em>.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Despite section 3.5(a), Organization may make Site Access available to Regulated Users who are physically\r\n          located in\r\n          British Columbia and remotely connected to a Site using a VPN or other remote access technology specifically\r\n          approved\r\n          by the Province in writing for the Site.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must ensure that Authorized Users with Site Access:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            only access PharmaNet to the extent necessary to provide health services to, or facilitate the care of, the\r\n            individual whose personal information is being accessed;\r\n          </li>\r\n          <li>\r\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\r\n            available\r\n            in relation to PharmaNet;\r\n          </li>\r\n          <li>\r\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\r\n            multiple use of any such login identifications and credentials;\r\n          </li>\r\n          <li>\r\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use; and\r\n          </li>\r\n          <li>\r\n            in the case of remote access, comply with the policies of the Province relating to remote access to\r\n            PharmaNet.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\r\n          Organization\r\n          will immediately take any local measures necessary to remove the Authorized User’s Site Access. Organization\r\n          will\r\n          only restore Site Access to a previously suspended or revoked Authorized User upon the Province’s specific\r\n          written\r\n          direction.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          For the purposes of this section:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\r\n            Regulated User by whom,\r\n            or on whose behalf, that data was obtained from PharmaNet; and\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\r\n          </li>\r\n        </ol>\r\n\r\n        <div>\r\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\r\n          Responsible\r\n          User to whom it is disclosed.\r\n        </div>\r\n\r\n        <div>\r\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\r\n          Responsible\r\n          User has authorized such Use and it is otherwise permitted under the Act, applicable law, and the limits and\r\n          conditions imposed by the Province on the Responsible User.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\r\n          unauthorized access,\r\n          collection, use, modification, retention, disclosure or disposal, including by:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\r\n            in\r\n            accordance with sections 3.1 to 3.9 above, and\r\n          </li>\r\n          <li>\r\n            complying with the requirements of Schedule A.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"4\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\r\n          anticipates\r\n          that it will be unable to comply, with the terms of this Agreement, or if Organization has knowledge of any\r\n          circumstances,\r\n          incidents or events which have or may jeopardize the security, confidentiality or integrity of PharmaNet,\r\n          including any\r\n          attempt by any person to gain unauthorized access to PharmaNet or the networks or equipment used to connect to\r\n          PharmaNet\r\n          or convey PharmaNet Data.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable\r\n          steps\r\n          to prevent\r\n          recurrences of any such breaches.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must cooperate with any audits or investigations conducted by the Province (including any\r\n          independent auditor\r\n          appointed by the Province) regarding compliance with this Agreement, including by providing access upon\r\n          request\r\n          to a Site\r\n          and any associated facilities, networks, equipment, systems, books, records and personnel for the purposes of\r\n          such audit\r\n          or investigation.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"5\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for the\r\n          Site, if:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\r\n            hardware, software,\r\n            or service in connection with PharmaNet, or\r\n          </li>\r\n          <li>\r\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or any\r\n            component\r\n            thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to PharmaNet,\r\n          </li>\r\n        </ol>\r\n\r\n        <div>\r\n          and the Organization is unable or unwilling to remedy the problem within a timeframe acceptable to the\r\n          Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\r\n          Access at a\r\n          Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice to the\r\n          Signing\r\n          Authority\r\n          for the Site, terminate all further Site Access at the Site.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\r\n          accordance with\r\n          this Article 5, of Site Access at the Site.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"6\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The term of this Agreement begins on the date first noted above and continues until it is terminated\r\n          in accordance with this Article 6.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization may terminate this Agreement at any time on notice to the Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\r\n          comply with any\r\n          provision of this Agreement.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\r\n          longer operates\r\n          any Sites where Site Access is permitted.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must prevent any further Site Access immediately upon termination of this Agreement.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"7\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The PharmaNet access and PharmaNet Data provided under this Agreement are provided &quot;as is&quot; without\r\n          warranty of any kind,\r\n          whether express or implied. All implied warranties, including, without limitation, implied warranties of\r\n          merchantability,\r\n          fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed. The Province does not\r\n          warrant\r\n          the accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that\r\n          access\r\n          to or\r\n          the operation of PharmaNet will function without error, failure or interruption.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\r\n          special,\r\n          incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data, including\r\n          without\r\n          limitation any lost profits, business interruption, or loss of programs or information, even if the Province\r\n          has\r\n          been specifically advised of the possibility of such damages.\r\n        </div>\r\n      </li>\r\n\r\n      <li>\r\n        <div>\r\n          Organization must indemnify and save harmless the Province, and the Province’s employees and agents (each an\r\n          <strong>\"Indemnified Person\"</strong>) from any losses, claims, damages, actions, causes of action, costs and\r\n          expenses that an Indemnified Person may sustain, incur, suffer or be put to at any time, either before or\r\n          after\r\n          this Agreement ends, which are based upon, arise out of or occur directly or indirectly by reason of any act\r\n          or omission by Organization, or by any Authorized User at the Site, in connection with this Agreement.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 8 – GENERAL</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"8\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\r\n          of delivery, any notice to be given to the Province must be in writing and emailed or mailed to:\r\n        </div>\r\n\r\n        <address class=\"address\">\r\n          Director, Information and PharmaNet Innovation<br>\r\n          Ministry of Health<br>\r\n          PO Box 9652, STN PROV GOVT<br>\r\n          Victoria, BC V8W 9P4<br>\r\n\r\n          <br>\r\n\r\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\r\n        </address>\r\n\r\n        <div>\r\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\r\n          faxed\r\n          or text messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\r\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a\r\n          URL link or to log in to the Province’s &quot;PRIME&quot; system to receive the content of any such notice.\r\n        </div>\r\n\r\n        <div>\r\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\r\n          the\r\n          time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\r\n          Saturdays,\r\n          Sundays and statutory holidays) after the date the notice was sent.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\r\n          any\r\n          provision of this Agreement by Organization is not a waiver of its right subsequently to insist on performance\r\n          of\r\n          that or any other provision of this Agreement. A waiver of any provision or breach of this Agreement is\r\n          effective\r\n          only if it is writing and signed by, or on behalf of, the waiving party.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\r\n          in writing and signed\r\n          by, or on behalf of, the parties.\r\n        </div>\r\n\r\n        <div>\r\n          Notwithstanding the foregoing, the Province may amend this Agreement, including the Schedules and this\r\n          section,\r\n          at any time in its sole discretion, by written notice to Organization, in which case the amendment will become\r\n          effective upon the later of: (i) the date notice of the amendment is delivered to Organization; and (ii) the\r\n          effective date of the amendment specified by the Province. The Province will make reasonable efforts to\r\n          provide\r\n          at least thirty (30) days advance notice of any such amendment, subject to any determination by the Province\r\n          that a shorter notice period is necessary due to changes in the Act, applicable law or applicable policies of\r\n          the Province, or is necessary to maintain privacy and security in relation to PharmaNet or PharmaNet Data.\r\n        </div>\r\n\r\n        <div>\r\n          If Organization does not agree with any amendment for which notice has been provided by the Province in\r\n          accordance with this section, Organization must promptly (and in any event prior to the effective date)\r\n          cease Site Access at all Sites and take the steps necessary to terminate this Agreement in accordance\r\n          with Article 6.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\r\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n{{signature_block}}\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\r\n</p>\r\n\r\n<p>\r\n  Organization must, in relation to each Site and in relation to Remote Access:\r\n</p>\r\n\r\n<ol type=\"a\">\r\n  <li>\r\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other\r\n    than Authorized Users;\r\n  </li>\r\n  <li>\r\n    <p>\r\n      implement all privacy and security measures specified in the following documents published by the Province, as\r\n      amended from time to time:\r\n    </p>\r\n\r\n    <ol type=\"i\">\r\n      <li>\r\n        <p>\r\n          the PharmaNet Professional and Software Conformance Standards\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Office of the Chief Information Officer: &quot;Submission for Technical Security Standard and High Level\r\n          Architecture for Wireless Local Area Network Connectivity&quot;\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Policy for Secure Remote Access to PharmaNet\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\r\n        </a>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\r\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\r\n    Technology\r\n    and Associated Technology, and should be capable of understanding and adhering to the standards set forth in this\r\n    Agreement and Schedule. Note that any such qualified technical support person must not be permitted by Organization\r\n    to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\r\n  </li>\r\n  <li>\r\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\r\n    in relation to the Site;\r\n  </li>\r\n  <li>\r\n    establish breach reporting and response processes in relation to the Site;\r\n  </li>\r\n  <li>\r\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\r\n  </li>\r\n  <li>\r\n    regularly review the administrative, physical and technological safeguards at the Site;\r\n  </li>\r\n  <li>\r\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\r\n    monitoring\r\n    and reporting mechanisms available to Authorized Users for this purpose.\r\n  </li>\r\n</ol>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 30,
                            AgreementType = 5,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2023, 6, 19, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION AGREEMENT FOR PHARMANET USE</h1>\r\n\r\n<p>\r\n  <strong>BETWEEN:</strong>\r\n</p>\r\n\r\n<p>\r\n  HIS MAJESTY THE KING IN RIGHT OF THE PROVINCE OF BRITISH COLUMBIA, as represented by the Minister of Health\r\n  (the &quot;Province&quot;).\r\n</p>\r\n\r\n<p>\r\n  <strong>AND:</strong>\r\n</p>\r\n\r\n<p>\r\n  {{organization_name}} (&quot;Organization&quot;)\r\n</p>\r\n\r\n<p>\r\n  <strong>WHEREAS:</strong>\r\n</p>\r\n\r\n<ol type=\"A\">\r\n  <li>\r\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links\r\n    pharmacies to a central data system. Every prescription dispensed in community pharmacies in British\r\n    Columbia is entered into PharmaNet.\r\n  </li>\r\n  <li>\r\n    PharmaNet contains highly sensitive confidential information, including personal information, and it is\r\n    in the public interest to ensure that appropriate measures are in place to protect the confidentiality\r\n    and integrity of such information. All access to and use of PharmaNet and PharmaNet Data is subject to\r\n    the Act and other applicable law.\r\n  </li>\r\n  <li>\r\n    The Province permits Authorized Users to access PharmaNet to provide health services to, or to facilitate\r\n    the care of, the individual whose personal information is being accessed.\r\n  </li>\r\n  <li>\r\n    Organization is a service provider to HealthLink BC, the Province’s self-care program providing health\r\n    information and advice to British Columbia through integrated print, web, and telephony channels to help\r\n    the public make better decisions about their health, and provides Services to the Province in accordance\r\n    with the Service Contract,\r\n  </li>\r\n  <li>\r\n    Pharmacists at Organization require access to PharmaNet so Organization can provide the Services in\r\n    accordance with the Service Contract.\r\n  </li>\r\n  <li>\r\n    This Agreement sets out the terms by which Organization may permit Authorized Users to access PharmaNet\r\n    at the Site(s) operated by Organization.\r\n  </li>\r\n</ol>\r\n\r\n<p>\r\n  <strong>NOW THEREFORE</strong> in consideration of the promises and the covenants, agreements, representations\r\n  and warranties set out in this Agreement (the receipt and sufficiency of which is hereby acknowledged by each\r\n  party), the parties agree as follows:\r\n</p>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"1\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          In this Agreement, unless the context otherwise requires, the following definitions will apply:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\r\n            identified in section 1 of the Site Request that provides Organization with the SSO-Provided Technology\r\n            used at the Site;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, any information technology\r\n            hardware, software or services used at the Site, other than the SSO-Provided Technology, that is in any way\r\n            used in connection with Site Access or any PharmaNet Data;\r\n          </li>\r\n          <li>\r\n            <P>\r\n              <strong>&quot;Authorized User&quot;</strong> means an individual who is granted access to PharmaNet by the\r\n              Province and who is:\r\n            </P>\r\n            <ol type=\"i\">\r\n              <li>\r\n                an employee or independent contractor of Organization, or\r\n              </li>\r\n              <li>\r\n                if Organization is an individual, the Organization;\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Information Management Regulation&quot;</strong> means the\r\n            <em>Information Management Regulation</em>, B.C. Reg. 74/2015;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the\r\n            <em>Information Management Regulation</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any records or information contained in PharmaNet\r\n            and any records or information in the custody, control or possession of Organization or any Authorized User\r\n            as the result of any Site Access;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Regulated User&quot;</strong> means an Authorized User described in subsections 4 (2) to (4)\r\n            of the <em>Information Management Regulation</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Service Contract&quot;</strong> means the contract for services between the Province and\r\n            Organization, contract file number 2021-075, dated November 1, 2020, as amended from time to time by the\r\n            parties in accordance with its terms;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified by Organization as the\r\n            &quot;Signing Authority&quot; for a Site, with the associated contact information, as set out in section 2\r\n            of the Site Request;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Site&quot;</strong> means a licensed community pharmacy premises operated by Organization\r\n              and located in British Columbia that:\r\n            </p>\r\n            <ol type=\"i\">\r\n              <li>\r\n                is the subject of a Site Request submitted to the Province, and\r\n              </li>\r\n              <li>\r\n                has been approved for Site Access by the Province in writing\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Access&quot;</strong> means any access to or use of PharmaNet at a Site as permitted by\r\n            the Province;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Request&quot;</strong> means, in relation to a Site, the information contained in the\r\n            PharmaNet access request form submitted to the Province by the Organization, requesting PharmaNet access at\r\n            the Site, as such information is updated by the Organization from time to time in accordance with\r\n            section 2.2;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\r\n            services provided to Organization by an Approved SSO for the purpose of Site Access;\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\r\n          British Columbia of that name, as amended or replaced from time to time, and includes any enactments made\r\n          under the authority of that statute or regulation.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n\r\n          The following are the Schedules attached to and incorporated into this Agreement:\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            Schedule A – Specific Privacy and Security Measures\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li class=\"break-before\">\r\n        <div>\r\n          The main body of this Agreement, the Schedules, and any documents incorporated by reference into this\r\n          Agreement\r\n          are to be interpreted so that all of the provisions are given as full effect as possible. In the event of a\r\n          conflict, unless expressly stated to the contrary, the main body of the Agreement will prevail over the\r\n          Schedules, which will prevail over any document incorporated by reference.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          For greater certainty, nothing in this Agreement is intended to modify or otherwise limit the applicability of\r\n          the privacy, security or confidentiality obligations agreed to by the Organization in the Service Contract.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"2\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization represents and warrants to the Province, as of the date of this Agreement and throughout its\r\n          term, that:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the information contained in the Site Request for each Site is true and correct;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              if Organization is not an individual:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\r\n              </li>\r\n              <li>\r\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery of\r\n                this Agreement by, or on behalf of, Organization; and\r\n              </li>\r\n              <li>\r\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\r\n                legally binding upon and enforceable against Organization in accordance with its terms.\r\n              </li>\r\n            </ol>\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must notify the Province at least seven (7) days in advance of any change to the information\r\n          contained in a Site Request, including any change to a Site’s status, location, normal operating hours,\r\n          Approved SSO, or the name and contact information of the Signing Authority or any of the other specific\r\n          roles set out in the Site Request. Such notices must be submitted to the Province in the form and manner\r\n          directed by the Province in its published instructions regarding the submission of updated Site Request\r\n          information, as such instructions may be updated from time to time by the Province.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"3\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must comply with the Act and all applicable law.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must submit a Site Request to the Province for each physical location where it intends to provide\r\n          Site Access, and must only provide Site Access from Sites approved in writing by the Province and only as\r\n          authorized by the Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only provide Site Access using SSO-Provided Technology.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Unless otherwise authorized by the Province in writing, Organization must at all times use the secure network\r\n          or security technology that the Province certifies or makes available to Organization for the purpose of Site\r\n          Access. The use of any such network or technology by Organization may be subject to terms and conditions of\r\n          use, including acceptable use policies, established by the Province and communicated to Organization from time\r\n          to time in writing (including through this Agreement), and Organization must comply with all such terms and\r\n          conditions of use.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only make Site Access available to the following individuals:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            Authorized Users when they are physically located at a Site;\r\n          </li>\r\n          <li>\r\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 6 of the\r\n            <em>Information Management Regulation</em>.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must ensure that Authorized Users with Site Access:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            only access PharmaNet to the extent necessary to provide Services in accordance with the Service Contract;\r\n          </li>\r\n          <li>\r\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\r\n            available in relation to PharmaNet;\r\n          </li>\r\n          <li>\r\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\r\n            multiple use of any such login identifications and credentials;\r\n          </li>\r\n          <li>\r\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use;\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          If notified by the Province that an Authorized User’s access to PharmaNet has been suspended or revoked,\r\n          Organization will immediately take any local measures necessary to remove the Authorized User’s Site Access.\r\n          Organization will only restore Site Access to a previously suspended or revoked Authorized User upon the\r\n          Province’s specific written direction.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          For the purposes of this section:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Responsible Authorized User&quot;</strong> means, in relation to any PharmaNet Data, the\r\n            Regulated User by whom that data was obtained from PharmaNet; and\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Use&quot;</strong> includes to collect, access, retain, use, de-identify, and disclose.\r\n          </li>\r\n        </ol>\r\n\r\n        <div>\r\n          The PharmaNet Data disclosed under this Agreement is disclosed by the Province solely for the Use of the\r\n          Responsible Authorized User to whom it is disclosed.\r\n        </div>\r\n\r\n        <div>\r\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, unless the\r\n          Responsible Authorized User has authorized such Use and it is otherwise permitted under the Act, applicable\r\n          law, and the limits and conditions imposed by the Province on the Responsible Authorized User.\r\n        </div>\r\n\r\n        <div>\r\n          Organization explicitly acknowledges that sections 24 and 25 of the Act apply to all PharmaNet Data.\r\n        </div>\r\n\r\n        <div>\r\n          This Agreement documents limits and conditions, set by the Minister in writing, that the Act requires\r\n          Organization and Authorized Users to comply with.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must make all reasonable arrangements to protect PharmaNet Data against such risks as\r\n          unauthorized access, collection, use, modification, retention, disclosure or disposal, including by:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            taking all reasonable physical, technical and operational measures necessary to ensure Site Access operates\r\n            in accordance with sections 3.1 to 3.9 above, and\r\n          </li>\r\n          <li>\r\n            complying with the requirements of Schedule A.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must ensure that no Authorized User submits Claims on PharmaNet other than from a Site in respect\r\n          of which\r\n          a person is enrolled as a Provider.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 4 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"4\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\r\n          anticipates that it will be unable to comply, with the terms of this Agreement, or if Organization has\r\n          knowledge\r\n          of any circumstances, incidents or events which have or may jeopardize the security, confidentiality or\r\n          integrity of PharmaNet, including any attempt by any person to gain unauthorized access to PharmaNet or the\r\n          networks or equipment used to connect to PharmaNet or convey PharmaNet Data.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable\r\n          steps\r\n          to prevent recurrences of any such breaches.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must cooperate with any audits or investigations conducted by the Province (including any\r\n          independent auditor appointed by the Province) regarding compliance with this Agreement, including by\r\n          providing\r\n          access upon request to a Site and any associated facilities, networks, equipment, systems, books, records and\r\n          personnel for the purposes of such audit or investigation.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 5 – SITE TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"5\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The Province may terminate all Site Access at a Site immediately, upon notice to the Signing Authority for\r\n          the Site, if:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\r\n            hardware, software, or service in connection with PharmaNet, or\r\n          </li>\r\n          <li>\r\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site, or\r\n            any component thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk to\r\n            PharmaNet and Organization is unable or unwilling to remedy the problem within a time frame acceptable to\r\n            the Province.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          As a security precaution, the Province may suspend Site Access at a Site after a period of inactivity. If Site\r\n          Access at a Site remains inactive for a period of 90 days or more, the Province may, immediately upon notice\r\n          to\r\n          the Signing Authority for the Site, terminate all further Site Access at the Site.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must prevent all further Site Access at a Site immediately upon the Province’s termination, in\r\n          accordance with this Article 5 of Site Access at the Site.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 6 – TERM AND TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"6\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The term of this Agreement begins on the date first noted above and continues until the earliest of:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the expiration or earlier termination of the term of the Service Contract; or\r\n          </li>\r\n          <li>\r\n            the date this Agreement is terminated in accordance with this Article 6.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization may terminate this Agreement at any time on notice to the Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement immediately upon notice to Organization if Organization fails to\r\n          comply with any provision of this Agreement.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement immediately upon notice to Organization in the event Organization no\r\n          longer operates any Sites where Site Access is permitted.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement for any reason upon two (2) months advance notice to Organization.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must prevent any further Site Access immediately upon expiration or termination of the term of\r\n          this Agreement.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 7 – DISCLAIMER AND INDEMNITY</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"7\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The PharmaNet access and PharmaNet Data provided under this Agreement are provided \"as is\" without warranty of\r\n          any kind, whether express or implied. All implied warranties, including, without limitation, implied\r\n          warranties\r\n          of merchantability, fitness for a particular purpose, and non-infringement, are hereby expressly disclaimed.\r\n          The Province does not warrant the accuracy, completeness or reliability of the PharmaNet Data or the\r\n          availability of PharmaNet, or that access to or the operation of PharmaNet will function without error,\r\n          failure or interruption.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\r\n          special, incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data,\r\n          including without limitation any lost profits, business interruption, or loss of programs or information, even\r\n          if the Province has been specifically advised of the possibility of such damages.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 8 – GENERAL</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"8\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\r\n          of delivery, any notice to be given to the Province must be in writing and mailed or emailed to:\r\n        </div>\r\n\r\n        <address class=\"address\">\r\n          Director, Information and PharmaNet Innovation<br>\r\n          Ministry of Health<br>\r\n          PO Box 9652, STN PROV GOVT<br>\r\n          Victoria, BC V8W 9P4<br>\r\n\r\n          <br>\r\n\r\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\r\n        </address>\r\n\r\n        <div>\r\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,\r\n          faxed or text-messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing\r\n          Authorities (in the case of notice to the Organization). A Signing Authority may be required to click a URL\r\n          link or to log in to the Province’s \"PRIME\" system to receive the content of any such notice.\r\n        </div>\r\n\r\n        <div>\r\n          Any written notice from a party, if sent electronically, will be deemed to have been received 24 hours after\r\n          the time the notice was sent, or, if sent by mail, will be deemed to have been received 3 days (excluding\r\n          Saturdays, Sundays and statutory holidays) after the date the notice was sent.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance of\r\n          any provision of this Agreement by Organization is not a waiver of its right subsequently to insist on\r\n          performance of that or any other provision of this Agreement. A waiver of any provision or breach of this\r\n          Agreement is effective only if it is writing and signed by, or on behalf of, the waiving party.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective unless it is\r\n          in writing and signed by, or on behalf of, the parties.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be construed\r\n          and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable therein.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Survival.</strong> Sections 3.1, 3.8, 3.9, 4, 7 and any other provision of this\r\n          Agreement that expressly or by its nature continues after termination, shall survive termination of this\r\n          Agreement.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n{{signature_block}}\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\r\n</p>\r\n\r\n<p>\r\n  Organization must, in relation to each Site\r\n</p>\r\n\r\n<ol type=\"a\">\r\n  <li>\r\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other than\r\n    Authorized Users;\r\n  </li>\r\n  <li>\r\n    <p>\r\n      implement all privacy and security measures specified in the following documents published by the Province, as\r\n      amended from time to time:\r\n    </p>\r\n\r\n    <ol type=\"i\">\r\n      <li>\r\n        <p>\r\n          the PharmaNet Professional and Software Conformance Standards\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          Office of the Chief Information Officer: \"Submission for Technical Security Standard and High Level\r\n          Architecture for Wireless Local Area Network Connectivity\"\r\n        </p>\r\n\r\n        <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/system-access/requirements-for-wireless-access-to-pharmanet\r\n        </a>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\r\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\r\n    Technology and Associated Technology, and should be capable of understanding and adhering to the standards set\r\n    forth in this Agreement and Schedule. Note that any such qualified technical support person must not be permitted\r\n    by Organization to access or use PharmaNet in any manner, unless otherwise permitted under this Agreement;\r\n  </li>\r\n  <li>\r\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations\r\n    in relation to the Site;\r\n  </li>\r\n  <li>\r\n    establish breach reporting and response processes in relation to the Site;\r\n  </li>\r\n  <li>\r\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\r\n  </li>\r\n  <li>\r\n    regularly review the administrative, physical and technological safeguards at the Site;\r\n  </li>\r\n  <li>\r\n    establish and maintain a program for monitoring PharmaNet use at the Site, including by making appropriate\r\n    monitoring and reporting mechanisms available to Authorized Users for this purpose.\r\n  </li>\r\n</ol>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 31,
                            AgreementType = 5,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2023, 7, 29, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>ORGANIZATION PHARMANET ACCESS AGREEMENT</h1>\r\n\r\n<p>\r\n  <strong>\r\n    This Organization PharmaNet Access Agreement  (the &quot;Agreement&quot;) is executed as of the date first written above,\r\n    by {{organization_name}} (&quot;Organization&quot;) for the benefit of HIS MAJESTY THE KING IN RIGHT OF THE PROVINCE OF\r\n    BRITISH COLUMBIA, as represented by the Minister of Health (the &quot;Province&quot;).\r\n  </strong>\r\n</p>\r\n\r\n<p>\r\n  <strong>WHEREAS:</strong>\r\n</p>\r\n\r\n<ol type=\"A\">\r\n  <li>\r\n    The Province owns and is responsible for the operation of PharmaNet, the province-wide network that\r\n    links health care providers to a central data system. Every prescription dispensed in community pharmacies\r\n    in British Columbia is entered into PharmaNet.\r\n  </li>\r\n  <li>\r\n    PharmaNet contains highly sensitive confidential information, including personal information,\r\n    and it is in the public interest to ensure that appropriate measures are in place to protect\r\n    the confidentiality and integrity of such information. All access to and use of PharmaNet and\r\n    PharmaNet Data is subject to the Act and other applicable law.\r\n  </li>\r\n  <li>\r\n    The Province permits authorized users to access PharmaNet to provide health services to the\r\n    individual whose personal information is being accessed.\r\n  </li>\r\n  <li>\r\n    This Agreement sets out the terms by which Organization may permit its Authorized Staff to\r\n    access PharmaNet in connection with the Site(s) operated by Organization.\r\n  </li>\r\n</ol>\r\n\r\n<p>\r\n  <strong>NOW THEREFORE</strong> Organization makes this Agreement knowing that the Province will\r\n  rely on it in permitting access to and use of PharmaNet from the Site(s) operated by Organization.\r\n  Organization conclusively acknowledges that reliance by the Province on this Agreement is in every\r\n  respect justifiable and that it received fair and valuable consideration for this Agreement, the\r\n  receipt and adequacy of which is hereby acknowledged. Organization hereby agrees as follows:\r\n</p>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 1 – INTERPRETATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"1\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          In this Agreement, terms that are used but not defined will have the same meaning as in the\r\n          <em>Information Management Regulation</em>. The following capitalized terms will have the meaning given below:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved&quot;</strong> means approved in writing by an official in the Province’s\r\n            <strong>Pharmaceutical, Laboratory and Blood Services Division</strong>, and\r\n            <strong>&quot;Approval&quot;</strong> will have the same meaning;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved SSO&quot;</strong> means, in relation to a Site, the software support organization\r\n            identified\r\n            in the Site Registration as providing Organization with the SSO-Provided Technology used at the Site;\r\n          </li>\r\n\r\n          <li>\r\n            <strong>&quot;Associated Technology&quot;</strong> means, in relation to a Site, the information technology\r\n            hardware,\r\n            software or services used at the Site, other than the SSO-Provided Technology, in connection with PharmaNet\r\n            Access or\r\n            to store or transmit PharmaNet Data;\r\n          </li>\r\n          <li>\r\n            <P>\r\n              <strong>&quot;Authorized Staff&quot;</strong> means any individual granted access to PharmaNet by the\r\n              Province who:\r\n            </P>\r\n            <ol type=\"i\">\r\n              <li>\r\n                is an employee or independent contractor of Organization,\r\n              </li>\r\n              <li>\r\n                if Organization operates a hospital as defined in section 1 of the <em>Hospital Act</em>, is a member of\r\n                the medical staff of the hospital, or\r\n              </li>\r\n              <li>\r\n                if Organization is an individual, is the Organization;\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Conformance Standards&quot;</strong> means the PharmaNet Professional and Software Conformance\r\n            Standards\r\n            (<a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\">\r\n            https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards</a>)\r\n            as published by the Province from time to time;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Control&quot;</strong> means control of greater than fifty percent of the voting rights or\r\n            equity interests in Organization;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Information Management Regulation&quot;</strong> means the Information Management Regulation,\r\n            B.C. Reg. 328/2021;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;On-Behalf-Of Staff&quot;</strong> means Authorized Staff that are &quot;on-behalf-of\r\n            users&quot; under the Information Management Regulation;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet Access&quot;</strong> includes Site Access;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any record or information contained in PharmaNet and\r\n            any record or\r\n            information obtained from PharmaNet that is in the custody, control or possession of Organization or any of\r\n            its employees,\r\n            independent contractors or staff;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PRIME&quot;</strong>means the online service provided by the Province for the purposes of (i)\r\n            Authorized\r\n            Staff members being granted access to PharmaNet by the Province, and (ii) Organization’s Site Registration.\r\n            Where this\r\n            Agreement refers to submission of information &quot;through PRIME&quot;, that includes the use of any\r\n            paper-based or other alternate\r\n            mechanism provided by the Province for the submission of such information;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Registrant Staff&quot;</strong> means Authorized Staff that are &quot;registrants&quot; under\r\n            the Information Management Regulation;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Signing Authority&quot;</strong> means the individual identified as the &quot;Signing\r\n            Authority&quot; in the Site Registration for a Site;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site&quot;</strong>means a premises located in British Columbia that is operated by\r\n            Organization and Approved pursuant to section 3.1;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Access&quot;</strong>means any access to PharmaNet by an individual when the individual\r\n            is at a Site;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Site Registration&quot;</strong> means the &quot;site registration&quot; submitted by\r\n            Organization to the Province through PRIME,\r\n            which includes all information required by the Province, all as updated from time to time by Organization in\r\n            accordance with section 5.2 of this\r\n            Agreement;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;SSO-Provided Technology&quot;</strong> means any information technology hardware, software or\r\n            services provided to Organization by\r\n            an Approved SSO for the purpose of Site Access.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Unless otherwise specified, a reference to a statute or regulation by name means a statute or regulation of\r\n          British Columbia\r\n          of that name, as amended or replaced from time to time, and includes any enactments made under the authority\r\n          of that statute\r\n          or regulation.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The following is the Schedule attached to and incorporated into this Agreement:\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            Schedule A – Specific Privacy and Security Measures\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The main body of this Agreement, the Schedule, and any documents incorporated by reference into this Agreement\r\n          are to be interpreted so that all of the provisions are given as full effect as possible. In the event of a\r\n          conflict,\r\n          unless expressly stated to the contrary the main body of the Agreement will prevail over the Schedule, which\r\n          will\r\n          prevail over any document incorporated by reference.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 2 – REPRESENTATIONS AND WARRANTIES</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"2\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization represents and warrants to the Province, as of the date of this Agreement and throughout its\r\n          term, that:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            the information contained in the Site Registration for each Site is true and correct;\r\n          </li>\r\n          <li>\r\n            <p>\r\n              if Organization is not an individual:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                Organization has the power and capacity to enter into this Agreement and to comply with its terms;\r\n              </li>\r\n              <li>\r\n                all necessary corporate or other proceedings have been taken to authorize the execution and delivery of\r\n                this Agreement by, or on behalf of, Organization; and\r\n              </li>\r\n              <li>\r\n                this Agreement has been legally and properly executed by, or on behalf of, the Organization and is\r\n                legally binding upon and enforceable against Organization in accordance with its terms.\r\n              </li>\r\n            </ol>\r\n          </li>\r\n        </ol>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 3 – SITE ACCESS REQUIREMENTS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"3\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must submit a Site Registration to the Province for each physical location where it intends to\r\n          provide Site Access.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only provide Site Access if the Site Registration for the Site has been Approved by the\r\n          Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only provide Site Access using SSO-Provided Technology. Such SSO-Provided Technology must\r\n          comply\r\n          with the Conformance Standards and otherwise meet the version and currency requirements of the Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Unless otherwise Approved by the Province, Organization must at all times use the secure network or security\r\n          technology\r\n          that the Province certifies or makes available to Organization for the purpose of Site Access. The use of any\r\n          such network\r\n          or technology by Organization may be subject to terms and conditions of use, including acceptable use\r\n          policies, established\r\n          by the Province and communicated to Organization from time to time in writing.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must only allow Site Access by the following users:\r\n        </div>\r\n\r\n        <ol type=\"a\">\r\n          <li>\r\n            Authorized Staff when they are physically located at a Site, and\r\n          </li>\r\n          <li>\r\n            Representatives of an Approved SSO for technical support purposes, in accordance with section 15 of the\r\n            <em>Information Management Regulation</em>.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must ensure that On-Behalf-Of Staff users only access PharmaNet from the Site where the\r\n          Registrant\r\n          Staff user that they are accessing for directly provided health services to the person in respect of whom\r\n          PharmaNet is being accessed.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 4</strong>\r\n</p>\r\n<p class=\"text-center\">Article 4 is intentionally left blank</p>\r\n<ol type=\"1\"\r\n    start=\"4\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\"\r\n        class=\" hidden\">\r\n      <li></li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 5 – GENERAL REQUIREMENTS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"5\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must comply with the Act and all applicable law.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must immediately notify the Province:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            if a Site, or any portion thereof, is leased or transferred to another person;\r\n          </li>\r\n          <li>\r\n            if Organization ceases to operate a Site;\r\n          </li>\r\n          <li>\r\n            if Organization acquires a premises that already has PharmaNet access, whether or not Organization intends\r\n            to\r\n            provide Site Access from that location;\r\n          </li>\r\n          <li>\r\n            of any change to the information contained in a Site Registration, including any change to the Site’s\r\n            status,\r\n            location, normal operating hours, Approved SSO, or the name and contact information of the Signing Authority\r\n            or\r\n            any of the other specific roles set out in the Site Registration; and\r\n          </li>\r\n          <li>\r\n            of a change of Control of Organization.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must ensure that Authorized Staff:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            only access PharmaNet to the extent necessary to provide health services to the individual whose personal\r\n            information is being accessed;\r\n          </li>\r\n          <li>\r\n            only submit claims through PharmaNet if the Site is enrolled as a provider under the Provider Regulation,\r\n            B.C. Reg. 76/2022;\r\n          </li>\r\n          <li>\r\n            first complete any mandatory training program(s) that the Site’s Approved SSO or the Province makes\r\n            available in relation to PharmaNet;\r\n          </li>\r\n          <li>\r\n            access PharmaNet using their own separate login identifications and credentials, and do not share or have\r\n            multiple\r\n            use of any such login identifications and credentials;\r\n          </li>\r\n          <li>\r\n            secure all devices, codes and credentials that enable access to PharmaNet against unauthorized use;\r\n          </li>\r\n          <li>\r\n            are correctly identified as required by the Province on all transactions submitted to PharmaNet, including\r\n            &quot;batch jobs&quot; or similar;\r\n          </li>\r\n          <li>\r\n            only use PharmaNet in accordance with the most current PharmaCare Policy Manual.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          If notified by the Province that an Authorized Staff user’s PharmaNet Access has been suspended or revoked by\r\n          the\r\n          Province, Organization will immediately take any local measures necessary to remove that individual’s\r\n          PharmaNet Access.\r\n          Organization will only restore PharmaNet Access to a previously suspended or revoked Authorized Staff user\r\n          upon the\r\n          Province’s specific written direction.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The PharmaNet Data disclosed pursuant to this Agreement is disclosed by the Province solely for the Use of the\r\n          Registrant Staff user to whom it is disclosed (or on whose behalf it was obtained by an On-Behalf-Of Staff\r\n          user).\r\n        </div>\r\n        <div>\r\n          Organization must not Use any PharmaNet Data, or permit any third party to Use PharmaNet Data, for\r\n          Organization’s\r\n          (or the third party’s) own purposes, except as necessary for the Registrant Staff user’s provision of health\r\n          services.\r\n        </div>\r\n        <div>\r\n          For the purposes of this section, “Use” includes to collect, access, retain, use, process, link, de-identify,\r\n          modify or disclose.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must make reasonable arrangements to protect PharmaNet Data against such risks as unauthorized\r\n          access,\r\n          collection, use, modification, retention, disclosure or disposal, including by:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            taking all reasonable physical, technical and operational measures necessary at Organization’s Site(s) to\r\n            ensure\r\n            PharmaNet Access operate in accordance with the requirements of Articles 3, 4 and 5 of this Agreement, and\r\n          </li>\r\n          <li>\r\n            complying with the requirements of Schedule A <em>(Specific Privacy and Security Measures)</em>.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 6 – NON-COMPLIANCE AND INVESTIGATIONS</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"6\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Organization must promptly notify the Province, and provide particulars, if Organization does not comply, or\r\n          anticipates that it will be unable to comply, with the terms of this Agreement, or if Organization has\r\n          knowledge\r\n          of any circumstances, incidents or events which have or may jeopardize the security, confidentiality or\r\n          integrity\r\n          of PharmaNet, including any attempt by any person to gain unauthorized access to PharmaNet or the networks or\r\n          equipment used to connect to PharmaNet or convey PharmaNet Data.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must immediately investigate any suspected breaches of this Agreement and take all reasonable\r\n          steps to prevent recurrences of any such breaches.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must cooperate with any audits or investigations conducted by the Province (including any\r\n          independent\r\n          auditor appointed by the Province) regarding compliance with this Agreement, including by providing access\r\n          upon request\r\n          to a Site and any associated facilities, networks, equipment, systems, books, records and personnel for the\r\n          purposes\r\n          of such audit or investigation.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 7 – SITE TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"7\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          Unless otherwise Approved by the Province, Organization must take all measures necessary to prevent further\r\n          PharmaNet Access from a Site, or any portion thereof, that is leased or transferred to another person, or\r\n          otherwise ceases to be operated by Organization.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may change the type of PharmaNet Access it provides to a Site at any time and in its sole\r\n          discretion and without notice to any person.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate all PharmaNet Access at a Site immediately, upon notice to the Signing\r\n          Authority for the Site, if:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            the Approved SSO for the Site is no longer approved by the Province to provide information technology\r\n            hardware, software, or service in connection with PharmaNet, or\r\n          </li>\r\n          <li>\r\n            the Province determines that the SSO-Provided Technology or Associated Technology in use at the Site,\r\n            or any component thereof, is obsolete, unsupported, or otherwise poses an unacceptable security risk,\r\n          </li>\r\n        </ol>\r\n        <div>\r\n          and the Organization is unable or unwilling to remedy the problem within a timeframe acceptable to the\r\n          Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          As a security precaution, the Province may suspend PharmaNet Access at a Site after a period of inactivity. If\r\n          PharmaNet Access at a Site remains inactive for a period of 90 days or more, the Province may, immediately\r\n          upon\r\n          notice to the Signing Authority for the Site, terminate all further PharmaNet Access at the Site.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must take all measures necessary to prevent further PharmaNet Access at a Site immediately upon\r\n          the\r\n          Signing Authority’s receipt of notice from the Province under sections 7.3 or 7.4.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 8 – TERM AND TERMINATION</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"8\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The term of this Agreement begins on the date first noted above and continues until it is terminated in\r\n          accordance with this Article 8.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization may terminate this Agreement at any time on written notice to the Province.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          The Province may terminate this Agreement immediately upon notice to Organization if:\r\n        </div>\r\n        <ol type=\"a\">\r\n          <li>\r\n            the Province determines that Organization has failed to comply with any provision of this Agreement;\r\n          </li>\r\n          <li>\r\n            Organization no longer operates any Site from which PharmaNet Access is permitted by the Province; or\r\n          </li>\r\n          <li>\r\n            there is a change of Control of Organization without the Province’s Approval.\r\n          </li>\r\n        </ol>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          In addition to the Province’s right to terminate under section 8.3, the Province may terminate this Agreement\r\n          for any reason upon two (2) months advance notice to Organization.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must prevent any further PharmaNet Access immediately upon termination of this Agreement.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 9 – DISCLAIMER AND INDEMNITY</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"9\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          The PharmaNet Access and PharmaNet Data provided under this Agreement are provided “as is” without warranty\r\n          of any kind, whether express or implied. All implied warranties, including, without limitation, implied\r\n          warranties of merchantability, fitness for a particular purpose, and non-infringement, are hereby expressly\r\n          disclaimed. The Province does not warrant the accuracy, completeness or reliability of the PharmaNet Data or\r\n          the availability of PharmaNet, or that access to or the operation of PharmaNet will function without error,\r\n          failure or interruption.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Under no circumstances will the Province be liable to any person or business entity for any direct, indirect,\r\n          special, incidental, consequential, or other damages based on any use of PharmaNet or the PharmaNet Data,\r\n          including without limitation any lost profits, business interruption, or loss of programs or information,\r\n          even if the Province has been specifically advised of the possibility of such damages.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          Organization must indemnify and save harmless the Province, and the Province’s employees and agents (each\r\n          an &quot;Indemnified Person&quot;) from any losses, claims, damages, actions, causes of action, costs and\r\n          expenses that an Indemnified Person may sustain, incur, suffer or be put to at any time, either before or\r\n          after this Agreement ends, which are based upon, arise out of or occur directly or indirectly by reason of\r\n          any act or omission by Organization, or by any Authorized Staff, in connection with this Agreement.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>ARTICLE 10 – GENERAL</strong>\r\n</p>\r\n\r\n<ol type=\"1\"\r\n    start=\"10\"\r\n    class=\"decimal\">\r\n  <li>\r\n    <ol type=\"1\">\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Notice.</strong> Except where this Agreement expressly provides for another method\r\n          of delivery, any notice to be given to the Province must be in writing and mailed or emailed to:\r\n        </div>\r\n\r\n        <address class=\"address\">\r\n          Director, Information and PharmaNet Innovation<br>\r\n          Ministry of Health<br>\r\n          PO Box 9652, STN PROV GOVT<br>\r\n          Victoria, BC V8W 9P4<br>\r\n\r\n          <br>\r\n\r\n          Email: <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\r\n        </address>\r\n        <div>\r\n          Any notice to be given to a Signing Authority or the Organization will be in writing and emailed, mailed,or\r\n          text\r\n          messaged to the Signing Authority (in the case of notice to a Signing Authority) or all Signing Authorities\r\n          (in the case of notice to the Organization). A Signing Authority may be required to click a URL link or to log\r\n          in to PRIME to receive the content of any such notice.\r\n        </div>\r\n        <div>\r\n          Any written notice from a party, if sent electronically, will be deemed to have been received on the day of\r\n          transmittal unless transmitted after the normal business hours of the addressee or on a day that is not a\r\n          Business Day, in which case it will be deemed to have been received on the next following Business Day.\r\n          If sent by mail, the notice will be deemed to have been received on the third Business Day after its mailing.\r\n          For the purposes of this section, “Business Day” means a day, other than a Saturday or Sunday, on which\r\n          Provincial government offices are open for normal business in British Columbia.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Assignment.</strong> Organization must not assign any of Organization’s rights or\r\n          obligations under this Agreement without the Province’s Approval.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Waiver.</strong> The failure of the Province at any time to insist on performance\r\n          of any provision of this Agreement by Organization is not a waiver of its right subsequently to insist on\r\n          performance of that or any other provision of this Agreement. A waiver of any provision or breach of this\r\n          Agreement is effective only if it is writing and signed by, or on behalf of, the waiving party.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Modification.</strong> No modification to this Agreement is effective\r\n          unless it is in writing and signed by, or on behalf of, the parties.\r\n        </div>\r\n        <div>\r\n          Notwithstanding the foregoing, the Province may unilaterally amend this Agreement, including the\r\n          Schedule and this section, at any time in its sole discretion, by written notice to Organization,\r\n          in which case the amendment will become effective upon the later of: (i) the date notice of the\r\n          amendment is delivered to Organization; and (ii) the effective date of the amendment specified by\r\n          the Province. The Province will make reasonable efforts to provide at least thirty (30) days advance\r\n          notice of any such amendment, subject to any determination by the Province that a shorter notice period\r\n          is necessary due to changes in the Act, applicable law or applicable policies of the Province, or is\r\n          necessary to maintain privacy and security in relation to PharmaNet or PharmaNet Data.\r\n        </div>\r\n        <div>\r\n          If Organization does not agree with any amendment for which notice has been provided by the Province in\r\n          accordance with this section, Organization must promptly (and in any event prior to the effective date)\r\n          cease PharmaNet Access at all Sites and take the steps necessary to terminate this Agreement in\r\n          accordance with Article 8.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Time is of the Essence.</strong> Time is of the essence in this Agreement.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Relationship of the Parties.</strong> This Agreement does not create any agency,\r\n          partnership or joint venture between the Parties.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Entire Agreement.</strong> This Agreement constitutes the entire agreement\r\n          between the Parties and supersedes all other agreements between the Parties relating to its subject matter.\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div>\r\n          <strong class=\"underline\">Governing Law.</strong> This Agreement will be governed by and will be\r\n          construed and interpreted in accordance with the laws of British Columbia and the laws of Canada applicable\r\n          therein.\r\n        </div>\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n\r\n{{signature_block}}\r\n\r\n<p class=\"text-center break-before\">\r\n  <strong>SCHEDULE A – SPECIFIC PRIVACY AND SECURITY MEASURES</strong>\r\n</p>\r\n\r\n<p>\r\n  Organization must, in relation to each Site and in relation to PharmaNet Access:\r\n</p>\r\n\r\n<ol type=\"a\">\r\n  <li>\r\n    secure all workstations and printers at the Site to prevent any viewing of PharmaNet Data by persons other than\r\n    Authorized Staff;\r\n  </li>\r\n  <li>\r\n    <p>\r\n      implement all privacy and security measures specified in the following documents published by the Province, as\r\n      amended from time to time:\r\n    </p>\r\n\r\n    <ol type=\"i\">\r\n      <li>\r\n        <p>\r\n          the Conformance Standards\r\n        </p>\r\n\r\n        (<a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\"\r\n           target=\"_blank\"\r\n           rel=\"noopener noreferrer\">\r\n          https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\r\n        </a>)\r\n      </li>\r\n\r\n    </ol>\r\n  </li>\r\n  <li>\r\n    ensure that a qualified technical support person is engaged to provide security support for the Site. This person\r\n    should be familiar with the Site’s network configurations, hardware and software, including all SSO-Provided\r\n    Technology\r\n    and Associated Technology, and should be capable of understanding and adhering to the standards set forth in this\r\n    Agreement and Schedule. Note that any such qualified technical support person must not be permitted by Organization\r\n    to access or use PharmaNet in any manner, except as expressly permitted under this Agreement;\r\n  </li>\r\n  <li>\r\n    establish and maintain documented privacy policies that detail how Organization will meet its privacy obligations in\r\n    relation to the Site;\r\n  </li>\r\n  <li>\r\n    establish breach reporting and response processes in relation to the Site;\r\n  </li>\r\n  <li>\r\n    detail expectations for privacy protection in contracts and service agreements as applicable at the Site;\r\n  </li>\r\n  <li>\r\n    regularly review the administrative, physical and technological safeguards at the Site;\r\n  </li>\r\n  <li>\r\n    establish and maintain a program for monitoring PharmaNet Access, including by making appropriate monitoring and\r\n    reporting mechanisms available to Authorized Staff for this purpose.\r\n  </li>\r\n</ol>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 32,
                            AgreementType = 10,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2023, 8, 9, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>PHARMANET USER TERMS OF ACCESS FOR DEVICE PROVIDERS</h1>\r\n\r\n<p class=\"bold\">\r\n  By enrolling for PharmaNet access, you agree to the following terms (the &quot;Agreement&quot;). Please read them\r\n  carefully.\r\n</p>\r\n\r\n<ol>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      BACKGROUND\r\n    </p>\r\n\r\n    <p>\r\n      The Province owns and is responsible for the operation of PharmaNet, the province-wide network that links B.C.\r\n      pharmacies to a central data system. Every prescription dispensed in community pharmacies in B.C. is entered into\r\n      PharmaNet.\r\n    </p>\r\n\r\n    <p>\r\n      The purpose of providing you, and the On-Behalf-of Users whom you have authorized, with access to PharmaNet is to\r\n      enhance patient care by providing timely and relevant information to persons involved in the provision of direct\r\n      patient care.\r\n    </p>\r\n\r\n    <p class=\"bold underline\">\r\n      PharmaNet contains highly sensitive confidential information, including Personal Information and the proprietary\r\n      and\r\n      confidential information of third-party licensors to the Province, and it is in the public interest to ensure that\r\n      appropriate measures are in place to protect the confidentiality of all such information. All access to and use of\r\n      PharmaNet and PharmaNet Data is subject to the Act and Privacy Laws.\r\n    </p>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      INTERPRETATION\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Definitions.</strong> Unless otherwise provided in this Agreement, capitalized terms will have the\r\n          meanings given below:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            <strong>&quot;Act&quot;</strong> means the <em>Pharmaceutical Services Act</em>.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved Practice Site&quot;</strong> means the physical site at which you provide Direct\r\n            Patient Care and which is approved by the Province for PharmaNet access. For greater certainty,\r\n            &quot;Approved Practice Site&quot; does not include a location from which remote access to PharmaNet takes\r\n            place;\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Approved SSO&quot;</strong> means a software support organization approved by the Province\r\n            that provides you with the information technology software and/or services through which you and\r\n            On-Behalf-of Users access PharmaNet.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Claim&quot;</strong>means a claim made under the Act for payment in respect of a benefit under\r\n            the Act.\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Conformance Standards&quot;</strong> means the following documents published by the\r\n              Province, as amended from time to time:\r\n            </p>\r\n            <ol type=\"i\">\r\n              <li>\r\n                PharmaNet Professional and Software Conformance Standards\r\n                <a href=\"https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  https://www2.gov.bc.ca/gov/content/health/practitioner-professional-resources/software/conformance-standards\r\n                </a>\r\n              </li>\r\n            </ol>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Device Provider&quot;</strong> means a person enrolled under section 11 of the Act in the\r\n            class of provider known as &quot;device provider&quot;.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Direct Patient Care&quot;</strong> means, for the purposes of this Agreement, the provision of\r\n            health services to an individual to whom you provide direct patient care in the context of your Practice.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Information Management Regulation&quot;</strong> means the Information Management Regulation,\r\n            B.C. Reg. 328/2021.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;On-Behalf-of User&quot;</strong> means a member of your staff who (i) requires access to\r\n            PharmaNet to carry out duties in relation to your Practice; (ii) is authorized by you to access PharmaNet\r\n            on your behalf; and (iii) has been granted access to PharmaNet by the Province.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Personal Information&quot;</strong> means all recorded information that is about an\r\n            identifiable individual or is defined as, or deemed to be, &quot;personal information&quot; or\r\n            &quot;personal health information&quot; pursuant to any Privacy Laws.\r\n          </li>\r\n          <li class=\"break-before\">\r\n            <strong>&quot;PharmaCare Newsletter&quot;</strong> means the PharmaCare newsletter published by the Province\r\n            on the following website (or such other website as may be specified by the Province from time to time for\r\n            this purpose):\r\n\r\n            <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              www.gov.bc.ca/pharmacarenewsletter\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the Information\r\n            Management Regulation.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PharmaNet Data&quot;</strong> includes any record or information contained in PharmaNet and\r\n            any record or information in the custody, control or possession of you or an On-Behalf-of User that was\r\n            obtained through your or an On-Behalf-of User’s access to PharmaNet.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Practice&quot;</strong> means your practice of the health profession regulated under the\r\n            <em>Health Professions Act</em>, or your practice as an enrolled device provider under the Provider\r\n            Regulation, B.C. Reg. 222/2014, as identified by you through PRIME.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;PRIME&quot;</strong> means the online service provided by the Province that allows users to\r\n            apply for, and manage, their access to PharmaNet, and through which users are granted access by the\r\n            Province.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Privacy Laws&quot;</strong> means the Act, the <em>Freedom of Information and Protection of\r\n            Privacy Act</em>, the <em>Personal Information Protection Act</em>, and any other statutory or legal\r\n            obligations of privacy owed by you or the Province, whether arising under statute, by contract or at common\r\n            law.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Provider&quot;</strong> means a person enrolled under section 11 of the Act for the purpose of\r\n            receiving payment for providing benefits.\r\n          </li>\r\n          <li>\r\n            <strong>Provider Regulation</strong>means the <em>Provider Regulation</em>, B.C. Reg. 222/2014.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Province&quot;</strong> means His Majesty the King in Right of British Columbia, as\r\n            represented by the Minister of Health.\r\n          </li>\r\n          <li>\r\n            <strong>&quot;Professional College&quot;</strong> is the regulatory body governing your Practice.\r\n          </li>\r\n          <li>\r\n            <p>\r\n              <strong>&quot;Unauthorized Person&quot;</strong> means any person other than:\r\n            </p>\r\n\r\n            <ol type=\"i\">\r\n              <li>\r\n                you,\r\n              </li>\r\n              <li>\r\n                an On-Behalf-of User, or\r\n              </li>\r\n              <li>\r\n                a representative of an Approved SSO that is accessing PharmaNet for technical support purposes in\r\n                accordance with section 6 of the <em>Information Management Regulation</em>.\r\n              </li>\r\n            </ol>\r\n\r\n          </li>\r\n        </ul>\r\n\r\n      </li>\r\n      <li>\r\n        <strong>Reference to Enactments.</strong> Unless otherwise specified, a reference to a statute or regulation by\r\n        name means the statute or regulation of British Columbia of that name, as amended or replaced from time to time,\r\n        and includes any enactment made under the authority of that statute or regulation.\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Conflicting Provisions.</strong> In the event of a conflict among provisions of this Agreement:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            a provision in the body of this Agreement will prevail over any conflicting provision in any further\r\n            limits or conditions communicated to you in writing by the Province, unless the conflicting provision\r\n            expressly states otherwise; and\r\n          </li>\r\n          <li>\r\n            a provision referred to in (i) above will prevail over any conflicting provision in the Conformance\r\n            Standards.\r\n          </li>\r\n        </ul>\r\n\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n    <p class=\"bold underline\">\r\n      APPLICATION OF LEGISLATION\r\n    </p>\r\n    <p>\r\n      You will strictly comply with, and you will ensure that On-Behalf-of Users strictly comply with, the Act, the\r\n      Information Management Regulation and all Privacy Laws applicable to PharmaNet and PharmaNet Data.\r\n    </p>\r\n  </li>\r\n  <li class=\"break-before\">\r\n\r\n    <p class=\"bold underline\">\r\n      NOTICE THAT SPECIFIC PROVISIONS OF THE ACT APPLY DIRECTLY TO YOU\r\n    </p>\r\n\r\n    <p>\r\n      You acknowledge that:\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        PharmaNet Data accessed by you or an On-Behalf-of User pursuant to this Agreement is disclosed to you by the\r\n        Province under the authority of the Act;\r\n      </li>\r\n      <li>\r\n        b. specific provisions of the Act (including but not limited to sections 24, 25 and 29) and the Information\r\n        Management\r\n        Regulation apply directly to you and to On-Behalf-of Users as a result; and\r\n      </li>\r\n      <li>\r\n        this Agreement documents limits and conditions, set by the minister in writing, that the Act requires you to\r\n        comply with.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      ACCESS\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Grant of Access.</strong> . The Province will provide you with access to PharmaNet subject to your\r\n        compliance with the limits and conditions set\r\n        out in this Agreement. The Province may from time to time, at its discretion, amend or change the scope of your\r\n        access privileges to PharmaNet as privacy, security, business and clinical practice requirements change. In such\r\n        circumstances, the Province will use reasonable efforts to notify you of such changes.\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <strong>Requirements for Access.</strong> The following requirements apply to your access to PharmaNet:\r\n          PharmaNet:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            you will only access PharmaNet, and you will ensure that On-Behalf-of Users only access PharmaNet, for so\r\n            long as you are a in good standing with the Professional College and your registration permits you to\r\n            deliver Direct Patient Care requiring access to PharmaNet or, in the case of access as a Device Provider,\r\n            for so long as you are\r\n            enrolled as a Device Provider;\r\n          </li>\r\n          <li>\r\n            you will only access PharmaNet: at the Approved Practice Site, and using only the technologies and\r\n            applications\r\n            approved by the Province;\r\n          </li>\r\n          <li>\r\n            you must ensure that your On-Behalf-of-Users do not access PharmaNet on your behalf unless the access\r\n            takes place at\r\n            the Approved Practice Site and the access is required in relation to patients for whom you will be providing\r\n            Direct\r\n            Patient Care at the Approved Practice Site;\r\n          </li>\r\n          <li>\r\n            you will only access PharmaNet as necessary for your provision of Direct Patient Care, and you will ensure\r\n            that\r\n            On-Behalf-of Users only access PharmaNet as necessary to support your provision of Direct Patient Care;\r\n          </li>\r\n          <li>\r\n            you will not submit Claims on PharmaNet other than from an Approved Practice Site in respect of which a\r\n            person is\r\n            enrolled as a Provider, and you will ensure that On-Behalf-of Users submit Claims on PharmaNet only from an\r\n            Approved\r\n            Practice Site in respect of which a person is enrolled as a Provider;\r\n          </li>\r\n          <li>\r\n            you will not under any circumstances access PharmaNet, or use PharmaNet Data, for the purpose of market\r\n            research, and\r\n            you will ensure that no On-Behalf-of Users access PharmaNet, or use PharmaNet Data, for the purpose of\r\n            market research;\r\n          </li>\r\n          <li>\r\n            subject to section 6(b) of this Agreement, you will not use PharmaNet Data, and you will ensure that\r\n            On-Behalf-of\r\n            Users do not use PharmaNet Data, for any purpose other than your provision of Direct Patient Care, including\r\n            for the\r\n            purposes of quality improvement, evaluation, health care planning, surveillance, research or other secondary\r\n            uses;\r\n          </li>\r\n          <li>\r\n            you will not permit any Unauthorized Person to access PharmaNet, and you will take all reasonable measures\r\n            to ensure\r\n            that no Unauthorized Person can access PharmaNet;\r\n          </li>\r\n          <li>\r\n            you will complete any training program(s) that your Approved SSO makes available to you in relation to\r\n            PharmaNet, and\r\n            you will ensure that all On-Behalf-of Users complete such training;\r\n          </li>\r\n          <li class=\"break-before\">\r\n            you will immediately notify the Province when you or an On-Behalf-of User no longer require access to\r\n            PharmaNet,\r\n            including where the On-Behalf-of User ceases to be one of your staff or takes a leave of absence from your\r\n            staff, or\r\n            where the On-Behalf-of User’s access-related duties in relation to the Practice have changed;\r\n          </li>\r\n          <li>\r\n            you will comply with, and you will ensure that On-Behalf-of Users comply with, any additional limits or\r\n            conditions\r\n            applicable to you, as may be communicated to you by the Province in writing;\r\n          </li>\r\n          <li>\r\n            you represent and warrant that all information provided by you in connection with your application for\r\n            PharmaNet\r\n            access, including through PRIME, is true and correct.\r\n          </li>\r\n        </ul>\r\n      </li>\r\n      <li>\r\n        <strong>Responsibility for On-Behalf-of Users.</strong> You agree that you are responsible under this Agreement\r\n        for all activities undertaken by On-Behalf-of Users in relation to their access to PharmaNet and use of\r\n        PharmaNet Data.\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Privacy and Security Measures.</strong> You are responsible for taking all reasonable measures to\r\n          safeguard Personal Information, including any Personal Information in the PharmaNet Data while it is in the\r\n          custody, control or possession of yourself or an On-Behalf-of User. In particular, you will:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            take all reasonable steps to ensure the physical security of Personal Information, generally and as required\r\n            by Privacy Laws;\r\n          </li>\r\n          <li>\r\n            secure all workstations and printers in a protected area in the Approved Practice Site to prevent viewing\r\n            of PharmaNet Data by Unauthorized Persons;\r\n          </li>\r\n          <li>\r\n            ensure separate access credential (such as user name and password) for each On-Behalf-of User, and prohibit\r\n            sharing or other multiple use of your access credential, or an On-Behalf-of User’s access credential, for\r\n            access to PharmaNet;\r\n          </li>\r\n          <li>\r\n            secure any workstations used to access PharmaNet and all devices, codes or passwords that enable access to\r\n            PharmaNet by yourself or any On-Behalf-of User;\r\n          </li>\r\n          <li>\r\n            take such other privacy and security measures as the Province may reasonably require from time-to-time.\r\n          </li>\r\n        </ul>\r\n\r\n      </li>\r\n      <li>\r\n        <strong>Conformance Standards.</strong> You will comply with, and will ensure On-Behalf-of Users comply with,\r\n        the rules specified in the Conformance Standards when accessing and recording information in PharmaNet.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      DISCLOSURE, STORAGE, AND ACCESS REQUESTS\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Retention of PharmaNet Data.</strong> . You will not store or retain PharmaNet Data in any paper files\r\n        or any electronic system, unless such storage or retention is required for record keeping in accordance with the\r\n        Act, the Provider Regulation, and Professional College requirements and in connection with your provision of\r\n        Direct Patient Care and otherwise is in compliance with\r\n        the Conformance Standards. You will not modify any records retained in accordance with this section other than\r\n        as may be expressly authorized in the Conformance Standards. For clarity, you may annotate a discrete record\r\n        provided that the discrete record is not itself modified other than as expressly authorized in the Conformance\r\n        Standards.\r\n      </li>\r\n      <li>\r\n        <strong>Use of Retained Records.</strong> You may use any records retained by you in accordance with section\r\n        6(a) of this Agreement for a purpose authorized under section 24(1) of the Act, including for the purpose of\r\n        monitoring your own Practice.\r\n      </li>\r\n      <li>\r\n        <strong>Disclosure to Third Parties.</strong> . You will not, and will ensure that On-Behalf-of Users do not,\r\n        disclose PharmaNet Data to any Unauthorized Person,\r\n        unless disclosure is required for Direct Patient Care or is otherwise authorized under section 24(1) of the Act.\r\n      </li>\r\n      <li>\r\n        <strong>No Disclosure for Market Research.</strong> You will not, and will ensure that On-Behalf-of Users do\r\n        not, disclose PharmaNet Data for the purpose of market research.\r\n      </li>\r\n      <li>\r\n        <strong>Responding to Patient Access Requests.</strong> Aside from any records retained by you in accordance\r\n        with section 6(a) of this Agreement, you will not provide to patients any copies of records containing PharmaNet\r\n        Data or &quot;print outs&quot; produced directly from PharmaNet, and will refer any requests for access to such\r\n        records or &quot;print outs&quot; to the Province.\r\n      </li>\r\n      <li class=\"break-before\">\r\n        <strong>Responding to Requests to Correct a Record contained in PharmaNet.</strong> If you receive a request for\r\n        correction of any record or information contained in PharmaNet, you will refer the request to the Province.\r\n      </li>\r\n      <li>\r\n        <strong>Legal Demands for Records Contained in PharmaNet.</strong> You will immediately notify the Province if\r\n        you receive any order, demand or request compelling, or threatening to compel, disclosure of records contained\r\n        in PharmaNet. You will cooperate and consult with the Province in responding to any such demands. For greater\r\n        certainty, the foregoing requires that you notify the Province only with respect to any access requests or\r\n        demands for records contained in PharmaNet, and not records retained by you in accordance with section 6(a) of\r\n        this Agreement.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      ACCURACY\r\n    </p>\r\n\r\n    <p>\r\n      You will make reasonable efforts to ensure that any Personal Information recorded by you or an On-Behalf-of User\r\n      in PharmaNet is accurate, complete and up to date. In the event that you become aware of a material inaccuracy or\r\n      error in such information, you will take reasonable steps to investigate the inaccuracy or error, correct it if\r\n      necessary, and notify the Province of the inaccuracy or error and any steps taken.\r\n    </p>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      INVESTIGATIONS, AUDITS, AND REPORTING\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Audits and Investigations.</strong> You will cooperate with any audits or investigations conducted by\r\n        the Province regarding your, or any On-Behalf-of User’s, compliance with the Act, Privacy Laws and this\r\n        Agreement, including providing access upon request to your facilities, data management systems, books, records\r\n        and personnel for the purposes of such audit or investigation.\r\n      </li>\r\n      <li>\r\n        <strong>Reports to College or Privacy Commissioner.</strong> You acknowledge and agree that the Province may\r\n        report any material breach of this Agreement to your Professional College or to the Information and Privacy\r\n        Commissioner of British Columbia.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      NOTICE OF NON COMPLIANCE AND DUTY TO INVESTIGATE\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Duty to Investigate.</strong> You will investigate suspected breaches of the terms of this Agreement,\r\n        and will take all reasonable steps to prevent recurrences of any such breaches, including taking any steps\r\n        necessary to cooperate with the Province in ensuring the suspension or termination of an On-Behalf-of User’s\r\n        access rights.\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Non Compliance.</strong> You will promptly notify the Province, and provide particulars, if:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            you or an On-Behalf-of User do not comply, or you anticipate that you or a On-Behalf-of User will be unable\r\n            to comply with the terms of this Agreement in any respect, or\r\n          </li>\r\n          <li>\r\n            you have knowledge of any circumstances, incidents or events which have or may jeopardize the security,\r\n            confidentiality, or integrity of PharmaNet, including any unauthorized attempt, by any person, to access\r\n            PharmaNet.\r\n          </li>\r\n        </ul>\r\n\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      TERM OF AGREEMENT, SUSPENSION & TERMINATION\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Term.</strong> The term of this Agreement begins on the date you are granted access to PharmaNet by the\r\n        Province and will continue until the date this Agreement is terminated under paragraph (b), (c), (d) or (e)\r\n        below.\r\n      </li>\r\n      <li>\r\n        <strong>Termination for Any Reason.</strong> You may terminate this Agreement at any time on written notice to\r\n        the Province.\r\n      </li>\r\n      <li>\r\n        <strong>Suspension or Termination of PharmaNet access.</strong>\r\n        If the Province suspends or terminates your right, or an On-Behalf-of User’s right, to access PharmaNet under\r\n        the <em>Information Management Regulation</em>, the Province may also terminate this Agreement at any time\r\n        thereafter upon written notice to you.\r\n      </li>\r\n      <li>\r\n        <strong>Termination for Breach.</strong> Notwithstanding paragraph (c) above, the Province may terminate this\r\n        Agreement, and any or all access to PharmaNet by you or an On-Behalf-of User, immediately upon notice to you if\r\n        you or an On-Behalf-of User fail to comply with any provision of this Agreement.\r\n      </li>\r\n      <li class=\"break-before\">\r\n        <strong>Termination by operation of the Information Management Regulation.</strong> This Agreement will\r\n        terminate automatically if your access to PharmaNet ends by operation of section 18 of the\r\n        <em>Information Management Regulation</em>.\r\n      </li>\r\n      <li>\r\n        <strong>Suspension of Account for Inactivity.</strong> As a security precaution, the Province may suspend your\r\n        account or an On-Behalf-of User’s account after a period of inactivity, in accordance with the Province’s\r\n        policies. Please contact the Province immediately if your account has been suspended for inactivity but you\r\n        still require access to PharmaNet.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      DISCLAIMER OF WARRANTY, LIMITATION OF LIABILITY AND INDEMNITY\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        <strong>Information Provided As Is.</strong> You acknowledge and agree that any use of PharmaNet and PharmaNet\r\n        Data is solely at your own risk. All such access and information is provided on an &quot;as is&quot; and\r\n        &quot;as available&quot; basis without warranty or condition of any kind. The Province does not warrant the\r\n        accuracy, completeness or reliability of the PharmaNet Data or the availability of PharmaNet, or that access\r\n        to or the operation of PharmaNet will function without error, failure or interruption.\r\n      </li>\r\n      <li>\r\n        <strong>You are Responsible.</strong> You are responsible for verifying the accuracy of information disclosed to\r\n        you as a result of your access to PharmaNet or otherwise pursuant to this Agreement before relying or acting\r\n        upon such information. The clinical or other information disclosed to you or an On-Behalf-of User pursuant to\r\n        this Agreement is in no way intended to be a substitute for professional judgment.\r\n      </li>\r\n      <li>\r\n        <strong>The Province Not Liable for Loss.</strong> No action may be brought by any person against the Province\r\n        for any loss or damage of any kind caused by any reason or purpose related to reliance on PharmaNet or PharmaNet\r\n        Data.\r\n      </li>\r\n      <li>\r\n        <strong>You Must Indemnify the Province if You Cause a Loss or Claim.</strong> You agree to indemnify and save\r\n        harmless the Province, and the Province’s employees and agents (each an <strong>\"Indemnified Person\"</strong>)\r\n        from any losses, claims, damages, actions, causes of action, costs and expenses that an Indemnified Person may\r\n        sustain, incur, suffer or be put to at any time, either before or after this Agreement ends, which are based\r\n        upon, arise out of or occur directly or indirectly by reason of any act or omission by you, or by any\r\n        On-Behalf-of User, in connection with this Agreement or in connection with access to PharmaNet by you or an\r\n        On-Behalf-of User.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline\">\r\n      NOTICE\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Notice to Province.</strong> Except where this Agreement expressly provides for another method of\r\n          delivery, any notice to be given by you to the Province that is contemplated by this Agreement, to be\r\n          effective, must be in writing and emailed or mailed to:\r\n        </p>\r\n\r\n        <address>\r\n          Director, Information and PharmaNet Development<br>\r\n          Ministry of Health<br>\r\n          PO Box 9652, STN PROV GOVT<br>\r\n          Victoria, BC V8W 9P4<br>\r\n\r\n          <br>\r\n\r\n          <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\r\n        </address>\r\n\r\n      </li>\r\n      <li>\r\n        <strong>Notice to You.</strong> Any notice to you to be delivered under the terms of this Agreement will be in\r\n        writing and delivered by the Province to\r\n        you using any of the contact mechanisms identified by you in PRIME, including by mail to a specified postal\r\n        address,\r\n        email to a specified email address or text message to the specified cell phone number. You may be required to\r\n        click a\r\n        URL link or log into PRIME to receive the content of any such notice.\r\n      </li>\r\n      <li>\r\n        <strong>Deemed receipt.</strong> Any written communication from a party, if personally delivered or sent\r\n        electronically, will be deemed to have been\r\n        received 24 hours after the time the notice was sent, or, if sent by mail, will be deemed to have been received\r\n        3 days\r\n        (excluding Saturdays, Sundays and statutory holidays) after the date the notice was sent.\r\n      </li>\r\n      <li>\r\n        <strong>Substitute contact information.</strong> You may notify the Province of a substitute contact mechanism\r\n        by updating your contact information in PRIME.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p class=\"bold underline break-before\">\r\n      GENERAL\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Severability.</strong> Each provision in this Agreement constitutes a separate covenant and is\r\n          severable from any other\r\n          covenant, and if any of\r\n          them are held by a court, or other decision-maker, to be invalid, this Agreement will be interpreted as if\r\n          such\r\n          provisions were not included.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Survival.</strong> Sections 3, 4, 5(b)(vi) (vii), 5(c), 5(d), 6(a)(b)(c)(d), 8, 9, 11, and\r\n          any other provision of this Agreement that\r\n          expressly or by its nature continues after termination, shall survive termination of this Agreement.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Governing Law.</strong> This Agreement will be governed by and will be construed and interpreted in\r\n          accordance with the laws of British Columbia and the laws of Canada applicable therein.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Assignment Restricted.</strong> Your rights and obligations under this Agreement may not be assigned\r\n          without the prior written approval of the Province.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Waiver.</strong> The failure of the Province at any time to insist on performance of any provision of\r\n          this Agreement by you is not a waiver of its right subsequently to insist on performance of that or any other\r\n          provision of this Agreement.\r\n        </p>\r\n\r\n      </li>\r\n      <li>\r\n\r\n        <p>\r\n          <strong>Province may modify this Agreement.</strong> The Province may amend this Agreement, including this\r\n          section, at any time in its sole discretion:\r\n        </p>\r\n\r\n        <ul>\r\n          <li>\r\n            by written notice to you, in which case the amendment will become effective upon the later of (A) the\r\n            date notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified\r\n            by the Province, if any; or\r\n          </li>\r\n          <li>\r\n            by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will\r\n            specify the effective date of the amendment, which date will be at least 30 (thirty) days after the date\r\n            that the PharmaCare Newsletter containing the notice is first published.\r\n          </li>\r\n        </ul>\r\n\r\n        <p>\r\n          If you or an On-Behalf-of User access or use PharmaNet after the effective date of an amendment described in\r\n          (i) or (ii) above, you will be deemed to have accepted the corresponding amendment, and this Agreement will be\r\n          deemed to have been so amended as of the effective date. If you do not agree with any amendment for which\r\n          notice has been provided by the Province in accordance with (i) or (ii) above, you must promptly (and in any\r\n          event before the effective date) cease all access or use of PharmaNet by yourself and all On-Behalf-of Users,\r\n          and take the steps necessary to terminate this Agreement in accordance with section 10.\r\n        </p>\r\n\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n</ol>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 33,
                            AgreementType = 11,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2023, 8, 9, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Text = "<h1>\r\n  PHARMANET TERMS OF ACCESS FOR PHARMACY OR DEVICE PROVIDER ON-BEHALF-OF USER\r\n</h1>\r\n\r\n<p class=\"bold\">\r\n  By enrolling for PharmaNet access, you agree to the following terms (the &quot;Agreement&quot;). Please read them\r\n  carefully.\r\n</p>\r\n\r\n<p class=\"bold underline\">\r\n  On-Behalf-of User Access\r\n</p>\r\n\r\n<ol>\r\n  <li>\r\n    <p>\r\n      You represent and warrant to the Province that:\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        your employment duties in relation to a Practitioner require you to access PharmaNet (and PharmaNet Data) to\r\n        support the Practitioner’s delivery of Direct Patient Care;\r\n      </li>\r\n      <li>\r\n        you are directly supervised by a Practitioner, who has been granted access to PharmaNet by the Province; and\r\n      </li>\r\n      <li>\r\n        all information provided by you in connection with your application for PharmaNet access, including all\r\n        information submitted through PRIME, is true and correct.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"bold underline\">\r\n  Definitions\r\n</p>\r\n\r\n<ol start=\"2\">\r\n  <li>\r\n\r\n    <p>\r\n      In these terms, capitalized terms will have the following meanings:\r\n    </p>\r\n\r\n    <ul>\r\n      <li>\r\n        <strong>&quot;Approved Practice Site&quot;</strong> means the physical site at which a Practitioner provides\r\n        Direct\r\n        Patient Care and which is approved by the Province for PharmaNet access. For greater certainty, &quot;Approved\r\n        Practice Site&quot; does not include a location from which remote access to PharmaNet takes place.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;Direct Patient Care&quot;</strong> means, for the purposes of this Agreement, the provision of\r\n        health\r\n        services to an individual to whom a Practitioner provides direct patient care in the context of their Practice.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;PharmaCare Newsletter&quot;</strong> means the PharmaCare newsletter published by the Province on\r\n        the\r\n        following website (or such other website as may be specified by the Province from time to time for this\r\n        purpose):\r\n\r\n        <br><br>\r\n\r\n        <a href=\"http://www.gov.bc.ca/pharmacarenewsletter\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.gov.bc.ca/pharmacarenewsletter</a>\r\n      </li>\r\n      <li>\r\n        <strong>&quot;PharmaNet&quot;</strong> means PharmaNet as continued under section 2 of the <em>Information Management\r\n        Regulation, B.C</em>. Reg. 328/2021.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;PharmaNet Data&quot;</strong> includes any record or information contained in PharmaNet and any\r\n        record or\r\n        information in the custody, control or possession of you or a Practitioner that was obtained through access to\r\n        PharmaNet by anyone.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;Practice&quot;</strong> means a Practitioner’s practice of their health profession.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;Practitioner&quot;</strong> means a health professional regulated under the\r\n        <em>Health Professions Act</em>,\r\n        or an\r\n        enrolled device provider under the <em>Provider Regulation</em>, B.C. Reg. 222/2014,who supervises your access\r\n        to and use of PharmaNet and who has been granted access to PharmaNet by the Province.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;PRIME&quot;</strong> means the online service provided by the Province that allows users to apply\r\n        for, and\r\n        manage, their access to PharmaNet, and through which users are granted access by the Province.\r\n      </li>\r\n      <li>\r\n        <strong>&quot;Province&quot;</strong> means His Majesty the King in Right of British Columbia, as represented by\r\n        the\r\n        Minister of Health.\r\n      </li>\r\n    </ul>\r\n\r\n  </li>\r\n  <li>\r\n    Unless otherwise specified, a reference to a statute or regulation by name means the statute or regulation of\r\n    British Columbia of that name, as amended or replaced from time to time, and includes any enactment made under the\r\n    authority of that statute or regulation.\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"bold underline break-before\">\r\n  Terms of Access to PharmaNet\r\n</p>\r\n\r\n<ol start=\"4\">\r\n  <li>\r\n\r\n    <p>\r\n      You must:\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        access and use PharmaNet and PharmaNet Data only at the Approved Practice Site of a Practitioner;\r\n      </li>\r\n      <li>\r\n        access and use PharmaNet and PharmaNet Data only to support Direct Patient Care delivered by a Practitioner to\r\n        the individuals whose PharmaNet Data you are accessing, and only if the Practitioner is or will be delivering\r\n        Direct Patient Care requiring that access to those individuals at the same Approved Practice Site at which the\r\n        access occurs;\r\n      </li>\r\n      <li>\r\n        only access PharmaNet as permitted by law and directed by a Practitioner;\r\n      </li>\r\n      <li>\r\n        maintain all PharmaNet Data, whether accessed on PharmaNet or otherwise disclosed to you in any manner, in\r\n        strict confidence;\r\n      </li>\r\n      <li>\r\n        maintain the security of PharmaNet, and any applications, connections, or networks used to access PharmaNet;\r\n      </li>\r\n      <li>\r\n        complete all training required by the Approved Practice Site’s PharmaNet software vendor and the Province before\r\n        accessing PharmaNet;\r\n      </li>\r\n      <li>\r\n        notify the Province if you have any reason to suspect that PharmaNet, or any PharmaNet Data, is or has been\r\n        accessed or used inappropriately by any person.\r\n      </li>\r\n    </ol>\r\n\r\n  </li>\r\n  <li>\r\n\r\n    <p>\r\n      You must not:\r\n    </p>\r\n\r\n    <ol type=\"a\">\r\n      <li>\r\n        disclose PharmaNet Data for any purpose other than Direct Patient Care, except as permitted by law and directed\r\n        by a Practitioner;\r\n      </li>\r\n      <li>\r\n        permit any person to use any user IDs, passwords or credentials provided to you to access PharmaNet;\r\n      </li>\r\n      <li>\r\n        reveal, share or compromise any user IDs, passwords or credentials for PharmaNet;\r\n      </li>\r\n      <li>\r\n        use, or attempt to use, the user IDs, passwords or credentials of any other person to access PharmaNet;\r\n      </li>\r\n      <li>\r\n        take any action that might compromise the integrity of PharmaNet, its information, or the provincial drug plan,\r\n        such as altering information or submitting false information;\r\n      </li>\r\n      <li>\r\n        test the security related to PharmaNet;\r\n      </li>\r\n      <li>\r\n        attempt to access PharmaNet from any location other than the Approved Practice Site of a Practitioner, including\r\n        by VPN or other remote access technology;\r\n      </li>\r\n      <li>\r\n        access PharmaNet unless the access is for the purpose of supporting a Practitioner in providing Direct Patient\r\n        Care to a patient at the same Approved Practice Site at which your access occurs;\r\n      </li>\r\n      <li>\r\n        use PharmaNet to submit claims to PharmaCare or a third-party insurer unless directed to do so by a Practitioner\r\n        at an Approved Practice Site that is enrolled as a provider or device provider under the\r\n        <em>Provider Regulation</em>, B.C. Reg. 222/2014.\r\n      </li>\r\n    </ol>\r\n  </li>\r\n</ol>\r\n<ol start=\"6\">\r\n  <li>\r\n    Your access to PharmaNet and use of PharmaNet Data are governed by the Pharmaceutical Services Act and you must\r\n    comply with all your duties under that Act.\r\n  </li>\r\n  <li>\r\n    The Province may, in writing and from time to time, set further limits and conditions in respect of PharmaNet,\r\n    either for you or for the Practitioner(s), and that you must comply with any such further limits and conditions.\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"bold underline break-before\">\r\n  How to Notify the Province\r\n</p>\r\n\r\n<ol start=\"8\">\r\n  <li>\r\n\r\n    <p>\r\n      Notice to the Province may be sent in writing to:\r\n    </p>\r\n\r\n    <address>\r\n      Director, Information and PharmaNet Innovation<br>\r\n      Ministry of Health<br>\r\n      PO Box 9652, STN PROV GOVT<br>\r\n      Victoria, BC V8W 9P4<br>\r\n\r\n      <br>\r\n\r\n      <a href=\"mailto:PRIMESupport@gov.bc.ca\">PRIMESupport@gov.bc.ca</a>\r\n    </address>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"bold underline\">\r\n  Province May Modify These Terms\r\n</p>\r\n\r\n<ol start=\"9\">\r\n  <li>\r\n\r\n    <p>\r\n      The Province may amend these terms, including this section, at any time in its sole discretion:\r\n    </p>\r\n\r\n    <ol type=\"i\">\r\n      <li>\r\n        by written notice to you, in which case the amendment will become effective upon the later of (A) the date\r\n        notice of the amendment is first delivered to you, or (B) the effective date of the amendment specified by the\r\n        Province, if any; or\r\n      </li>\r\n      <li>\r\n        by publishing notice of any such amendment in the PharmaCare Newsletter, in which case the notice will specify\r\n        the effective date of the amendment, which date will be at least thirty (30) days after the date that the\r\n        PharmaCare Newsletter containing the notice is first published.\r\n      </li>\r\n    </ol>\r\n\r\n    <p>\r\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\r\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\r\n      PharmaNet.\r\n    </p>\r\n\r\n    <p>\r\n      If you do not agree with any amendment for which notice has been provided by the Province in accordance with (i)\r\n      or (ii) above, you must promptly (and in any event before the effective date) cease all access or use of\r\n      PharmaNet.\r\n    </p>\r\n  </li>\r\n</ol>\r\n\r\n<p class=\"bold underline\">\r\n  Governing Law\r\n</p>\r\n\r\n<ol start=\"10\">\r\n  <li>\r\n\r\n    <p>\r\n      These terms will be governed by and will be construed and interpreted in accordance with the laws of British\r\n      Columbia and the laws of Canada applicable therein.\r\n    </p>\r\n\r\n  </li>\r\n</ol>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Prime.Models.AssignedPrivilege", b =>
                {
                    b.Property<int>("PrivilegeId")
                        .HasColumnType("integer");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("PrivilegeId", "EnrolleeId");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("AssignedPrivilege");
                });

            modelBuilder.Entity("Prime.Models.AuthorizedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("HealthAuthorityCode")
                        .HasColumnType("integer");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityCode");

                    b.HasIndex("PartyId");

                    b.ToTable("AuthorizedUsers");
                });

            modelBuilder.Entity("Prime.Models.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BannerLocationCode")
                        .HasColumnType("integer");

                    b.Property<int>("BannerType")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Banner");
                });

            modelBuilder.Entity("Prime.Models.BusinessDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("BusinessDay");
                });

            modelBuilder.Entity("Prime.Models.BusinessEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<int>("BusinessEventTypeCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("EventDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("BusinessEventTypeCode");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PartyId");

                    b.HasIndex("SiteId");

                    b.ToTable("BusinessEvent");
                });

            modelBuilder.Entity("Prime.Models.BusinessEventType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("BusinessEventTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Status Change"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Email"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Note"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Admin Claim"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Enrollee"
                        },
                        new
                        {
                            Code = 6,
                            Name = "Site"
                        },
                        new
                        {
                            Code = 7,
                            Name = "Admin View"
                        },
                        new
                        {
                            Code = 8,
                            Name = "Organization"
                        },
                        new
                        {
                            Code = 9,
                            Name = "Pharmanet API Call"
                        },
                        new
                        {
                            Code = 10,
                            Name = "Paper Enrolment Link"
                        });
                });

            modelBuilder.Entity("Prime.Models.BusinessLicence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeferredLicenceReason")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("BusinessLicence");
                });

            modelBuilder.Entity("Prime.Models.BusinessLicenceDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BusinessLicenceId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BusinessLicenceId")
                        .IsUnique();

                    b.ToTable("BusinessLicenceDocument");
                });

            modelBuilder.Entity("Prime.Models.CareSetting", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CareSettingLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Health Authority"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Private Community Health Practice"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Community Pharmacy"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Device Provider"
                        });
                });

            modelBuilder.Entity("Prime.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CollegeCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<int>("LicenseCode")
                        .HasColumnType("integer");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PracticeCode")
                        .HasColumnType("integer");

                    b.Property<string>("PractitionerId")
                        .HasColumnType("text");

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("RenewalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CollegeCode");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("LicenseCode");

                    b.HasIndex("PracticeCode");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("Prime.Models.ClientLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Data")
                        .HasColumnType("text");

                    b.Property<int>("LogType")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("ClientLog");
                });

            modelBuilder.Entity("Prime.Models.College", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CollegeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "College of Physicians and Surgeons of BC (CPSBC)"
                        },
                        new
                        {
                            Code = 2,
                            Name = "College of Pharmacists of BC (CPBC)"
                        },
                        new
                        {
                            Code = 3,
                            Name = "BC College of Nurses and Midwives (BCCNM)"
                        },
                        new
                        {
                            Code = 4,
                            Name = "College of Chiropractors of BC"
                        },
                        new
                        {
                            Code = 5,
                            Name = "College of Dental Hygenists of BC"
                        },
                        new
                        {
                            Code = 6,
                            Name = "College of Dental Technicians of BC"
                        },
                        new
                        {
                            Code = 7,
                            Name = "College of Dental Surgeons of BC"
                        },
                        new
                        {
                            Code = 8,
                            Name = "College of Denturists of BC"
                        },
                        new
                        {
                            Code = 9,
                            Name = "College of Dietitians of BC"
                        },
                        new
                        {
                            Code = 10,
                            Name = "College of Massage Therapists of BC"
                        },
                        new
                        {
                            Code = 11,
                            Name = "College of Naturopathic Physicians of BC"
                        },
                        new
                        {
                            Code = 12,
                            Name = "College of Occupational Therapists of BC"
                        },
                        new
                        {
                            Code = 13,
                            Name = "College of Opticians of BC"
                        },
                        new
                        {
                            Code = 14,
                            Name = "College of Optometrists of BC"
                        },
                        new
                        {
                            Code = 15,
                            Name = "College of Physical Therapists of BC"
                        },
                        new
                        {
                            Code = 16,
                            Name = "College of Psychologists of BC"
                        },
                        new
                        {
                            Code = 17,
                            Name = "College of Speech and Hearing Health Professionals of BC"
                        },
                        new
                        {
                            Code = 18,
                            Name = "College of Traditional Chinese Medicine Practitioners and Acupuncturists of BC"
                        },
                        new
                        {
                            Code = 19,
                            Name = "BC College of Social Workers"
                        });
                });

            modelBuilder.Entity("Prime.Models.CollegeLicense", b =>
                {
                    b.Property<int>("CollegeCode")
                        .HasColumnType("integer");

                    b.Property<int>("LicenseCode")
                        .HasColumnType("integer");

                    b.Property<int?>("CollegeLicenseGroupingCode")
                        .HasColumnType("integer");

                    b.HasKey("CollegeCode", "LicenseCode");

                    b.HasIndex("CollegeLicenseGroupingCode");

                    b.HasIndex("LicenseCode");

                    b.ToTable("CollegeLicense");

                    b.HasData(
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 1
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 2
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 3
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 4
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 5
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 6
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 7
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 8
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 9
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 10
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 11
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 12
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 13
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 14
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 15
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 16
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 17
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 18
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 19
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 20
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 21
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 22
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 23
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 24
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 59
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 65
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 66
                        },
                        new
                        {
                            CollegeCode = 1,
                            LicenseCode = 67
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 25
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 26
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 27
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 28
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 29
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 30
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 31
                        },
                        new
                        {
                            CollegeCode = 2,
                            LicenseCode = 68
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 32,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 33,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 34,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 35,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 36,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 37,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 39,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 40,
                            CollegeLicenseGroupingCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 41,
                            CollegeLicenseGroupingCode = 3
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 42,
                            CollegeLicenseGroupingCode = 3
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 43,
                            CollegeLicenseGroupingCode = 3
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 45,
                            CollegeLicenseGroupingCode = 3
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 46,
                            CollegeLicenseGroupingCode = 3
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 47,
                            CollegeLicenseGroupingCode = 4
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 48,
                            CollegeLicenseGroupingCode = 4
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 49,
                            CollegeLicenseGroupingCode = 4
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 51,
                            CollegeLicenseGroupingCode = 4
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 52,
                            CollegeLicenseGroupingCode = 1
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 53,
                            CollegeLicenseGroupingCode = 1
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 54,
                            CollegeLicenseGroupingCode = 1
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 55,
                            CollegeLicenseGroupingCode = 1
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 60,
                            CollegeLicenseGroupingCode = 5
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 61,
                            CollegeLicenseGroupingCode = 5
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 62,
                            CollegeLicenseGroupingCode = 5
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 63,
                            CollegeLicenseGroupingCode = 5
                        },
                        new
                        {
                            CollegeCode = 3,
                            LicenseCode = 69,
                            CollegeLicenseGroupingCode = 5
                        },
                        new
                        {
                            CollegeCode = 7,
                            LicenseCode = 70
                        },
                        new
                        {
                            CollegeCode = 7,
                            LicenseCode = 75
                        },
                        new
                        {
                            CollegeCode = 7,
                            LicenseCode = 76
                        },
                        new
                        {
                            CollegeCode = 7,
                            LicenseCode = 77
                        },
                        new
                        {
                            CollegeCode = 11,
                            LicenseCode = 78
                        },
                        new
                        {
                            CollegeCode = 11,
                            LicenseCode = 79
                        },
                        new
                        {
                            CollegeCode = 11,
                            LicenseCode = 80
                        },
                        new
                        {
                            CollegeCode = 11,
                            LicenseCode = 81
                        },
                        new
                        {
                            CollegeCode = 14,
                            LicenseCode = 71
                        },
                        new
                        {
                            CollegeCode = 14,
                            LicenseCode = 72
                        },
                        new
                        {
                            CollegeCode = 14,
                            LicenseCode = 73
                        },
                        new
                        {
                            CollegeCode = 14,
                            LicenseCode = 74
                        },
                        new
                        {
                            CollegeCode = 4,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 5,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 6,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 8,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 9,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 10,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 12,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 13,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 15,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 16,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 17,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 18,
                            LicenseCode = 64
                        },
                        new
                        {
                            CollegeCode = 19,
                            LicenseCode = 82
                        },
                        new
                        {
                            CollegeCode = 19,
                            LicenseCode = 83
                        },
                        new
                        {
                            CollegeCode = 19,
                            LicenseCode = 84
                        },
                        new
                        {
                            CollegeCode = 19,
                            LicenseCode = 85
                        },
                        new
                        {
                            CollegeCode = 19,
                            LicenseCode = 86
                        });
                });

            modelBuilder.Entity("Prime.Models.CollegeLicenseGrouping", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("CollegeLicenseGroupingLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Licensed Practical Nurse",
                            Weight = 1
                        },
                        new
                        {
                            Code = 2,
                            Name = "Registered Nurse/Licensed Graduate Nurse",
                            Weight = 2
                        },
                        new
                        {
                            Code = 3,
                            Name = "Registered Psychiatric Nurse",
                            Weight = 3
                        },
                        new
                        {
                            Code = 4,
                            Name = "Nurse Practitioner",
                            Weight = 4
                        },
                        new
                        {
                            Code = 5,
                            Name = "Midwife",
                            Weight = 5
                        });
                });

            modelBuilder.Entity("Prime.Models.CollegePractice", b =>
                {
                    b.Property<int>("CollegeCode")
                        .HasColumnType("integer");

                    b.Property<int>("PracticeCode")
                        .HasColumnType("integer");

                    b.HasKey("CollegeCode", "PracticeCode");

                    b.HasIndex("PracticeCode");

                    b.ToTable("CollegePractice");

                    b.HasData(
                        new
                        {
                            CollegeCode = 3,
                            PracticeCode = 1
                        },
                        new
                        {
                            CollegeCode = 3,
                            PracticeCode = 2
                        },
                        new
                        {
                            CollegeCode = 3,
                            PracticeCode = 3
                        },
                        new
                        {
                            CollegeCode = 3,
                            PracticeCode = 4
                        });
                });

            modelBuilder.Entity("Prime.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobRoleTitle")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("PhysicalAddressId")
                        .HasColumnType("integer");

                    b.Property<string>("SMSPhone")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PhysicalAddressId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Prime.Models.Country", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CountryLookup");

                    b.HasData(
                        new
                        {
                            Code = "CA",
                            Name = "Canada"
                        },
                        new
                        {
                            Code = "US",
                            Name = "United States"
                        });
                });

            modelBuilder.Entity("Prime.Models.DefaultPrivilege", b =>
                {
                    b.Property<int>("PrivilegeId")
                        .HasColumnType("integer");

                    b.Property<int>("LicenseCode")
                        .HasColumnType("integer");

                    b.HasKey("PrivilegeId", "LicenseCode");

                    b.HasIndex("LicenseCode");

                    b.ToTable("DefaultPrivilege");

                    b.HasData(
                        new
                        {
                            PrivilegeId = 1,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 2,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 3,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 4,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 25
                        },
                        new
                        {
                            PrivilegeId = 1,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 2,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 3,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 4,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 26
                        },
                        new
                        {
                            PrivilegeId = 1,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 2,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 3,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 4,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 27
                        },
                        new
                        {
                            PrivilegeId = 1,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 2,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 3,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 4,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 28
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 1
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 2
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 3
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 4
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 5
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 6
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 7
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 8
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 9
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 10
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 12
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 13
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 14
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 15
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 18
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 19
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 24
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 17
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 22
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 47
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 48
                        },
                        new
                        {
                            PrivilegeId = 5,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 6,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 7,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 8,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 9,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 10,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 11,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 12,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 13,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 14,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 15,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 16,
                            LicenseCode = 51
                        },
                        new
                        {
                            PrivilegeId = 19,
                            LicenseCode = 51
                        });
                });

            modelBuilder.Entity("Prime.Models.DeviceProviderRole", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<bool>("Certified")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("DeviceProviderRoleLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Certified = true,
                            Name = "Certified Prosthetist",
                            Weight = 1
                        },
                        new
                        {
                            Code = 2,
                            Certified = true,
                            Name = "Certified Orthotist",
                            Weight = 2
                        },
                        new
                        {
                            Code = 3,
                            Certified = true,
                            Name = "Certified Prosthetist Orthotist",
                            Weight = 3
                        },
                        new
                        {
                            Code = 4,
                            Certified = true,
                            Name = "Registered Prosthetic Technician",
                            Weight = 4
                        },
                        new
                        {
                            Code = 5,
                            Certified = true,
                            Name = "Registered Orthotic Technician",
                            Weight = 5
                        },
                        new
                        {
                            Code = 6,
                            Certified = true,
                            Name = "Registered Prosthetic Orthotic Technician",
                            Weight = 6
                        },
                        new
                        {
                            Code = 7,
                            Certified = true,
                            Name = "Orthotic Resident",
                            Weight = 7
                        },
                        new
                        {
                            Code = 8,
                            Certified = true,
                            Name = "Prosthetic Resident",
                            Weight = 8
                        },
                        new
                        {
                            Code = 9,
                            Certified = true,
                            Name = "Orthotic Intern",
                            Weight = 9
                        },
                        new
                        {
                            Code = 10,
                            Certified = true,
                            Name = "Prosthetic Intern",
                            Weight = 10
                        },
                        new
                        {
                            Code = 11,
                            Certified = false,
                            Name = "Compression Garment Fitter",
                            Weight = 11
                        },
                        new
                        {
                            Code = 12,
                            Certified = false,
                            Name = "Breast prosthetic Fitter",
                            Weight = 12
                        },
                        new
                        {
                            Code = 13,
                            Certified = false,
                            Name = "Ocularist",
                            Weight = 13
                        },
                        new
                        {
                            Code = 14,
                            Certified = false,
                            Name = "Anaplastologist",
                            Weight = 14
                        },
                        new
                        {
                            Code = 15,
                            Certified = false,
                            Name = "None",
                            Weight = 15
                        });
                });

            modelBuilder.Entity("Prime.Models.DeviceProviderSite", b =>
                {
                    b.Property<string>("SiteId")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DpId")
                        .HasColumnType("text");

                    b.Property<string>("ManagerLast")
                        .HasColumnType("text");

                    b.Property<string>("MgrFirst")
                        .HasColumnType("text");

                    b.Property<string>("PC")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Prov")
                        .HasColumnType("text");

                    b.Property<string>("SiteAddress")
                        .HasColumnType("text");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("SiteId");

                    b.ToTable("DeviceProviderSite");
                });

            modelBuilder.Entity("Prime.Models.DoNotEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("DoNotEmail");
                });

            modelBuilder.Entity("Prime.Models.DocumentAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("DocumentAccessToken");
                });

            modelBuilder.Entity("Prime.Models.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Body")
                        .HasColumnType("text");

                    b.Property<string>("Cc")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("DateSent")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LatestStatus")
                        .HasColumnType("text");

                    b.Property<Guid?>("MsgId")
                        .HasColumnType("uuid");

                    b.Property<string>("SendType")
                        .HasColumnType("text");

                    b.Property<string>("SentTo")
                        .HasColumnType("text");

                    b.Property<string>("StatusMessage")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<int>("UpdateCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("EmailLog");
                });

            modelBuilder.Entity("Prime.Models.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EmailType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("ModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Template")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EmailType")
                        .IsUnique();

                    b.ToTable("EmailTemplate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 1,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "<p> Your PRIME application status has changed since you last viewed it. Please click <a href=\"@Model.Url\">here</a> to log into PRIME and view your status. </p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 2,
                            ModifiedDate = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Template = "<style> .underline { text-decoration: underline; } .list-item-mb { margin-bottom: 0.75rem; } </style>To: PharmaNet administrator (person responsible for coordinating PharmaNet access):<br><br>@Model.EnrolleeFullName has been approved for access to PharmaNet.<br><br><strong> To set up their access, you must forward this notification and the information below to <span class=\"underline\">whoever sets up PharmaNet user accounts. This is usually your PharmaNet software vendor but can also be someone like an IT department or authorized individual</span>. </strong><br><br><ol><li class=\"list-item-mb\"> Name of the community health practice: </li><li class=\"list-item-mb\"> Practice address: </li><li class=\"list-item-mb\"> PharmaNet site ID, if you have it:</li><li class=\"list-item-mb\"> If @Model.EnrolleeFullName accesses PharmaNet on behalf of another user, please ensure your PharmaNet software vendor knows who the other users are, and those users enrol in PRIME.<br><br></li></ol> Your software vendor can find @Model.EnrolleeFullName's details by following this link: <a href=\"@Model.TokenUrl\">@Model.TokenUrl</a> <strong>This link will expire in 10 days.</strong><br><br>Thank you,<br><br>PRIME Support <br>1-844-397-7463<br><a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 3,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "To: Whom it may concern, <br> <br> @Model.EnrolleeFullName has been approved for <strong>Community Pharmacy Access to PharmaNet.</strong> They can now be set up with their PharmaNet Access account in your local software. You must include their <strong>Global PharmaNet ID (GPID)</strong> on their account profile. You can access their GPID via this link below. <br> <br> <a href=\"@Model.TokenUrl\">@Model.TokenUrl</a> <br> <strong>This link will expire after @Model.ExpiresInDays days</strong>. <br> <br> Thank you.",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 4,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "To: PharmNet Access administrator <br> <br> @Model.EnrolleeFullName has been approved for <strong>Health Authority Access to PharmaNet.</strong> <br> They can now be set up with their PharmaNet Access account in your local software. You must include their <strong>Global PharmaNet ID (GPID)</strong> on their account profile. <br> You can access their GPID via this link here. <br> <a href=\"@Model.TokenUrl\">@Model.TokenUrl</a> <br> <strong>This link will expire after @Model.ExpiresInDays days</strong>.",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 5,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "The Ministry of Health has been notified that you require Remote Access at <br> Organization Name: @Model.OrganizationName <br> Site Address: @Model.SiteStreetAddress, @Model.SiteCity <br> <br> To complete your approval for Remote Access, please ensure you have indicated you require Remote Access on your profile at <a href=\"@Model.PrimeUrl\">@Model.PrimeUrl</a>.",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 6,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "@{ var pecText = string.IsNullOrWhiteSpace(Model.SitePec) ? \"Not Assigned\" : Model.SitePec; } <p> Notification: The list of Remote Practitioners at @Model.SiteStreetAddress of @Model.OrganizationName (PEC: @pecText) has been updated. The Remote Practitioners at this site are: </p> <h2 class=\"mb-2\">Remote Users</h2> @foreach (var name in Model.RemoteUserNames) { <div class=\"ml-2 mb-2\"> <h5>Name</h5> <span class=\"ml-2\">@name</span> </div> } <h2 class=\"mb-2\">Site Information</h2> <p> See the attached registration and organization agreement for more information. @if (!string.IsNullOrWhiteSpace(Model.DocumentUrl)) { @(\"To access the Business Licence, click this\") <a href=\"@Model.DocumentUrl\" target=\"_blank\">link</a>@(\".\") } </p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 7,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "<p>@Model.DoingBusinessAs with PEC/SiteID @Model.Pec has been approved by the Ministry of Health for PharmaNet access. Please notify the PharmaNet software vendor for this site and complete any remaining tasks to activate the site.</p><p>Thank you.</p><p>PRIME Support Team.</p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 8,
                            ModifiedDate = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Template = "@{ var renewalDate = Model.RenewalDate.Date.ToShortDateString(); } <p>Dear @Model.EnrolleeName,</p><p>It is time to renew your PRIME enrolment. If you still need PharmaNet to care for patients, you must ensure that your PRIME profile is current by reviewing and updating every year. To renew, log in to your PRIME profile, update your information as needed, and read and sign the terms of access.</p><p>Please renew by @renewalDate.</p><ol><li>Log in to PRIME <a href='@Model.PrimeUrl'>@Model.PrimeUrl</a>.</li><li>Click <b>Renew or Update Information</b> (top of screen).</li><li>On the PRIME Profile screen, review your information.<ol style='list-style-type:lower-alpha;'><li>Select the edit button to revise sections that are out of date. Click <strong>Continue</strong> at the bottom of updated screens to save changes.</li><li>Once changes are saved, <strong>certify and submit</strong> at the bottom of the PRIME Profile page.</li></ol></li><li>If instructed to go on, click <b>Continue</b></li><li>Most renewals will be approved automatically. If you are notified that your renewal is approved, go to the next page to review and accept the PharmaNet user terms of access. This step completes renewal. Note that the terms of access may have changed, so please read carefully.</li><p>In some cases, renewals are sent for review. If your renewal is sent for review, you will either be contacted by the PRIME Support team, or you will be notified to log in to PRIME to complete the remaining steps.</p><li>You will next be prompted to share your renewal approval with the person or team in your workplace who sets up PharmaNet accounts. You do this by entering their email address(es) and sending. <strong>Only share the renewal approval if:</strong><ol style='list-style-type:lower-alpha;'><li>You changed workplaces or care setting (new clinic, health authority, etc.) since you last updated your account, or you did not share the approval notification with your PharmaNet administrator earlier, and/or</li><li>You previously enrolled as an RN, RPN, LPN or midwife, and have since been issued a PharmaNet ID by BCCNM. Your access type may have changed, and the people in your workplace who set up PharmaNet access need to know this.</li></ol></li></ol><p>Thank you for renewing your PRIME enrolment,</p><br>PRIME Support <br>1-844-397-7463<br><a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 9,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "<p> A user has uploaded business licence to their PharmaNet site registration. @if (!string.IsNullOrWhiteSpace(Model.Url)) { @(\"To access the Business Licence, click this\") <a href=\"@Model.Url\" target=\"_blank\">link</a>@(\".\") } </p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 10,
                            ModifiedDate = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Template = "Dear @Model.EnrolleeName,<br /><br /><p>Your PRIME renewal is overdue.</p><p><strong>Once a year, you must ensure that your PRIME profile is current.</strong> If you still need access to PharmaNet to care for patients, renew your PRIME enrolment now by logging in to PRIME at <a href='@Model.PrimeUrl'>@Model.PrimeUrl</a>. Update your information as needed, submit, and then read and sign the terms of access.</p><p>You may also wish to confirm that your email accepts messages from PRIME, particularly if they are going to your email junk folder (e.g., the previous notices to renew).</p><br>Thank you,<br><br>PRIME Support <br>1-844-397-7463<br><a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 11,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "<p> Your site registration has been approved. The site must now be set up and activated in PharmaNet. Your PharmaNet software vendor will be notified when the site has been activated, and you will hear from them when you can start to use PharmaNet. </p> <p> Individuals who will be accessing PharmaNet at your site should enrol in PRIME now if they have not already done so. For more information, please visit <a href=\"https://www.gov.bc.ca/pharmanet/PRIME\" target=\"_blank\">https://www.gov.bc.ca/pharmanet/PRIME</a>. [for private community practice only: If you have registered any physicians or nurse practitioners for remote access to PharmaNet, they must enroll in PRIME before they use remote access, which they can do here: <a href=\"https://pharmanetenrolment.gov.bc.ca\" target=\"_blank\">https://pharmanetenrolment.gov.bc.ca</a>. You must not permit remote use of PharmaNet until these users are approved in PRIME.] </p> <p> If you have any questions or concerns, please phone 1-844-397-7463 or email <a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMESupport@gov.bc.ca</a>. </p> <p> Thank you. </p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 12,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "<p> The site you registered in PRIME, @Model.DoingBusinessAs, has been approved by the Ministry of Health. Your SiteID is @Model.Pec. </p> <p> Health Insurance BC has been notified of the site’s approval and will contact your software vendor. Your vendor will complete any remaining setup for your site and may contact you or the PharmaNet Administrator at your site. </p> <p> If you need to update any information in PRIME regarding your site, you may log in at any time using your mobile BC Services Card. If you have any questions or concerns, please phone 1-844-397-7463 or email PRIMESupport@gov.bc.ca. </p> <p> Thank you. </p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 13,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "<p> A new PharmaNet site registration has been received. See the attached registration and organization agreement for more information. @if (!string.IsNullOrWhiteSpace(Model.Url)) { @(\"To access the Business Licence, click this\") <a href=\"@Model.Url\" target=\"_blank\">link</a>@(\".\") } </p>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 14,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "Your claim of the organization @Model.OrganizationName, of which the site with site ID/PEC @Model.ProvidedSiteId is part of, has been approved.  You now have access to site registration for this organization.",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 15,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "A PRIME Admin has reviewed the site registration for PEC/SiteID# @Model.Pec. @(!string.IsNullOrWhiteSpace(Model.Note) ? $\"The following notes were added: {Model.Note}\" : \"\")",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 16,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "Thank you for registering your site (SiteID: @Model.Pec) in PRIME. If you need to update any site information in PRIME, you may log in at any time using your mobile BC Services Card. If you have any questions, please phone 1 - 844 - 397 - 7463 or email PRIMESupport@@gov.bc.ca. Thank you.",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 17,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "Your request for PharmaNet access has been approved and recorded in PRIME. When it is possible for you to do so, you must enrol in PRIME using your mobile BC Services Card. <br> <br> <strong> Your temporary GPID is @Model.GPID. </strong> <br> <br> The first time you log into PRIME you should be asked if you have previously received permission to access PharmaNet via an offline process. If you do not see this prompt, please stop your enrollment and contact <a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 18,
                            ModifiedDate = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Template = "Dear @Model.EnrolleeName, <br> <br><p>Your PharmaNet Terms of Access must be accepted in PRIME before your enrolment is complete. Please log in to PRIME and accept your terms of access now.</p><p>You can access PRIME here <a href='@Model.PrimeUrl'>@Model.PrimeUrl</a>.  If you are not directed to the user terms of access page, you can reach it by selecting Terms of Access from the menu on the left-hand side of the PRIME Profile page.</p><br>Thank you,<br><br>PRIME Support <br>1-844-397-7463<br><a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 19,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "This is an automated generated email from PRIME. <br> <br> @(Model.FirstName + \" \" +  Model.LastName + \" is going to be absent \") @if (Model.End.HasValue) {@(\"from \" + Model.Start.ToShortDateString() + \" to \" + Model.End.Value.ToShortDateString() + \".  Please consider deactivating the user during this period. Any access during this period by the user will be considered as an unauthorized access.\")} else {@(\"indefinitely, starting \" + Model.Start.ToShortDateString() + \". Please deactivate the user on the start date. Any access during this period by the user will be considered as an unauthorized access.\")}",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 20,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "Hello @Model.EnrolleeName, <br> <br> You are receiving this message as your PharmaNet user status has changed from on-behalf-of user to independent user following changes to legislation governing access to PharmaNet. <br> <br> Being an independent PharmaNet user means you will now access PharmaNet as yourself instead of on behalf of another practitioner. <br> <br> Log back in to PRIME by @Model.RenewalDate.ToString(\"d MMMM yyyy\") to confirm your profile information and review and accept the user terms of access for independent users. These will automatically be presented to you. This is a requirement for you to maintain access to PharmaNet, as the new terms of access are quite different from those you may have accepted earlier. <br> <br> For information about PRIME, visit the <a href=\"@Model.PrimeUrl\">PRIME web page</a>.  If you have questions or difficulties using PRIME, please contact us at the email address below.<br> <br> Thank you, <br> <br> PRIME Support<br><a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EmailType = 21,
                            ModifiedDate = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            Template = "Hello @Model.EnrolleeName, <br> <br> You are receiving this message as your PharmaNet user status has changed from on-behalf-of user to independent user following changes to legislation governing access to PharmaNet. <br> <br> Being an independent user of PharmaNet means you now will access PharmaNet as yourself instead of on behalf of another practitioner. <br> <br> <b>This is your last day</b> to log back in to PRIME to confirm your profile information and review and accept the new user terms of access for independent users. These will automatically be presented to you. This is a requirement for you to maintain access to PharmaNet. <br> <br> For information about PRIME, visit the <a href=\"@Model.PrimeUrl\">PRIME web page</a>.  If you have questions or difficulties using PRIME, please contact us at the email address below.<br> <br> Thank you, <br> <br> PRIME Support<br><a href=\"mailto:PRIMEsupport@gov.bc.ca\" target=\"_top\">PRIMEsupport@gov.bc.ca</a>",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Prime.Models.Enrollee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<bool>("AlwaysManual")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DeviceProviderIdentifier")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("GPID")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("GivenNames")
                        .HasColumnType("text");

                    b.Property<string>("HPDID")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("IdentityAssuranceLevel")
                        .HasColumnType("integer");

                    b.Property<string>("IdentityProvider")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("text");

                    b.Property<string>("PreferredFirstName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredLastName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredMiddleName")
                        .HasColumnType("text");

                    b.Property<bool>("ProfileCompleted")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("SelfDeclarationCompletedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SmsPhone")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("GPID")
                        .IsUnique();

                    b.HasIndex("HPDID")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeAbsence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EndTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("EnrolleeAbsence");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("EnrolleeId", "AddressId")
                        .IsUnique();

                    b.ToTable("EnrolleeAddress");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeAdjudicationDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("DocumentType")
                        .HasColumnType("integer");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("EnrolleeAdjudicationDocument");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeCareSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CareSettingCode")
                        .HasColumnType("integer");

                    b.Property<bool>("ConsentForAutoPull")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CareSettingCode");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("EnrolleeCareSetting");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeDeviceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CertificationNumber")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceProviderId")
                        .HasColumnType("text");

                    b.Property<int>("DeviceProviderRoleCode")
                        .HasColumnType("integer");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DeviceProviderRoleCode");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("EnrolleeDeviceProvider");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeHealthAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ConsentForAutoPull")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<int>("HealthAuthorityCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("HealthAuthorityCode");

                    b.ToTable("EnrolleeHealthAuthority");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeLinkedEnrolment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EnrolmentLinkDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PaperEnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserProvidedGpid")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId")
                        .IsUnique();

                    b.HasIndex("PaperEnrolleeId")
                        .IsUnique();

                    b.ToTable("EnrolleeLinkedEnrolment");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("NoteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("EnrolleeNote");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdminId")
                        .HasColumnType("integer");

                    b.Property<int>("AssigneeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeNoteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("EnrolleeNoteId")
                        .IsUnique();

                    b.ToTable("EnrolleeNotification");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeRemoteUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<int>("RemoteUserId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("RemoteUserId");

                    b.ToTable("EnrolleeRemoteUser");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentCertificateAccessToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("ViewCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("EnrolmentCertificateAccessToken");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("StatusDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("StatusCode");

                    b.ToTable("EnrolmentStatus");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatusReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolmentStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("ReasonNote")
                        .HasColumnType("text");

                    b.Property<int>("StatusReasonCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolmentStatusId");

                    b.HasIndex("StatusReasonCode");

                    b.ToTable("EnrolmentStatusReason");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatusReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AdjudicatorNoteId")
                        .HasColumnType("integer");

                    b.Property<int?>("AdminId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolmentStatusId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorNoteId")
                        .IsUnique();

                    b.HasIndex("AdminId");

                    b.HasIndex("EnrolmentStatusId")
                        .IsUnique();

                    b.ToTable("EnrolmentStatusReference");
                });

            modelBuilder.Entity("Prime.Models.Facility", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("FacilityLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Acute/ambulatory care"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Long-term care"
                        },
                        new
                        {
                            Code = 3,
                            Name = "In-patient pharmacy"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Out-patient pharmacy"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Outpatient or community-based clinic"
                        });
                });

            modelBuilder.Entity("Prime.Models.GisEnrolment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("LdapLoginSuccessDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LdapUsername")
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("SubmittedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("GisEnrolment");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.CareType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CareTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Ambulatory Care"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Acute Care"
                        });
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityCareType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CareType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("HealthAuthorityOrganizationId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityOrganizationId");

                    b.ToTable("HealthAuthorityCareType");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityCareTypeToVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("HealthAuthorityCareTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("HealthAuthorityVendorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityCareTypeId");

                    b.HasIndex("HealthAuthorityVendorId");

                    b.ToTable("HealthAuthorityCareTypeToVendor");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ContactId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HealthAuthorityOrganizationId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("HealthAuthorityContact");

                    b.HasDiscriminator<string>("Discriminator").HasValue("HealthAuthorityContact");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int?>("HealthAuthorityOrganizationAgreementDocumentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityOrganizationAgreementDocumentId");

                    b.ToTable("HealthAuthorityOrganization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Northern Health",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Interior Health",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Vancouver Coastal Health",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Island Health",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Fraser Health",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Provincial Health Services Authority",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupportVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("HealthAuthorityTechnicalSupportId")
                        .HasColumnType("integer");

                    b.Property<int>("HealthAuthorityVendorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityTechnicalSupportId");

                    b.HasIndex("HealthAuthorityVendorId");

                    b.ToTable("HealthAuthorityTechnicalSupportVendor");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("HealthAuthorityOrganizationId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("VendorCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityOrganizationId");

                    b.HasIndex("VendorCode");

                    b.ToTable("HealthAuthorityVendor");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.PrivacyOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("HealthAuthorityOrganizationId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("PhysicalAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HealthAuthorityOrganizationId")
                        .IsUnique();

                    b.HasIndex("PhysicalAddressId");

                    b.ToTable("PrivacyOffice");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.SecurityGroup", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("SecurityGroupLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "EMRMD (EMR - Community-based Clinics)"
                        },
                        new
                        {
                            Code = 2,
                            Name = "HAD (Hospital Admitting)"
                        },
                        new
                        {
                            Code = 3,
                            Name = "HAI (HA Viewer)"
                        },
                        new
                        {
                            Code = 4,
                            Name = "HAP (Hospital Access)"
                        },
                        new
                        {
                            Code = 5,
                            Name = "HNF (Emergency Department Access (EDAP))"
                        },
                        new
                        {
                            Code = 6,
                            Name = "IP (In-patient Pharmacies - Hospital)"
                        },
                        new
                        {
                            Code = 7,
                            Name = "MD (COMPAP)"
                        },
                        new
                        {
                            Code = 8,
                            Name = "OP (Hospital Outpatient Pharmacy)"
                        },
                        new
                        {
                            Code = 9,
                            Name = "VHA (Cerner Integration Site)"
                        });
                });

            modelBuilder.Entity("Prime.Models.HealthAuthority", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("HealthAuthorityLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Northern Health"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Interior Health"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Vancouver Coastal Health"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Island Health"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Fraser Health"
                        },
                        new
                        {
                            Code = 6,
                            Name = "Provincial Health Services Authority"
                        });
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorityOrganizationAgreementDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("HealthAuthorityOrganizationAgreementDocument");
                });

            modelBuilder.Entity("Prime.Models.IdentificationDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("IdentificationDocument");
                });

            modelBuilder.Entity("Prime.Models.IdentifierType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("IdentifierTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.19",
                            Name = "RNID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.20",
                            Name = "RNPID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.608",
                            Name = "RPNRC"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.14",
                            Name = "PHID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.454",
                            Name = "RACID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.18",
                            Name = "RMID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.10",
                            Name = "LPNID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.4",
                            Name = "CPSID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.429",
                            Name = "OPTID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.6",
                            Name = "DENID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.363",
                            Name = "CCID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.364",
                            Name = "OTID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.362",
                            Name = "PSYCHID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.361",
                            Name = "SWID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.422",
                            Name = "CHIROID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.414",
                            Name = "PHYSIOID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.433",
                            Name = "RMTID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.439",
                            Name = "KNID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.401",
                            Name = "PHTID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.477",
                            Name = "COUNID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.452",
                            Name = "MFTID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.530",
                            Name = "RDID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.46",
                            Name = "MOAID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.3.40.2.44",
                            Name = "PPID"
                        },
                        new
                        {
                            Code = "2.16.840.1.113883.4.538",
                            Name = "NDID"
                        });
                });

            modelBuilder.Entity("Prime.Models.IndividualDeviceProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CommunitySiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CommunitySiteId");

                    b.ToTable("IndividualDeviceProvider");
                });

            modelBuilder.Entity("Prime.Models.JobName", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("JobNameLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Medical office assistant"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Pharmacy assistant"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Registration clerk"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Ward clerk"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Nursing unit assistant"
                        });
                });

            modelBuilder.Entity("Prime.Models.License", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("LicenseLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Full - Family",
                            Weight = 1
                        },
                        new
                        {
                            Code = 2,
                            Name = "Full - Specialty",
                            Weight = 2
                        },
                        new
                        {
                            Code = 5,
                            Name = "Provisional - Family",
                            Weight = 3
                        },
                        new
                        {
                            Code = 6,
                            Name = "Provisional - Specialty",
                            Weight = 4
                        },
                        new
                        {
                            Code = 9,
                            Name = "Conditional - Practice Setting",
                            Weight = 5
                        },
                        new
                        {
                            Code = 8,
                            Name = "Conditional - Practice Limitations",
                            Weight = 6
                        },
                        new
                        {
                            Code = 10,
                            Name = "Conditional - Disciplined",
                            Weight = 7
                        },
                        new
                        {
                            Code = 22,
                            Name = "Surgical Assistant",
                            Weight = 8
                        },
                        new
                        {
                            Code = 16,
                            Name = "Clinical Observership",
                            Weight = 9
                        },
                        new
                        {
                            Code = 7,
                            Name = "Academic",
                            Weight = 10
                        },
                        new
                        {
                            Code = 4,
                            Name = "Osteopathic",
                            Weight = 11
                        },
                        new
                        {
                            Code = 3,
                            Name = "Special",
                            Weight = 12
                        },
                        new
                        {
                            Code = 17,
                            Name = "Visitor",
                            Weight = 13
                        },
                        new
                        {
                            Code = 12,
                            Name = "Educational - Postgraduate Resident",
                            Weight = 14
                        },
                        new
                        {
                            Code = 13,
                            Name = "Educational - Postgraduate Resident Elective",
                            Weight = 15
                        },
                        new
                        {
                            Code = 14,
                            Name = "Educational - Postgraduate Fellow",
                            Weight = 16
                        },
                        new
                        {
                            Code = 15,
                            Name = "Educational - Postgraduate Trainee",
                            Weight = 17
                        },
                        new
                        {
                            Code = 11,
                            Name = "Educational - Medical Student",
                            Weight = 18
                        },
                        new
                        {
                            Code = 23,
                            Name = "Administrative",
                            Weight = 19
                        },
                        new
                        {
                            Code = 20,
                            Name = "Retired - Life ",
                            Weight = 20
                        },
                        new
                        {
                            Code = 24,
                            Name = "Assessment",
                            Weight = 21
                        },
                        new
                        {
                            Code = 18,
                            Name = "Emergency - Family",
                            Weight = 22
                        },
                        new
                        {
                            Code = 19,
                            Name = "Emergency - Specialty",
                            Weight = 23
                        },
                        new
                        {
                            Code = 21,
                            Name = "Temporarily Inactive",
                            Weight = 24
                        },
                        new
                        {
                            Code = 59,
                            Name = "Full - Podiatric Surgeon",
                            Weight = 25
                        },
                        new
                        {
                            Code = 65,
                            Name = "Educational - Podiatric Surgeon Student (Elective)",
                            Weight = 26
                        },
                        new
                        {
                            Code = 66,
                            Name = "Educational - Podiatric Surgeon Resident (Elective)",
                            Weight = 27
                        },
                        new
                        {
                            Code = 67,
                            Name = "Conditional - Podiatric Surgeon Disciplined",
                            Weight = 28
                        },
                        new
                        {
                            Code = 25,
                            Name = "Full Pharmacist",
                            Weight = 1
                        },
                        new
                        {
                            Code = 26,
                            Name = "Limited Pharmacist",
                            Weight = 2
                        },
                        new
                        {
                            Code = 28,
                            Name = "Student Pharmacist",
                            Weight = 3
                        },
                        new
                        {
                            Code = 27,
                            Name = "Temporary Pharmacist",
                            Weight = 4
                        },
                        new
                        {
                            Code = 30,
                            Name = "Non-Practicing Pharmacist",
                            Weight = 5
                        },
                        new
                        {
                            Code = 29,
                            Name = "Pharmacy Technician",
                            Weight = 6
                        },
                        new
                        {
                            Code = 31,
                            Name = "Non-Practicing Pharmacy Technician",
                            Weight = 7
                        },
                        new
                        {
                            Code = 68,
                            Name = "Temporary Pharmacy Technician",
                            Weight = 8
                        },
                        new
                        {
                            Code = 47,
                            Name = "Practicing Nurse Practitioner",
                            Weight = 1
                        },
                        new
                        {
                            Code = 48,
                            Name = "Provisional Nurse Practitioner",
                            Weight = 2
                        },
                        new
                        {
                            Code = 51,
                            Name = "Temporary Nurse Practitioner (Emergency)",
                            Weight = 4
                        },
                        new
                        {
                            Code = 49,
                            Name = "Non-Practicing Nurse Practitioner",
                            Weight = 5
                        },
                        new
                        {
                            Code = 32,
                            Name = "Practicing Registered Nurse",
                            Weight = 6
                        },
                        new
                        {
                            Code = 33,
                            Name = "Provisional Registered Nurse",
                            Weight = 7
                        },
                        new
                        {
                            Code = 39,
                            Name = "Temporary Registered Nurse (Emergency)",
                            Weight = 9
                        },
                        new
                        {
                            Code = 34,
                            Name = "Non-Practicing Registered Nurse",
                            Weight = 10
                        },
                        new
                        {
                            Code = 40,
                            Name = "Employed Student Nurse",
                            Weight = 11
                        },
                        new
                        {
                            Code = 35,
                            Name = "Practicing Licensed Graduate Nurse",
                            Weight = 12
                        },
                        new
                        {
                            Code = 36,
                            Name = "Provisional Licensed Graduate Nurse",
                            Weight = 13
                        },
                        new
                        {
                            Code = 37,
                            Name = "Non-Practicing Licensed Graduate Nurse",
                            Weight = 14
                        },
                        new
                        {
                            Code = 41,
                            Name = "Practicing Registered Psychiatric Nurse",
                            Weight = 15
                        },
                        new
                        {
                            Code = 42,
                            Name = "Provisional Registered Psychiatric Nurse",
                            Weight = 16
                        },
                        new
                        {
                            Code = 45,
                            Name = "Temporary Registered Psychiatric Nurse (Emergency)",
                            Weight = 18
                        },
                        new
                        {
                            Code = 43,
                            Name = "Non-Practicing Registered Psychiatric Nurse",
                            Weight = 19
                        },
                        new
                        {
                            Code = 46,
                            Name = "Employed Student Psychiatric Nurse",
                            Weight = 20
                        },
                        new
                        {
                            Code = 52,
                            Name = "Practicing Licensed Practical Nurse",
                            Weight = 21
                        },
                        new
                        {
                            Code = 53,
                            Name = "Provisional Licensed Practical Nurse",
                            Weight = 22
                        },
                        new
                        {
                            Code = 55,
                            Name = "Temporary Licensed Practical Nurse (Emergency)",
                            Weight = 23
                        },
                        new
                        {
                            Code = 54,
                            Name = "Non-Practicing Licensed Practical Nurse",
                            Weight = 25
                        },
                        new
                        {
                            Code = 60,
                            Name = "Practising Midwife",
                            Weight = 28
                        },
                        new
                        {
                            Code = 61,
                            Name = "Provisional Midwife",
                            Weight = 29
                        },
                        new
                        {
                            Code = 62,
                            Name = "Temporary Midwife (Emergency)",
                            Weight = 30
                        },
                        new
                        {
                            Code = 63,
                            Name = "Non-Practising Midwife",
                            Weight = 31
                        },
                        new
                        {
                            Code = 69,
                            Name = "Student Midwife",
                            Weight = 32
                        },
                        new
                        {
                            Code = 70,
                            Name = "Full Registrations",
                            Weight = 1
                        },
                        new
                        {
                            Code = 75,
                            Name = "Restricted to Specialty",
                            Weight = 2
                        },
                        new
                        {
                            Code = 76,
                            Name = "Academic",
                            Weight = 3
                        },
                        new
                        {
                            Code = 77,
                            Name = "Academic (Grand-parented)",
                            Weight = 4
                        },
                        new
                        {
                            Code = 78,
                            Name = "Full",
                            Weight = 1
                        },
                        new
                        {
                            Code = 79,
                            Name = "Non-practicing",
                            Weight = 2
                        },
                        new
                        {
                            Code = 80,
                            Name = "Temporary",
                            Weight = 3
                        },
                        new
                        {
                            Code = 81,
                            Name = "Student",
                            Weight = 4
                        },
                        new
                        {
                            Code = 71,
                            Name = "Therapeutic Optometrist",
                            Weight = 1
                        },
                        new
                        {
                            Code = 72,
                            Name = "Non-Therapeutic Optometrist",
                            Weight = 2
                        },
                        new
                        {
                            Code = 73,
                            Name = "Non-Practicing Optometrist",
                            Weight = 3
                        },
                        new
                        {
                            Code = 74,
                            Name = "Limited Optometrist",
                            Weight = 4
                        },
                        new
                        {
                            Code = 82,
                            Name = "Full registration",
                            Weight = 1
                        },
                        new
                        {
                            Code = 83,
                            Name = "Clinical registration",
                            Weight = 2
                        },
                        new
                        {
                            Code = 84,
                            Name = "Provisional registration",
                            Weight = 3
                        },
                        new
                        {
                            Code = 85,
                            Name = "Non-practicing registration",
                            Weight = 4
                        },
                        new
                        {
                            Code = 86,
                            Name = "Temporary registration",
                            Weight = 4
                        },
                        new
                        {
                            Code = 64,
                            Name = "Not Displayed",
                            Weight = 1
                        });
                });

            modelBuilder.Entity("Prime.Models.LicenseDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AllowRequestRemoteAccess")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("LicenseCode")
                        .HasColumnType("integer");

                    b.Property<bool>("LicensedToProvideCare")
                        .HasColumnType("boolean");

                    b.Property<bool>("Manual")
                        .HasColumnType("boolean");

                    b.Property<bool>("NamedInImReg")
                        .HasColumnType("boolean");

                    b.Property<string>("NonPrescribingPrefix")
                        .HasColumnType("text");

                    b.Property<string>("Prefix")
                        .HasColumnType("text");

                    b.Property<int?>("PrescriberIdType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Validate")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("LicenseCode");

                    b.ToTable("LicenseDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 1,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 2,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 2,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 5,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 5,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 6,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 6,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 9,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 9,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 8,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 8,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 10,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 10,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 22,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 22,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 16,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 16,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 7,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 7,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 4,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 4,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 3,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 3,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 17,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 17,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 12,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 12,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 13,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 13,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 14,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 14,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 15,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 15,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 11,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 11,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 23,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 23,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 20,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 20,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 24,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 24,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 18,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 18,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 19,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 19,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 21,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 21,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 59,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 59,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 65,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 65,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 66,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 66,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 67,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 67,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 25,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 25,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "P1",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 26,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 26,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "P1",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 28,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 28,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "P1",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 27,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 27,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "P1",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 30,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 30,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "P1",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 29,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 29,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "T9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 31,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 31,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "T9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 68,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 68,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "T9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 70,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 29,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "T9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 71,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 31,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "T9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 72,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 68,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "T9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 47,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 47,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 48,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 48,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "96",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 51,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 51,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 49,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 49,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "96",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 32,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 32,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 33,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 39,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 39,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 34,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 40,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 40,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 35,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 35,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 36,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 36,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 37,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 37,
                            LicensedToProvideCare = false,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 41,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 42,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 45,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 43,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 46,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 46,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 52,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 52,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 53,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 53,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 55,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 55,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 54,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 54,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 60,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 60,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 61,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 61,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 62,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 62,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 63,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 63,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 69,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 69,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 89,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 70,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "95",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 90,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 71,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 91,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 72,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 92,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 73,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 93,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 74,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 73,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 32,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 74,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 75,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 76,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 39,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 77,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 78,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 79,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 80,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 81,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 52,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 82,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 53,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 83,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 54,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 84,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 55,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 85,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 60,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 86,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 61,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 87,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 62,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 88,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 2, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 63,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 94,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 32,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 95,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 96,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 97,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 39,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 98,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 99,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 100,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 101,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 102,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 52,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 103,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 53,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 104,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 54,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 105,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 55,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 106,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 60,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 107,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 61,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 108,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 63,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 109,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 62,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 110,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 5, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 48,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "96",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 111,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 59,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 112,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 65,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 113,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 66,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 114,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 67,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 115,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 70,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "95",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 116,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 75,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "95",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 117,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 76,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "95",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 118,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 77,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "95",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 119,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 78,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "97",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 120,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 79,
                            LicensedToProvideCare = false,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "97",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 121,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 80,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "97",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 122,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 6, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 81,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "97",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 64,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2019, 9, 16, 7, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 64,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 123,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 1,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 124,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 2,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 125,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 3,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 126,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 4,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 127,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 5,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 128,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 6,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 129,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 8,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 130,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 9,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 131,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 10,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 132,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 12,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 133,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 13,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 134,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 14,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 135,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 18,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 136,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 19,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 137,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 22,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "91",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 138,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 47,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 139,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 48,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "96",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 140,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 51,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 141,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 59,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 142,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 60,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 143,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 61,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 144,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 62,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 145,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 66,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 146,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 7, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 67,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 147,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 148,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 149,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 150,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 151,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 1, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 46,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 152,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 65,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "93",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 153,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 32,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 154,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 155,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 156,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 35,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 157,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 36,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 158,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 37,
                            LicensedToProvideCare = false,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 159,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 39,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 160,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 161,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 162,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 163,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 164,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 46,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 165,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 47,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "96",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 166,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 48,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "96",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 167,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 49,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "96",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 168,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 51,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "96",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 169,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 52,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 170,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 53,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 171,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 54,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "L9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 172,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 55,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 173,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 60,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 174,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 61,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 175,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 62,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 176,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 5, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 63,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "98",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 177,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 47,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 178,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 48,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 179,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 49,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 180,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 51,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 181,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 32,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 182,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 183,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 184,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 35,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 185,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 36,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 186,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 37,
                            LicensedToProvideCare = false,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 187,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 39,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 188,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 40,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 189,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 190,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 191,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 192,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 1,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 193,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 8, 10, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 46,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 194,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 41,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 195,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 42,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 196,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 45,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 197,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 47,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 198,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 48,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 199,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 51,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 200,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 60,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 201,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 61,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 202,
                            AllowRequestRemoteAccess = true,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2022, 9, 6, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 62,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 203,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 32,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 204,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 205,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 206,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 35,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 207,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 36,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 208,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 37,
                            LicensedToProvideCare = false,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 209,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 39,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 210,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 40,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 211,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 212,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 46,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 213,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 49,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 214,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 52,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 215,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 53,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 216,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 54,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 217,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 55,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 218,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 2, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 63,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 219,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 33,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 220,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 34,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 221,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 35,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 222,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 36,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 223,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 37,
                            LicensedToProvideCare = false,
                            Manual = false,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 224,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 40,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "RX",
                            Prefix = "R9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 225,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 43,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 226,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 46,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            NonPrescribingPrefix = "YX",
                            Prefix = "Y9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 227,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 49,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            NonPrescribingPrefix = "NX",
                            Prefix = "96",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 228,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 52,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 229,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 53,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = false,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 230,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 54,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 231,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 55,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "L9",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 232,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 3, 15, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 63,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = true,
                            Prefix = "98",
                            PrescriberIdType = 2,
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 233,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 6, 9, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 82,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 234,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 6, 9, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 83,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 235,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 6, 9, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 84,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 236,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 6, 9, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 85,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 237,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 6, 9, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 86,
                            LicensedToProvideCare = false,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = false
                        },
                        new
                        {
                            Id = 261,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 8, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 72,
                            LicensedToProvideCare = true,
                            Manual = false,
                            NamedInImReg = true,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 262,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 8, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 73,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        },
                        new
                        {
                            Id = 263,
                            AllowRequestRemoteAccess = false,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTime(2023, 8, 2, 8, 0, 0, 0, DateTimeKind.Utc),
                            LicenseCode = 74,
                            LicensedToProvideCare = true,
                            Manual = true,
                            NamedInImReg = false,
                            Prefix = "94",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Validate = true
                        });
                });

            modelBuilder.Entity("Prime.Models.LimitsConditionsClause", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("EffectiveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("LimitsConditionsClause");
                });

            modelBuilder.Entity("Prime.Models.OboSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CareSettingCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("FacilityName")
                        .HasColumnType("text");

                    b.Property<int?>("HealthAuthorityCode")
                        .HasColumnType("integer");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PhysicalAddressId")
                        .HasColumnType("integer");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CareSettingCode");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("HealthAuthorityCode");

                    b.HasIndex("PhysicalAddressId");

                    b.ToTable("OboSite");
                });

            modelBuilder.Entity("Prime.Models.OpcMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("CertificationNumber")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Clinic")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Discipline")
                        .HasColumnType("text");

                    b.Property<string>("FullClinicAddress")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<string>("MemberType")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("StateProvince")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("OpcMember");
                });

            modelBuilder.Entity("Prime.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DoingBusinessAs")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool>("PendingTransfer")
                        .HasColumnType("boolean");

                    b.Property<string>("RegistrationId")
                        .HasColumnType("text");

                    b.Property<int>("SigningAuthorityId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("SubmittedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SigningAuthorityId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Prime.Models.OrganizationClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<int>("NewSigningAuthorityId")
                        .HasColumnType("integer");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<string>("ProvidedSiteId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("NewSigningAuthorityId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationClaim");
                });

            modelBuilder.Entity("Prime.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GivenNames")
                        .HasColumnType("text");

                    b.Property<string>("HPDID")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("JobRoleTitle")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("text");

                    b.Property<string>("PreferredFirstName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredLastName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredMiddleName")
                        .HasColumnType("text");

                    b.Property<string>("SMSPhone")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Party");
                });

            modelBuilder.Entity("Prime.Models.PartyAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("PartyId", "AddressId")
                        .IsUnique();

                    b.ToTable("PartyAddress");
                });

            modelBuilder.Entity("Prime.Models.PartyCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CollegeCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("LicenseCode")
                        .HasColumnType("integer");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int?>("PracticeCode")
                        .HasColumnType("integer");

                    b.Property<string>("PractitionerId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("RenewalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CollegeCode");

                    b.HasIndex("LicenseCode");

                    b.HasIndex("PartyId");

                    b.HasIndex("PracticeCode");

                    b.ToTable("PartyCertification");
                });

            modelBuilder.Entity("Prime.Models.PartyEnrolment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("PartyType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("PartyEnrolment");
                });

            modelBuilder.Entity("Prime.Models.PartySubmission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("SubmissionType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("PartySubmission");
                });

            modelBuilder.Entity("Prime.Models.PharmanetTransactionLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CollegePrefix")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("current_timestamp");

                    b.Property<string>("LocationIpAddress")
                        .HasColumnType("text");

                    b.Property<string>("PharmacyId")
                        .HasColumnType("text");

                    b.Property<string>("PractitionerId")
                        .HasColumnType("text");

                    b.Property<string>("ProviderSoftwareId")
                        .HasColumnType("text");

                    b.Property<string>("ProviderSoftwareVersion")
                        .HasColumnType("text");

                    b.Property<string>("SourceIpAddress")
                        .HasColumnType("text");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionOutcome")
                        .HasColumnType("text");

                    b.Property<string>("TransactionSubType")
                        .HasColumnType("text");

                    b.Property<string>("TransactionType")
                        .HasColumnType("text");

                    b.Property<DateTime>("TxDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PharmacyId");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.HasIndex("TxDateTime");

                    b.HasIndex("UserId");

                    b.ToTable("PharmanetTransactionLog");
                });

            modelBuilder.Entity("Prime.Models.Plr.CollegeForPlrRoleType", b =>
                {
                    b.Property<string>("ProviderRoleType")
                        .HasColumnType("text");

                    b.Property<int>("CollegeCode")
                        .HasColumnType("integer");

                    b.HasKey("ProviderRoleType");

                    b.ToTable("CollegeForPlrRoleType");

                    b.HasData(
                        new
                        {
                            ProviderRoleType = "RN",
                            CollegeCode = 3
                        },
                        new
                        {
                            ProviderRoleType = "RNP",
                            CollegeCode = 3
                        },
                        new
                        {
                            ProviderRoleType = "RPN",
                            CollegeCode = 3
                        },
                        new
                        {
                            ProviderRoleType = "PHARM",
                            CollegeCode = 2
                        },
                        new
                        {
                            ProviderRoleType = "PO",
                            CollegeCode = 1
                        },
                        new
                        {
                            ProviderRoleType = "RAC",
                            CollegeCode = 18
                        },
                        new
                        {
                            ProviderRoleType = "RM",
                            CollegeCode = 3
                        },
                        new
                        {
                            ProviderRoleType = "LPN",
                            CollegeCode = 3
                        },
                        new
                        {
                            ProviderRoleType = "MD",
                            CollegeCode = 1
                        },
                        new
                        {
                            ProviderRoleType = "OPT",
                            CollegeCode = 14
                        },
                        new
                        {
                            ProviderRoleType = "DEN",
                            CollegeCode = 7
                        },
                        new
                        {
                            ProviderRoleType = "OT",
                            CollegeCode = 12
                        },
                        new
                        {
                            ProviderRoleType = "PSYCH",
                            CollegeCode = 16
                        },
                        new
                        {
                            ProviderRoleType = "CHIRO",
                            CollegeCode = 4
                        },
                        new
                        {
                            ProviderRoleType = "PHYSIO",
                            CollegeCode = 15
                        },
                        new
                        {
                            ProviderRoleType = "RMT",
                            CollegeCode = 10
                        },
                        new
                        {
                            ProviderRoleType = "PTECH",
                            CollegeCode = 2
                        },
                        new
                        {
                            ProviderRoleType = "RD",
                            CollegeCode = 9
                        },
                        new
                        {
                            ProviderRoleType = "ND",
                            CollegeCode = 11
                        });
                });

            modelBuilder.Entity("Prime.Models.Plr.PlrExpertise", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("PlrExpertiseLookup");

                    b.HasData(
                        new
                        {
                            Code = "MS",
                            Name = "Management Studies"
                        },
                        new
                        {
                            Code = "NON-SPEC",
                            Name = "Non-Specialist"
                        },
                        new
                        {
                            Code = "NUCRX",
                            Name = "Nuclear Pharmacy"
                        },
                        new
                        {
                            Code = "NUTRX",
                            Name = "Nutrition Pharmacy"
                        },
                        new
                        {
                            Code = "ONCRX",
                            Name = "Oncology Pharmacy"
                        },
                        new
                        {
                            Code = "OP",
                            Name = "Oral Medicine and Oral Pathology"
                        },
                        new
                        {
                            Code = "ORD",
                            Name = "Oral and Maxillofacial Radiology"
                        },
                        new
                        {
                            Code = "ORTH",
                            Name = "Orthodontics"
                        },
                        new
                        {
                            Code = "OS",
                            Name = "Oral Maxillofacial Surgery"
                        },
                        new
                        {
                            Code = "PED",
                            Name = "Pediatric Dentistry"
                        },
                        new
                        {
                            Code = "PER",
                            Name = "Periodontics"
                        },
                        new
                        {
                            Code = "PHPHARM",
                            Name = "Pharmacotherapy"
                        },
                        new
                        {
                            Code = "PRO",
                            Name = "Prosthodontics"
                        },
                        new
                        {
                            Code = "PSYRX",
                            Name = "Psychiatric Pharmacy"
                        },
                        new
                        {
                            Code = "SMD1",
                            Name = "Addiction Medicine"
                        },
                        new
                        {
                            Code = "SMD10",
                            Name = "Certified Independent Medical Examiner"
                        },
                        new
                        {
                            Code = "SMD100",
                            Name = "Medical Disorders of Pregnancy"
                        },
                        new
                        {
                            Code = "LPNOR",
                            Name = "Operating Room"
                        },
                        new
                        {
                            Code = "SMD101",
                            Name = "Cardiovascular Disease"
                        },
                        new
                        {
                            Code = "SMD104",
                            Name = "Chemical, Biological, Radiological and Nuclear Warfare Medicine"
                        },
                        new
                        {
                            Code = "SMD11",
                            Name = "Chemical Dependency"
                        },
                        new
                        {
                            Code = "SMD12",
                            Name = "Child and Adolescent Psychiatry"
                        },
                        new
                        {
                            Code = "SMD13",
                            Name = "Chronic Pain Management"
                        },
                        new
                        {
                            Code = "SMD14",
                            Name = "Clinical Hypnosis"
                        },
                        new
                        {
                            Code = "SMD15",
                            Name = "Colon & Rectal Surgery"
                        },
                        new
                        {
                            Code = "SMD16",
                            Name = "Corneal & Extraocular Disease"
                        },
                        new
                        {
                            Code = "SMD17",
                            Name = "Counseling"
                        },
                        new
                        {
                            Code = "SMD18",
                            Name = "Critical Care Medicine"
                        },
                        new
                        {
                            Code = "SMD19",
                            Name = "Dermatology"
                        },
                        new
                        {
                            Code = "SMD2",
                            Name = "Adolescent Medicine"
                        },
                        new
                        {
                            Code = "CCFPEM",
                            Name = "Certificant; CFPC(E.M.)"
                        },
                        new
                        {
                            Code = "CMCE",
                            Name = "Community Medicine Certification"
                        },
                        new
                        {
                            Code = "CTI",
                            Name = "Computed Tomography Imaging"
                        },
                        new
                        {
                            Code = "DPH",
                            Name = "Dental Public Health"
                        },
                        new
                        {
                            Code = "DS",
                            Name = "Dental Sciences"
                        },
                        new
                        {
                            Code = "END",
                            Name = "Endodontics"
                        },
                        new
                        {
                            Code = "ERN1",
                            Name = "General Medicine"
                        },
                        new
                        {
                            Code = "ERN10",
                            Name = "Critical/ Intensive Care"
                        },
                        new
                        {
                            Code = "ERN11",
                            Name = "Occupational Health"
                        },
                        new
                        {
                            Code = "ERN12",
                            Name = "Home Care"
                        },
                        new
                        {
                            Code = "ERN13",
                            Name = "Geriatric / Long Term Care"
                        },
                        new
                        {
                            Code = "ERN14",
                            Name = "Community Health"
                        },
                        new
                        {
                            Code = "ERN15",
                            Name = "Ambulatory Care"
                        },
                        new
                        {
                            Code = "ERN16",
                            Name = "Nursing Administration"
                        },
                        new
                        {
                            Code = "ERN17",
                            Name = "Teaching"
                        },
                        new
                        {
                            Code = "ERN18",
                            Name = "Research"
                        },
                        new
                        {
                            Code = "ERN19",
                            Name = "Telehealth"
                        },
                        new
                        {
                            Code = "ERN2",
                            Name = "General Surgery"
                        },
                        new
                        {
                            Code = "CCFP",
                            Name = "Certificant; CFPC"
                        },
                        new
                        {
                            Code = "ERN3",
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Code = "ERN4",
                            Name = "Maternal / Newborn"
                        },
                        new
                        {
                            Code = "ERN5",
                            Name = "Psychiatric/ Mental Health"
                        },
                        new
                        {
                            Code = "ERN6",
                            Name = "Oncology"
                        },
                        new
                        {
                            Code = "ERN7",
                            Name = "Rehabilitation"
                        },
                        new
                        {
                            Code = "ERN8",
                            Name = "Operating / Recovery Room"
                        },
                        new
                        {
                            Code = "ERN9",
                            Name = "Emergency Care/ Prehospital"
                        },
                        new
                        {
                            Code = "GPDEN",
                            Name = "General Practice"
                        },
                        new
                        {
                            Code = "GPMD",
                            Name = "General Practice"
                        },
                        new
                        {
                            Code = "GPPHARM",
                            Name = "General Practice"
                        },
                        new
                        {
                            Code = "LPNDIAL",
                            Name = "Dialysis"
                        },
                        new
                        {
                            Code = "LPNIMMUN",
                            Name = "Immunization"
                        },
                        new
                        {
                            Code = "AMD35",
                            Name = "Nuclear Medicine - Full"
                        },
                        new
                        {
                            Code = "AMD36",
                            Name = "Sleep Interpreter - Respiratory Dis."
                        },
                        new
                        {
                            Code = "AMD37",
                            Name = "Magnetic Resonance - Limited"
                        },
                        new
                        {
                            Code = "AMD38",
                            Name = "Pulm Director - Level II"
                        },
                        new
                        {
                            Code = "AMD39",
                            Name = "Pulm Director - Level III"
                        },
                        new
                        {
                            Code = "AMD4",
                            Name = "Craniosacral Therapy(Complementary)"
                        },
                        new
                        {
                            Code = "AMD40",
                            Name = "Pulm Director - Level IV"
                        },
                        new
                        {
                            Code = "AMD41",
                            Name = "Sleep Director -Full"
                        },
                        new
                        {
                            Code = "AMD42",
                            Name = "Sleep Director - Pediatric Disorders"
                        },
                        new
                        {
                            Code = "AMD43",
                            Name = "Sleep Director - Respiratory Disorders"
                        },
                        new
                        {
                            Code = "AMD44",
                            Name = "Homeopathy (Complementary)"
                        },
                        new
                        {
                            Code = "AMD45",
                            Name = "Ultrasound - Obstetrical / Gynecology"
                        },
                        new
                        {
                            Code = "AMD46",
                            Name = "Echocardiography -Restricted"
                        },
                        new
                        {
                            Code = "AMD47",
                            Name = "Ultasound - Non-Specialist"
                        },
                        new
                        {
                            Code = "AMD48",
                            Name = "Nuclear Medicine - Restricted"
                        },
                        new
                        {
                            Code = "AMD49",
                            Name = "Addiction Medicine"
                        },
                        new
                        {
                            Code = "AMD5",
                            Name = "Doctor of Osteopathy"
                        },
                        new
                        {
                            Code = "AMD50",
                            Name = "Customized Nutritional Therapy(Comp.)"
                        },
                        new
                        {
                            Code = "AMD51",
                            Name = "Ultrasound -Abortion Transvaginal"
                        },
                        new
                        {
                            Code = "AMD52",
                            Name = "Ultrasound - Abortion Trans - abdominal"
                        },
                        new
                        {
                            Code = "AMD53",
                            Name = "Anti-Aging Medicine(Complementary)"
                        },
                        new
                        {
                            Code = "AMD54",
                            Name = "Primordial Sound Meditation(Complementary)"
                        },
                        new
                        {
                            Code = "AMD55",
                            Name = "Ayurveda(Complementary)"
                        },
                        new
                        {
                            Code = "AMD56",
                            Name = "Fluoroscopically-guided needle placements"
                        },
                        new
                        {
                            Code = "AMD57",
                            Name = "Magnetic Resonance - Cardiac"
                        },
                        new
                        {
                            Code = "AMD58",
                            Name = "PET -Positron Emission Tomography"
                        },
                        new
                        {
                            Code = "AMD6",
                            Name = "Electrocardiogram"
                        },
                        new
                        {
                            Code = "AMD7",
                            Name = "Electroencephalography"
                        },
                        new
                        {
                            Code = "AMD8",
                            Name = "Electromyography"
                        },
                        new
                        {
                            Code = "AMD9",
                            Name = "Evoked Potential Auditory"
                        },
                        new
                        {
                            Code = "BI",
                            Name = "Breast Imaging"
                        },
                        new
                        {
                            Code = "A225",
                            Name = "Max / Fax Surgery"
                        },
                        new
                        {
                            Code = " A240",
                            Name = "Medical Imaging"
                        },
                        new
                        {
                            Code = "A385",
                            Name = "Pulmonary Diseases"
                        },
                        new
                        {
                            Code = "AMD1",
                            Name = "Acupuncture"
                        },
                        new
                        {
                            Code = "AMD10",
                            Name = "Evoked Potential Somatosensory"
                        },
                        new
                        {
                            Code = "AMD11",
                            Name = "Evoked Potential Visual"
                        },
                        new
                        {
                            Code = "AMD12",
                            Name = "Evoked Potential(EP)"
                        },
                        new
                        {
                            Code = "AMD13",
                            Name = "Functional Medicine(Complementary)"
                        },
                        new
                        {
                            Code = "AMD14",
                            Name = "Herbal Therapy(Complementary)"
                        },
                        new
                        {
                            Code = "AMD15",
                            Name = "Kinesiology(Complementary)"
                        },
                        new
                        {
                            Code = "AMD16",
                            Name = "Magnetic Resonance - Full"
                        },
                        new
                        {
                            Code = "AMD17",
                            Name = "Cardiac Nuclear Imaging"
                        },
                        new
                        {
                            Code = "AMD18",
                            Name = "Nuclear Medicine - Limited"
                        },
                        new
                        {
                            Code = "AMD19",
                            Name = "Ultrasound - Opthalmology"
                        },
                        new
                        {
                            Code = "AMD2",
                            Name = "Echocardiography -Full Adult"
                        },
                        new
                        {
                            Code = "AMD20",
                            Name = "Echocardiography - Full Pediatric"
                        },
                        new
                        {
                            Code = "AMD21",
                            Name = "Pulm Interpretation-Level II"
                        },
                        new
                        {
                            Code = "AMD22",
                            Name = "Pulm Interpretation-Level III"
                        },
                        new
                        {
                            Code = "AMD23",
                            Name = "Pulm Interpretation-Level IV"
                        },
                        new
                        {
                            Code = "AMD24",
                            Name = "Reiki Therapy(Complementary)"
                        },
                        new
                        {
                            Code = "AMD25",
                            Name = "Thought Field Therapy(Complementary)"
                        },
                        new
                        {
                            Code = "AMD26",
                            Name = "Transcendental Meditation(Comp.)"
                        },
                        new
                        {
                            Code = "AMD27",
                            Name = "Echocardiography -Transesophageal"
                        },
                        new
                        {
                            Code = "AMD28",
                            Name = "Trigger Point Therapy"
                        },
                        new
                        {
                            Code = "AMD29",
                            Name = "Ultrasound -Full"
                        },
                        new
                        {
                            Code = "AMD3",
                            Name = "Cardiac Stress Testing"
                        },
                        new
                        {
                            Code = "AMD30",
                            Name = "Ultrasound -Urology"
                        },
                        new
                        {
                            Code = "AMD31",
                            Name = "Ultrasound -Vascular"
                        },
                        new
                        {
                            Code = "AMD32",
                            Name = "Vestibular Testing - Director"
                        },
                        new
                        {
                            Code = "AMD33",
                            Name = "Vestibular Testing - Interpretor"
                        },
                        new
                        {
                            Code = "AMD34",
                            Name = "Chelation Therapy(Complementary)"
                        },
                        new
                        {
                            Code = "480",
                            Name = "Thoracic Surgery(Gen.Sur.)"
                        },
                        new
                        {
                            Code = "481",
                            Name = "Thoracic Surgery(General / Cardiac)"
                        },
                        new
                        {
                            Code = "490",
                            Name = "Vascular Surgery"
                        },
                        new
                        {
                            Code = "510",
                            Name = "Clinical Pharmacology"
                        },
                        new
                        {
                            Code = "512",
                            Name = "Colorectal Surgery"
                        },
                        new
                        {
                            Code = "515",
                            Name = "Critical Care medicine"
                        },
                        new
                        {
                            Code = "520",
                            Name = "General Surgical Oncology"
                        },
                        new
                        {
                            Code = "530",
                            Name = "Gynecology Oncology"
                        },
                        new
                        {
                            Code = "535",
                            Name = "Gynecology Reprod. Endocrin. & Infert."
                        },
                        new
                        {
                            Code = "540",
                            Name = "Transfusion Medicine"
                        },
                        new
                        {
                            Code = "545",
                            Name = "Maternal - Fetal Medicine"
                        },
                        new
                        {
                            Code = "550",
                            Name = "Clinician Investigator Program"
                        },
                        new
                        {
                            Code = "555",
                            Name = "Neonatal - Perinatal Medicine"
                        },
                        new
                        {
                            Code = "560",
                            Name = "Neuroradiology"
                        },
                        new
                        {
                            Code = "570",
                            Name = "Palliative Medicine"
                        },
                        new
                        {
                            Code = "580",
                            Name = "Pediatric Radiology"
                        },
                        new
                        {
                            Code = "582",
                            Name = "Pediatric Emergency Medicine"
                        },
                        new
                        {
                            Code = "584",
                            Name = "Developmental Pediatrics"
                        },
                        new
                        {
                            Code = "474",
                            Name = "Rheumatology(Int.Med or Ped.)"
                        },
                        new
                        {
                            Code = "900",
                            Name = "Pediatric Gastroenterology"
                        },
                        new
                        {
                            Code = "905",
                            Name = "Pediatric Nephrology"
                        },
                        new
                        {
                            Code = "910",
                            Name = "Pediatric Neurology"
                        },
                        new
                        {
                            Code = "915",
                            Name = "Pediatric Cardiovascular Surgery"
                        },
                        new
                        {
                            Code = "A110",
                            Name = "Administrative Medicine"
                        },
                        new
                        {
                            Code = "A115",
                            Name = "Adolescent Medicine"
                        },
                        new
                        {
                            Code = "A120",
                            Name = "Allergy"
                        },
                        new
                        {
                            Code = "A130",
                            Name = "Aviation Medicine"
                        },
                        new
                        {
                            Code = "A135",
                            Name = "Behavioral Therapy"
                        },
                        new
                        {
                            Code = "A140",
                            Name = "Child Health"
                        },
                        new
                        {
                            Code = "A145",
                            Name = "Cytopathology"
                        },
                        new
                        {
                            Code = "A155",
                            Name = "Epidemiology"
                        },
                        new
                        {
                            Code = "A160",
                            Name = "Family Medicine"
                        },
                        new
                        {
                            Code = "315",
                            Name = "General Surgery"
                        },
                        new
                        {
                            Code = "319",
                            Name = "Gynecology"
                        },
                        new
                        {
                            Code = "320",
                            Name = "Obstetrics"
                        },
                        new
                        {
                            Code = "325",
                            Name = "Medical Scientist(Surgery)"
                        },
                        new
                        {
                            Code = "329",
                            Name = "Neurosurgery"
                        },
                        new
                        {
                            Code = "331",
                            Name = "No Specialty(Surgery)"
                        },
                        new
                        {
                            Code = "336",
                            Name = "Obstetrics and Gynecology"
                        },
                        new
                        {
                            Code = "338",
                            Name = "Ophthalmology"
                        },
                        new
                        {
                            Code = "340",
                            Name = "Orthopedic Surgery"
                        },
                        new
                        {
                            Code = "342",
                            Name = "Otolaryngology"
                        },
                        new
                        {
                            Code = "345",
                            Name = "Plastic Surgery"
                        },
                        new
                        {
                            Code = "348",
                            Name = "Principles of Surgery"
                        },
                        new
                        {
                            Code = "354",
                            Name = "Thoracic Surgery"
                        },
                        new
                        {
                            Code = "355",
                            Name = "Thoracic Surgery"
                        },
                        new
                        {
                            Code = "356",
                            Name = "Cardiac Surgery"
                        },
                        new
                        {
                            Code = "360",
                            Name = "Urology"
                        },
                        new
                        {
                            Code = "405",
                            Name = "Cardiology(Int.Med.or Ped.)"
                        },
                        new
                        {
                            Code = "409",
                            Name = "Clinical Imm. Allergy(Int.Med.or Ped.)"
                        },
                        new
                        {
                            Code = "305",
                            Name = "Cardiovascular and Thoracic Surgery"
                        },
                        new
                        {
                            Code = "411",
                            Name = "Critical Care Medicine"
                        },
                        new
                        {
                            Code = "415",
                            Name = "Endocrin.Metabolism(Int.Med.or Ped.)"
                        },
                        new
                        {
                            Code = "417",
                            Name = "Forensic Pathology(Anatomical/ General)"
                        },
                        new
                        {
                            Code = "420",
                            Name = "Gastroenterology(Int.Med.or Ped.)"
                        },
                        new
                        {
                            Code = "425",
                            Name = "Geriatric Medicine(Int.Med.)"
                        },
                        new
                        {
                            Code = "430",
                            Name = "Hematology(Int.Med or Ped.)"
                        },
                        new
                        {
                            Code = "431",
                            Name = "Pediatric Hemat./ Onc. (Pediatrics)"
                        },
                        new
                        {
                            Code = "432",
                            Name = "Neuropathology"
                        },
                        new
                        {
                            Code = "435",
                            Name = "Infectious Diseases(Int.Med or Ped.)"
                        },
                        new
                        {
                            Code = "452",
                            Name = "Medical Oncology(Int.Med.)"
                        },
                        new
                        {
                            Code = "460",
                            Name = "Nephrology(Int.Med or Ped.)"
                        },
                        new
                        {
                            Code = "465",
                            Name = "Pediatric General Surgery"
                        },
                        new
                        {
                            Code = "472",
                            Name = "Respirology(Int.Med.or Ped.)"
                        },
                        new
                        {
                            Code = "118",
                            Name = "Diagnostic and Therapeutic Radiology"
                        },
                        new
                        {
                            Code = "122",
                            Name = "Emergency Medicine"
                        },
                        new
                        {
                            Code = "126",
                            Name = "Gastroenterology"
                        },
                        new
                        {
                            Code = "130",
                            Name = "Hematology"
                        },
                        new
                        {
                            Code = "136",
                            Name = "Internal Medicine"
                        },
                        new
                        {
                            Code = "140",
                            Name = "Medical Scientist(Medicine)"
                        },
                        new
                        {
                            Code = "145",
                            Name = "Neurology"
                        },
                        new
                        {
                            Code = "146",
                            Name = "Neurology and/ or Psychiatry"
                        },
                        new
                        {
                            Code = "149",
                            Name = "No Specialty(Medicine)"
                        },
                        new
                        {
                            Code = "150",
                            Name = "Medical Genetics"
                        },
                        new
                        {
                            Code = "151",
                            Name = "Nuclear Medicine"
                        },
                        new
                        {
                            Code = "152",
                            Name = "Urological Oncology"
                        },
                        new
                        {
                            Code = "153",
                            Name = "Paediatric Oncology"
                        },
                        new
                        {
                            Code = "154",
                            Name = "Community Oncology"
                        },
                        new
                        {
                            Code = "155",
                            Name = "Occupational Medicine"
                        },
                        new
                        {
                            Code = "159",
                            Name = "Pediatric Cardiology"
                        },
                        new
                        {
                            Code = "160",
                            Name = "Pediatrics"
                        },
                        new
                        {
                            Code = "162",
                            Name = "Physical Medicine Rehabilitation"
                        },
                        new
                        {
                            Code = "165",
                            Name = "Psychiatry"
                        },
                        new
                        {
                            Code = "168",
                            Name = "Public Health"
                        },
                        new
                        {
                            Code = "172",
                            Name = "Radiation Oncology"
                        },
                        new
                        {
                            Code = "176",
                            Name = "Respirology"
                        },
                        new
                        {
                            Code = "180",
                            Name = "Rheumatology"
                        },
                        new
                        {
                            Code = "190",
                            Name = "Therapeutic Radiology"
                        },
                        new
                        {
                            Code = "202",
                            Name = "Anatomical Pathology"
                        },
                        new
                        {
                            Code = "210",
                            Name = "General Pathology"
                        },
                        new
                        {
                            Code = "215",
                            Name = "Hematological Pathology"
                        },
                        new
                        {
                            Code = "225",
                            Name = "Medical Biochemistry"
                        },
                        new
                        {
                            Code = "227",
                            Name = "Medical Microbiology"
                        },
                        new
                        {
                            Code = "232",
                            Name = "Neuropathology"
                        },
                        new
                        {
                            Code = "240",
                            Name = "Pathology and Bacteriology"
                        },
                        new
                        {
                            Code = "302",
                            Name = "Cardiothoracic Surgery"
                        },
                        new
                        {
                            Code = "15 ",
                            Name = "Malignant Disease Specialist"
                        },
                        new
                        {
                            Code = "101",
                            Name = "Anaesthesia"
                        },
                        new
                        {
                            Code = "105",
                            Name = "Cardiology"
                        },
                        new
                        {
                            Code = "107",
                            Name = "Clinical Immunology"
                        },
                        new
                        {
                            Code = "108",
                            Name = "Clinical Immunology and Allergy"
                        },
                        new
                        {
                            Code = "110",
                            Name = "Community Medicine"
                        },
                        new
                        {
                            Code = "115",
                            Name = "Dermatology"
                        },
                        new
                        {
                            Code = "117",
                            Name = "Diagnostic Radiology"
                        },
                        new
                        {
                            Code = "SMD77",
                            Name = "Pediatric Rheumatology"
                        },
                        new
                        {
                            Code = "SMD78",
                            Name = "Perinatology"
                        },
                        new
                        {
                            Code = "SMD79",
                            Name = "Phlebology"
                        },
                        new
                        {
                            Code = "SMD8",
                            Name = "Breastfeeding"
                        },
                        new
                        {
                            Code = "SMD80",
                            Name = "Phlebology / Sclerotherapy"
                        },
                        new
                        {
                            Code = "SMD81",
                            Name = "Psychiatry"
                        },
                        new
                        {
                            Code = "SMD82",
                            Name = "Psychological Disorders"
                        },
                        new
                        {
                            Code = "SMD83",
                            Name = "Psychotherapy"
                        },
                        new
                        {
                            Code = "SMD84",
                            Name = "Psychotherapy / Hypnotherapy"
                        },
                        new
                        {
                            Code = "SMD85",
                            Name = "Psychotherapy: Indiv.Fam. & Marital"
                        },
                        new
                        {
                            Code = "SMD86",
                            Name = "Reproductive Endocrinology"
                        },
                        new
                        {
                            Code = "SMD87",
                            Name = "Sclerotherapy of Varicose Veins"
                        },
                        new
                        {
                            Code = "SMD88",
                            Name = "Shoulder Surgery"
                        },
                        new
                        {
                            Code = "SMD89",
                            Name = "Sleep Disorders Medicine"
                        },
                        new
                        {
                            Code = "SMD9",
                            Name = "Cardiac Rhythm Disturbances Pacemaker"
                        },
                        new
                        {
                            Code = "SMD90",
                            Name = "Sport Medicine"
                        },
                        new
                        {
                            Code = "SMD91",
                            Name = "Travel Medicine"
                        },
                        new
                        {
                            Code = "SMD92",
                            Name = "Treatment of Stress Disorders"
                        },
                        new
                        {
                            Code = "SMD93",
                            Name = "Uro - oncology"
                        },
                        new
                        {
                            Code = "SMD94",
                            Name = "Urogynecology"
                        },
                        new
                        {
                            Code = "SMD95",
                            Name = "Non-Spine Musculoskeletal Conditions"
                        },
                        new
                        {
                            Code = "SMD96",
                            Name = "Burn Surgery"
                        },
                        new
                        {
                            Code = "SMD97",
                            Name = "Speech and Hearing Disorders"
                        },
                        new
                        {
                            Code = "SMD98",
                            Name = "Oncological Surgery Liver and Pancreas"
                        },
                        new
                        {
                            Code = "SMD99",
                            Name = "Child and Maternal Health"
                        },
                        new
                        {
                            Code = "SMD5",
                            Name = "Arthro.And Reconstruct. Joint Surgery"
                        },
                        new
                        {
                            Code = "SMD50",
                            Name = "Knee Surgery"
                        },
                        new
                        {
                            Code = "SMD51",
                            Name = "Laparoscopic General Surgery"
                        },
                        new
                        {
                            Code = "SMD52",
                            Name = "Laser Surgery"
                        },
                        new
                        {
                            Code = "SMD53",
                            Name = "Mammography"
                        },
                        new
                        {
                            Code = "SMD54",
                            Name = "Maternity Care & Diseases of Females"
                        },
                        new
                        {
                            Code = "SMD55",
                            Name = "Medical Genetics"
                        },
                        new
                        {
                            Code = "SMD56",
                            Name = "Neonatology"
                        },
                        new
                        {
                            Code = "SMD57",
                            Name = "Neuro - ophthalmology"
                        },
                        new
                        {
                            Code = "SMD58",
                            Name = "Neuro-otology"
                        },
                        new
                        {
                            Code = "SMD59",
                            Name = "Neuroanesthesia"
                        },
                        new
                        {
                            Code = "SMD6",
                            Name = "Arthro. And Recon. Surg. (Knee / Shoulder)"
                        },
                        new
                        {
                            Code = "SMD60",
                            Name = "Nutrition"
                        },
                        new
                        {
                            Code = "SMD61",
                            Name = "Obstetrics &Gynecology"
                        },
                        new
                        {
                            Code = "SMD62",
                            Name = "Occupation Related Medical Disorders"
                        },
                        new
                        {
                            Code = "SMD63",
                            Name = "Occupational & Aviation Medicine"
                        },
                        new
                        {
                            Code = "SMD64",
                            Name = "Occupational Health"
                        },
                        new
                        {
                            Code = "SMD65",
                            Name = "Occupational Medicine"
                        },
                        new
                        {
                            Code = "SMD49",
                            Name = "Knee & Leg Surgery"
                        },
                        new
                        {
                            Code = "SMD66",
                            Name = "Occupational Ortho. Clinical Impairment"
                        },
                        new
                        {
                            Code = "SMD67",
                            Name = "Oculo-Plastics"
                        },
                        new
                        {
                            Code = "SMD68",
                            Name = "Ophthalmology"
                        },
                        new
                        {
                            Code = "SMD69",
                            Name = "OrthopedicSports Medicine in Children"
                        },
                        new
                        {
                            Code = "SMD7",
                            Name = "Aviation Medicine"
                        },
                        new
                        {
                            Code = "SMD70",
                            Name = "Orthopedic Traumatology"
                        },
                        new
                        {
                            Code = "SMD71",
                            Name = "Pain Management"
                        },
                        new
                        {
                            Code = "SMD72",
                            Name = "Pediatric &Adolescent Gynecology"
                        },
                        new
                        {
                            Code = "SMD73",
                            Name = "Pediatric Ophthamology Adult Strabismus"
                        },
                        new
                        {
                            Code = "SMD74",
                            Name = "Pediatric Orthopedic Surgery"
                        },
                        new
                        {
                            Code = "SMD75",
                            Name = "Pediatric Orthopedics"
                        },
                        new
                        {
                            Code = "SMD76",
                            Name = "Pediatric Otolaryngology"
                        },
                        new
                        {
                            Code = "SMD21",
                            Name = "Diabetes"
                        },
                        new
                        {
                            Code = "SMD22",
                            Name = "Diseases of Children"
                        },
                        new
                        {
                            Code = "SMD23",
                            Name = "Diseases of the Colon and Rectum"
                        },
                        new
                        {
                            Code = "SMD24",
                            Name = "Diseases of the Eye"
                        },
                        new
                        {
                            Code = "SMD25",
                            Name = "Diseases of the Joints"
                        },
                        new
                        {
                            Code = "SMD26",
                            Name = "Diseases of the Kidney"
                        },
                        new
                        {
                            Code = "SMD27",
                            Name = "Resp. Tract Diseases -Children"
                        },
                        new
                        {
                            Code = "SMD28",
                            Name = "Echocardiography"
                        },
                        new
                        {
                            Code = "SMD29",
                            Name = "Emergency Care"
                        },
                        new
                        {
                            Code = "SMD3",
                            Name = "Allergies"
                        },
                        new
                        {
                            Code = "SMD30",
                            Name = "Endocrinology"
                        },
                        new
                        {
                            Code = "SMD31",
                            Name = "Endoscopic General Surgery"
                        },
                        new
                        {
                            Code = "SMD32",
                            Name = "Exercise Medicine"
                        },
                        new
                        {
                            Code = "SMD33",
                            Name = "Family Therapy"
                        },
                        new
                        {
                            Code = "SMD34",
                            Name = "Female Incontinence & Urodynamics"
                        },
                        new
                        {
                            Code = "SMD35",
                            Name = "Forensic Pathology"
                        },
                        new
                        {
                            Code = "SMD36",
                            Name = "Forensic Psychiatry"
                        },
                        new
                        {
                            Code = "SMD37",
                            Name = "Forensic Psychiatry Medico-legal Med."
                        },
                        new
                        {
                            Code = "SMD38",
                            Name = "Gastrointestinal Surgery"
                        },
                        new
                        {
                            Code = "SMD20",
                            Name = "Dermatopathology"
                        },
                        new
                        {
                            Code = "SMD39",
                            Name = "Geriatric Medicine"
                        },
                        new
                        {
                            Code = "SMD4",
                            Name = "Allergies -Upper Respiratory Tract"
                        },
                        new
                        {
                            Code = "SMD40",
                            Name = "Geriatric Psychiatry"
                        },
                        new
                        {
                            Code = "SMD41",
                            Name = "Geriatrics"
                        },
                        new
                        {
                            Code = "SMD42",
                            Name = "Geriatrics & Psychotherapy"
                        },
                        new
                        {
                            Code = "SMD43",
                            Name = "Glaucoma"
                        },
                        new
                        {
                            Code = "SMD44",
                            Name = "Hair Restoration Surgery"
                        },
                        new
                        {
                            Code = "SMD45",
                            Name = "Hand &Wrist Surgery"
                        },
                        new
                        {
                            Code = "SMD46",
                            Name = "Head and Neck Oncology"
                        },
                        new
                        {
                            Code = "SMD47",
                            Name = "Hypnotherapy"
                        },
                        new
                        {
                            Code = "SMD48",
                            Name = "Joint Replacement & Reconstruction"
                        },
                        new
                        {
                            Code = "LPNORTHO",
                            Name = "Orthopaedic"
                        },
                        new
                        {
                            Code = "402",
                            Name = "Adolescent Medicine"
                        },
                        new
                        {
                            Code = "410",
                            Name = "Clinical Pharmacology"
                        },
                        new
                        {
                            Code = "412",
                            Name = "Colorectal Surgery"
                        },
                        new
                        {
                            Code = "414",
                            Name = "Developmental Pediatrics"
                        },
                        new
                        {
                            Code = "423",
                            Name = "General Surgical Oncology"
                        },
                        new
                        {
                            Code = "427",
                            Name = "Gynecologic Oncology"
                        },
                        new
                        {
                            Code = "428",
                            Name = "Gynecologic Reproductive Endocrinology and Infertility"
                        },
                        new
                        {
                            Code = "434",
                            Name = "Neuroradiology"
                        },
                        new
                        {
                            Code = "445",
                            Name = "Maternal - Fetal Medicine"
                        },
                        new
                        {
                            Code = "455",
                            Name = "Neonatal - Perinatal Medicine"
                        },
                        new
                        {
                            Code = "461",
                            Name = "Occupational Medicine"
                        },
                        new
                        {
                            Code = "462",
                            Name = "Pediatric Emergency Medicine"
                        },
                        new
                        {
                            Code = "468",
                            Name = "Pediatric Radiology"
                        },
                        new
                        {
                            Code = "485",
                            Name = "Transfusion Medicine"
                        },
                        new
                        {
                            Code = "406",
                            Name = "Child and Adolescent Psychiatry"
                        },
                        new
                        {
                            Code = "418",
                            Name = "Forensic Psychiatry"
                        },
                        new
                        {
                            Code = "426",
                            Name = "Geriatric Psychiatry"
                        },
                        new
                        {
                            Code = "470",
                            Name = "Pain Medicine"
                        },
                        new
                        {
                            Code = "421",
                            Name = "General Internal Medicine"
                        });
                });

            modelBuilder.Entity("Prime.Models.Plr.PlrRoleType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("PlrRoleTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = "RTNM",
                            Name = "Nuclear Medicine Technologist"
                        },
                        new
                        {
                            Code = "RTR",
                            Name = "Radiation Technologist in Radiology"
                        },
                        new
                        {
                            Code = "RTT",
                            Name = "Radiation Technologist in Therapy"
                        },
                        new
                        {
                            Code = "RN",
                            Name = "Registered Nurse"
                        },
                        new
                        {
                            Code = "RNP",
                            Name = "Registered Nurse Practitioner"
                        },
                        new
                        {
                            Code = "RPN",
                            Name = "Registered Psychiatric Nurse"
                        },
                        new
                        {
                            Code = "RTEMG",
                            Name = "Registered Electromyography Technologist"
                        },
                        new
                        {
                            Code = "RTMR",
                            Name = "Radiation Technologist in Magnetic Resonance"
                        },
                        new
                        {
                            Code = "PHARM",
                            Name = "Pharmacist"
                        },
                        new
                        {
                            Code = "PO",
                            Name = "Podiatrist"
                        },
                        new
                        {
                            Code = "RAC",
                            Name = "Registered Acupuncturist"
                        },
                        new
                        {
                            Code = "REPT",
                            Name = "Registered Evoked Potential Technologist"
                        },
                        new
                        {
                            Code = "RET",
                            Name = "Registered Electroencephalography Technologist"
                        },
                        new
                        {
                            Code = "RM",
                            Name = "Registered Midwife"
                        },
                        new
                        {
                            Code = "LPN",
                            Name = "Licensed Practical Nurse"
                        },
                        new
                        {
                            Code = "MD",
                            Name = "Medical Doctor"
                        },
                        new
                        {
                            Code = "MOA",
                            Name = "Medical Office Assistant"
                        },
                        new
                        {
                            Code = "OPT",
                            Name = "Optometrist"
                        },
                        new
                        {
                            Code = "PCP",
                            Name = "Primary Care Paramedic"
                        },
                        new
                        {
                            Code = "PCY",
                            Name = "Pharmacy"
                        },
                        new
                        {
                            Code = "ACP",
                            Name = "Advanced Care Paramedic"
                        },
                        new
                        {
                            Code = "CCP",
                            Name = "Critical Care Paramedic"
                        },
                        new
                        {
                            Code = "DEN",
                            Name = "Dentist"
                        },
                        new
                        {
                            Code = "EMR",
                            Name = "Emergency Medical Responder"
                        },
                        new
                        {
                            Code = "CC",
                            Name = "Clinical Counsellor"
                        },
                        new
                        {
                            Code = "OT",
                            Name = "Occupational Therapist"
                        },
                        new
                        {
                            Code = "PSYCH",
                            Name = "Psychologist"
                        },
                        new
                        {
                            Code = "SW",
                            Name = "Social Worker"
                        },
                        new
                        {
                            Code = "RCSW",
                            Name = "Registered Clinical Social Worker"
                        },
                        new
                        {
                            Code = "CHIRO",
                            Name = "Chiropractor"
                        },
                        new
                        {
                            Code = "PHYSIO",
                            Name = "Physiotherapist"
                        },
                        new
                        {
                            Code = "RMT",
                            Name = "Registered Massage Therapist"
                        },
                        new
                        {
                            Code = "KN",
                            Name = "Kinesiologist"
                        },
                        new
                        {
                            Code = "PTECH",
                            Name = "Pharmacy Technician"
                        },
                        new
                        {
                            Code = "COUN",
                            Name = "Counsellor"
                        },
                        new
                        {
                            Code = "MFT",
                            Name = "Marriage and Family Therapist"
                        },
                        new
                        {
                            Code = "RD",
                            Name = "Registered Dietitian"
                        },
                        new
                        {
                            Code = "PHARMTECH",
                            Name = "PHARMTECH"
                        },
                        new
                        {
                            Code = "ND",
                            Name = "Naturopathic Doctor"
                        });
                });

            modelBuilder.Entity("Prime.Models.Plr.PlrStatusReason", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("PlrStatusReasonLookup");

                    b.HasData(
                        new
                        {
                            Code = "OOP",
                            Name = "Out of Province"
                        },
                        new
                        {
                            Code = "ORG",
                            Name = "Organization Provider"
                        },
                        new
                        {
                            Code = "DEF",
                            Name = "Deferred"
                        },
                        new
                        {
                            Code = "DEN",
                            Name = "Licensed Denied"
                        },
                        new
                        {
                            Code = "ERSRES",
                            Name = "Erased by Resolution"
                        },
                        new
                        {
                            Code = "GS",
                            Name = "Good Standing"
                        },
                        new
                        {
                            Code = "HON",
                            Name = "Honorary"
                        },
                        new
                        {
                            Code = "INNONPRAC",
                            Name = "Initial Non Practicing"
                        },
                        new
                        {
                            Code = "MIS",
                            Name = "Missionary"
                        },
                        new
                        {
                            Code = "NR",
                            Name = "Non-resident"
                        },
                        new
                        {
                            Code = "OPEN",
                            Name = "Open"
                        },
                        new
                        {
                            Code = "PRAC",
                            Name = "Practising"
                        },
                        new
                        {
                            Code = "REM",
                            Name = "Removed"
                        },
                        new
                        {
                            Code = "RESDISC",
                            Name = "Resigned - disciplinary action"
                        },
                        new
                        {
                            Code = "SPE",
                            Name = "Special Registry"
                        },
                        new
                        {
                            Code = "SUS",
                            Name = "Suspended"
                        },
                        new
                        {
                            Code = "TEMPPER",
                            Name = "Temporary Permit"
                        },
                        new
                        {
                            Code = "TI",
                            Name = "Temporary Inactive"
                        },
                        new
                        {
                            Code = "TSF",
                            Name = "Transfer"
                        },
                        new
                        {
                            Code = "UNK",
                            Name = "Unknown"
                        },
                        new
                        {
                            Code = "VW",
                            Name = "Voluntary Withdrawal"
                        },
                        new
                        {
                            Code = "ASSOC",
                            Name = "Associate"
                        },
                        new
                        {
                            Code = "AU",
                            Name = "Address Unknown"
                        },
                        new
                        {
                            Code = "CLOSED",
                            Name = "Closed"
                        },
                        new
                        {
                            Code = "NONPRAC",
                            Name = "Non Practicing"
                        },
                        new
                        {
                            Code = "LAP",
                            Name = "License Lapsed on Request"
                        },
                        new
                        {
                            Code = "LTP",
                            Name = "Left the Province"
                        },
                        new
                        {
                            Code = "NONPAY",
                            Name = "Non Payment of Fee"
                        },
                        new
                        {
                            Code = "RET",
                            Name = "Retired"
                        },
                        new
                        {
                            Code = "DEC",
                            Name = "Deceased"
                        },
                        new
                        {
                            Code = "MEDSTUD",
                            Name = "Medical Student"
                        });
                });

            modelBuilder.Entity("Prime.Models.PlrProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address1Line1")
                        .HasColumnType("text");

                    b.Property<string>("Address1Line2")
                        .HasColumnType("text");

                    b.Property<string>("Address1Line3")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Address1StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("City1")
                        .HasColumnType("text");

                    b.Property<string>("CollegeId")
                        .HasColumnType("text");

                    b.Property<string>("ConditionCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ConditionEndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ConditionStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Country1")
                        .HasColumnType("text");

                    b.Property<string>("Cpn")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Credentials")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Expertise")
                        .HasColumnType("text");

                    b.Property<string>("FaxAreaCode")
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("IdentifierType")
                        .HasColumnType("text");

                    b.Property<string>("Ipc")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MspId")
                        .HasColumnType("text");

                    b.Property<string>("NamePrefix")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode1")
                        .HasColumnType("text");

                    b.Property<string>("ProviderRoleType")
                        .HasColumnType("text");

                    b.Property<string>("Province1")
                        .HasColumnType("text");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.Property<string>("StatusCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StatusExpiryDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StatusReasonCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StatusStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Suffix")
                        .HasColumnType("text");

                    b.Property<string>("TelephoneAreaCode")
                        .HasColumnType("text");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("ThirdName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Ipc")
                        .IsUnique();

                    b.ToTable("PlrProvider");
                });

            modelBuilder.Entity("Prime.Models.Practice", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("PracticeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Remote Practice"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Reproductive Health - Sexually Transmitted Infections"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Reproductive Health - Contraceptive Management"
                        },
                        new
                        {
                            Code = 4,
                            Name = "First Call"
                        });
                });

            modelBuilder.Entity("Prime.Models.Practitioner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CollegeId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PracRefId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Practitioner");
                });

            modelBuilder.Entity("Prime.Models.PreApprovedRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyType")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PreApprovedRegistration");
                });

            modelBuilder.Entity("Prime.Models.Privilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("PrivilegeGroupCode")
                        .HasColumnType("integer");

                    b.Property<string>("TransactionType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PrivilegeGroupCode");

                    b.ToTable("Privilege");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Update Claims History",
                            PrivilegeGroupCode = 1,
                            TransactionType = "TAC"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Query Claims History",
                            PrivilegeGroupCode = 1,
                            TransactionType = "TDT"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Pt Profile Mail Request",
                            PrivilegeGroupCode = 1,
                            TransactionType = "TPM"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Maintain Pt Keyword",
                            PrivilegeGroupCode = 1,
                            TransactionType = "TCP"
                        },
                        new
                        {
                            Id = 5,
                            Description = "New PHN",
                            PrivilegeGroupCode = 2,
                            TransactionType = "TPH"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Address Update",
                            PrivilegeGroupCode = 2,
                            TransactionType = "TPA"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Medication Update",
                            PrivilegeGroupCode = 2,
                            TransactionType = "TMU"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Drug Monograph",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TDR"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Patient Details",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TID"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Location Details",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TIL"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Prescriber Details",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TIP"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Name Search",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TPN"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Pt Profile Request",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TRP"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Most Recent Profile",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TBR"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Filled Elsewhere Profile",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TRS"
                        },
                        new
                        {
                            Id = 16,
                            Description = "DUE Inquiry",
                            PrivilegeGroupCode = 3,
                            TransactionType = "TDU"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Regulated User that can have OBOs",
                            PrivilegeGroupCode = 5,
                            TransactionType = "RU with OBOs"
                        });
                });

            modelBuilder.Entity("Prime.Models.PrivilegeGroup", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PrivilegeTypeCode")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.HasIndex("PrivilegeTypeCode");

                    b.ToTable("PrivilegeGroupLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Submit and Access Claims",
                            PrivilegeTypeCode = 2
                        },
                        new
                        {
                            Code = 2,
                            Name = "Record Medical History",
                            PrivilegeTypeCode = 2
                        },
                        new
                        {
                            Code = 3,
                            Name = "Access Medical History",
                            PrivilegeTypeCode = 2
                        },
                        new
                        {
                            Code = 5,
                            Name = "RU That Can Have OBOs",
                            PrivilegeTypeCode = 1
                        });
                });

            modelBuilder.Entity("Prime.Models.PrivilegeType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("PrivilegeTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Allowable Role"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Allowable Transaction"
                        });
                });

            modelBuilder.Entity("Prime.Models.Province", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.HasIndex("CountryCode");

                    b.ToTable("ProvinceLookup");

                    b.HasData(
                        new
                        {
                            Code = "AB",
                            CountryCode = "CA",
                            Name = "Alberta"
                        },
                        new
                        {
                            Code = "BC",
                            CountryCode = "CA",
                            Name = "British Columbia"
                        },
                        new
                        {
                            Code = "MB",
                            CountryCode = "CA",
                            Name = "Manitoba"
                        },
                        new
                        {
                            Code = "NB",
                            CountryCode = "CA",
                            Name = "New Brunswick"
                        },
                        new
                        {
                            Code = "NL",
                            CountryCode = "CA",
                            Name = "Newfoundland and Labrador"
                        },
                        new
                        {
                            Code = "NS",
                            CountryCode = "CA",
                            Name = "Nova Scotia"
                        },
                        new
                        {
                            Code = "ON",
                            CountryCode = "CA",
                            Name = "Ontario"
                        },
                        new
                        {
                            Code = "PE",
                            CountryCode = "CA",
                            Name = "Prince Edward Island"
                        },
                        new
                        {
                            Code = "QC",
                            CountryCode = "CA",
                            Name = "Quebec"
                        },
                        new
                        {
                            Code = "SK",
                            CountryCode = "CA",
                            Name = "Saskatchewan"
                        },
                        new
                        {
                            Code = "NT",
                            CountryCode = "CA",
                            Name = "Northwest Territories"
                        },
                        new
                        {
                            Code = "NU",
                            CountryCode = "CA",
                            Name = "Nunavut"
                        },
                        new
                        {
                            Code = "YT",
                            CountryCode = "CA",
                            Name = "Yukon"
                        },
                        new
                        {
                            Code = "AL",
                            CountryCode = "US",
                            Name = "Alabama"
                        },
                        new
                        {
                            Code = "AK",
                            CountryCode = "US",
                            Name = "Alaska"
                        },
                        new
                        {
                            Code = "AS",
                            CountryCode = "US",
                            Name = "American Samoa"
                        },
                        new
                        {
                            Code = "AZ",
                            CountryCode = "US",
                            Name = "Arizona"
                        },
                        new
                        {
                            Code = "AR",
                            CountryCode = "US",
                            Name = "Arkansas"
                        },
                        new
                        {
                            Code = "CA",
                            CountryCode = "US",
                            Name = "California"
                        },
                        new
                        {
                            Code = "CO",
                            CountryCode = "US",
                            Name = "Colorado"
                        },
                        new
                        {
                            Code = "CT",
                            CountryCode = "US",
                            Name = "Connecticut"
                        },
                        new
                        {
                            Code = "DE",
                            CountryCode = "US",
                            Name = "Delaware"
                        },
                        new
                        {
                            Code = "DC",
                            CountryCode = "US",
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Code = "FL",
                            CountryCode = "US",
                            Name = "Florida"
                        },
                        new
                        {
                            Code = "GA",
                            CountryCode = "US",
                            Name = "Georgia"
                        },
                        new
                        {
                            Code = "GU",
                            CountryCode = "US",
                            Name = "Guam"
                        },
                        new
                        {
                            Code = "HI",
                            CountryCode = "US",
                            Name = "Hawaii"
                        },
                        new
                        {
                            Code = "ID",
                            CountryCode = "US",
                            Name = "Idaho"
                        },
                        new
                        {
                            Code = "IL",
                            CountryCode = "US",
                            Name = "Illinois"
                        },
                        new
                        {
                            Code = "IN",
                            CountryCode = "US",
                            Name = "Indiana"
                        },
                        new
                        {
                            Code = "IA",
                            CountryCode = "US",
                            Name = "Iowa"
                        },
                        new
                        {
                            Code = "KS",
                            CountryCode = "US",
                            Name = "Kansas"
                        },
                        new
                        {
                            Code = "KY",
                            CountryCode = "US",
                            Name = "Kentucky"
                        },
                        new
                        {
                            Code = "LA",
                            CountryCode = "US",
                            Name = "Louisiana"
                        },
                        new
                        {
                            Code = "ME",
                            CountryCode = "US",
                            Name = "Maine"
                        },
                        new
                        {
                            Code = "MD",
                            CountryCode = "US",
                            Name = "Maryland"
                        },
                        new
                        {
                            Code = "MA",
                            CountryCode = "US",
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Code = "MI",
                            CountryCode = "US",
                            Name = "Michigan"
                        },
                        new
                        {
                            Code = "MN",
                            CountryCode = "US",
                            Name = "Minnesota"
                        },
                        new
                        {
                            Code = "MS",
                            CountryCode = "US",
                            Name = "Mississippi"
                        },
                        new
                        {
                            Code = "MO",
                            CountryCode = "US",
                            Name = "Missouri"
                        },
                        new
                        {
                            Code = "MT",
                            CountryCode = "US",
                            Name = "Montana"
                        },
                        new
                        {
                            Code = "NE",
                            CountryCode = "US",
                            Name = "Nebraska"
                        },
                        new
                        {
                            Code = "NV",
                            CountryCode = "US",
                            Name = "Nevada"
                        },
                        new
                        {
                            Code = "NH",
                            CountryCode = "US",
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Code = "NJ",
                            CountryCode = "US",
                            Name = "New Jersey"
                        },
                        new
                        {
                            Code = "NM",
                            CountryCode = "US",
                            Name = "New Mexico"
                        },
                        new
                        {
                            Code = "NY",
                            CountryCode = "US",
                            Name = "New York"
                        },
                        new
                        {
                            Code = "NC",
                            CountryCode = "US",
                            Name = "North Carolina"
                        },
                        new
                        {
                            Code = "ND",
                            CountryCode = "US",
                            Name = "North Dakota"
                        },
                        new
                        {
                            Code = "MP",
                            CountryCode = "US",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Code = "OH",
                            CountryCode = "US",
                            Name = "Ohio"
                        },
                        new
                        {
                            Code = "OK",
                            CountryCode = "US",
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Code = "OR",
                            CountryCode = "US",
                            Name = "Oregon"
                        },
                        new
                        {
                            Code = "PA",
                            CountryCode = "US",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Code = "PR",
                            CountryCode = "US",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Code = "RI",
                            CountryCode = "US",
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Code = "SC",
                            CountryCode = "US",
                            Name = "South Carolina"
                        },
                        new
                        {
                            Code = "SD",
                            CountryCode = "US",
                            Name = "South Dakota"
                        },
                        new
                        {
                            Code = "TN",
                            CountryCode = "US",
                            Name = "Tennessee"
                        },
                        new
                        {
                            Code = "TX",
                            CountryCode = "US",
                            Name = "Texas"
                        },
                        new
                        {
                            Code = "UM",
                            CountryCode = "US",
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Code = "UT",
                            CountryCode = "US",
                            Name = "Utah"
                        },
                        new
                        {
                            Code = "VT",
                            CountryCode = "US",
                            Name = "Vermont"
                        },
                        new
                        {
                            Code = "VI",
                            CountryCode = "US",
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Code = "VA",
                            CountryCode = "US",
                            Name = "Virginia"
                        },
                        new
                        {
                            Code = "WA",
                            CountryCode = "US",
                            Name = "Washington"
                        },
                        new
                        {
                            Code = "WV",
                            CountryCode = "US",
                            Name = "West Virginia"
                        },
                        new
                        {
                            Code = "WI",
                            CountryCode = "US",
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Code = "WY",
                            CountryCode = "US",
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("Prime.Models.RemoteAccessLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("InternetProvider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PhysicalAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("PhysicalAddressId");

                    b.ToTable("RemoteAccessLocation");
                });

            modelBuilder.Entity("Prime.Models.RemoteAccessSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("SiteId");

                    b.ToTable("RemoteAccessSite");
                });

            modelBuilder.Entity("Prime.Models.RemoteUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Notified")
                        .HasColumnType("boolean");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("RemoteUser");
                });

            modelBuilder.Entity("Prime.Models.RemoteUserCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CollegeCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("LicenseCode")
                        .HasColumnType("integer");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RemoteUserId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CollegeCode");

                    b.HasIndex("LicenseCode");

                    b.HasIndex("RemoteUserId")
                        .IsUnique();

                    b.ToTable("RemoteUserCertification");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclaration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("SelfDeclarationDetails")
                        .HasColumnType("text");

                    b.Property<int>("SelfDeclarationTypeCode")
                        .HasColumnType("integer");

                    b.Property<int?>("SelfDeclarationVersionId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("SelfDeclarationTypeCode");

                    b.HasIndex("SelfDeclarationVersionId");

                    b.ToTable("SelfDeclaration");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclarationDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<bool>("Hidden")
                        .HasColumnType("boolean");

                    b.Property<int>("SelfDeclarationTypeCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.HasIndex("SelfDeclarationTypeCode");

                    b.ToTable("SelfDeclarationDocument");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclarationType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SortingNumber")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("SelfDeclarationTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Has Conviction",
                            SortingNumber = 1
                        },
                        new
                        {
                            Code = 2,
                            Name = "Has Registration Suspended",
                            SortingNumber = 2
                        },
                        new
                        {
                            Code = 4,
                            Name = "Has Disciplinary Action",
                            SortingNumber = 4
                        },
                        new
                        {
                            Code = 3,
                            Name = "Has PharmaNet Suspended",
                            SortingNumber = 3
                        });
                });

            modelBuilder.Entity("Prime.Models.SelfDeclarationVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CareSettingCodeStr")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("EffectiveDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SelfDeclarationTypeCode")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SelfDeclarationTypeCode");

                    b.ToTable("SelfDeclarationVersion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 2, 1, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 1,
                            Text = "Are you, or have you ever been, the subject of an order or a conviction under legislation in any jurisdiction for a matter that involved improper access to, collection, use, or disclosure or retention of personal information?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 2, 1, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 2,
                            Text = "Are you, or have you ever been, subject to any limits, conditions or prohibitions imposed as a result of disciplinary actions taken by a governing body of a health profession in any jurisdiction, that involved improper access to, collection, use, or disclosure or retention of personal information?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 2, 1, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 4,
                            Text = "Have you ever been disciplined or fired by an employer, or had a contract for your services terminated, for a matter that involved improper access to, collection, use, or disclosure or retention of personal information?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2020, 2, 1, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 3,
                            Text = "Have you ever had your access to PharmaNet or any other health information system, whether or not electronic,  an electronic health record system, electronic medical record system, pharmacy or laboratory record system, or any similar health information system, in any jurisdiction, suspended or cancelled for a matter that involved improper access to, collection, use, or disclosure or retention of personal information?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            CareSettingCodeStr = "1,2,3",
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 12, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 1,
                            Text = "Have you ever been the subject of <u>an order</u> or <u>conviction</u> in British Columbia or any other jurisdiction <u>for a matter involving an “unlawful or improper action”</u>?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            CareSettingCodeStr = "1,2,3,4",
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 12, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 2,
                            Text = "Are you, or have you ever been, subject to the imposition, whether by order or with consent, of <u>prohibitions, limits or conditions on your practice of a health profession:</u> <ol style='list-style-type: lower-alpha;' class='mb-0'><li>in British Columbia, under the Health Professions Act or the Pharmacy Operations and Drug Scheduling Act, or</li><li>in any other jurisdiction, by a body that regulates a health profession in that jurisdiction</li></ol><u>for a matter involving an “unlawful or improper action”</u>?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            CareSettingCodeStr = "1,2,3,4",
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 12, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 4,
                            Text = "Has an employer ever disciplined you, or terminated your employment, for <u>a matter involving an “unlawful or improper action”</u>?  Has a contract for your services ever been terminated <u>for a matter involving an “unlawful or improper action”</u>?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            CareSettingCodeStr = "1,2,3,4",
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2022, 12, 17, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 3,
                            Text = "Has your access to <u>PharmaNet</u> or <u>any other health information system</u>, whether or not electronic and whether or not in British Columbia or another jurisdiction, been suspended or cancelled <u>for a matter involving an “unlawful or improper action”</u>?",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            CareSettingCodeStr = "4",
                            CreatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            CreatedUserId = new Guid("00000000-0000-0000-0000-000000000000"),
                            EffectiveDate = new DateTimeOffset(new DateTime(2023, 8, 10, 8, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            SelfDeclarationTypeCode = 1,
                            Text = "Place holder question",
                            UpdatedTimeStamp = new DateTimeOffset(new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, -7, 0, 0, 0)),
                            UpdatedUserId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Prime.Models.SignedAgreementDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AgreementId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AgreementId")
                        .IsUnique();

                    b.ToTable("SignedAgreementDocument");
                });

            modelBuilder.Entity("Prime.Models.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("ActiveBeforeRegistration")
                        .HasColumnType("boolean");

                    b.Property<int?>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("ApprovedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("CareSettingCode")
                        .HasColumnType("integer");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("DoingBusinessAs")
                        .HasColumnType("text");

                    b.Property<bool>("Flagged")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<string>("Mnemonic")
                        .HasColumnType("text");

                    b.Property<string>("PEC")
                        .HasColumnType("text");

                    b.Property<int?>("PhysicalAddressId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("SubmittedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("CareSettingCode");

                    b.HasIndex("PhysicalAddressId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("Prime.Models.SiteAdjudicationDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("SiteId");

                    b.ToTable("SiteAdjudicationDocument");
                });

            modelBuilder.Entity("Prime.Models.SiteNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdminId")
                        .HasColumnType("integer");

                    b.Property<int>("AssigneeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("SiteRegistrationNoteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("SiteRegistrationNoteId")
                        .IsUnique();

                    b.ToTable("SiteNotification");
                });

            modelBuilder.Entity("Prime.Models.SiteRegistrationNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AdjudicatorId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("NoteDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AdjudicatorId");

                    b.HasIndex("SiteId");

                    b.ToTable("SiteRegistrationNote");
                });

            modelBuilder.Entity("Prime.Models.SiteRegistrationReviewDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UploadedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("SiteRegistrationReviewDocument");
                });

            modelBuilder.Entity("Prime.Models.SiteStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("StatusDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("StatusType")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("SiteStatus");
                });

            modelBuilder.Entity("Prime.Models.SiteVendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("SiteId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("VendorCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.HasIndex("VendorCode");

                    b.ToTable("SiteVendor");
                });

            modelBuilder.Entity("Prime.Models.Status", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("StatusLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Editable"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Under Review"
                        },
                        new
                        {
                            Code = 3,
                            Name = "Requires TOA"
                        },
                        new
                        {
                            Code = 4,
                            Name = "Locked"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Declined"
                        });
                });

            modelBuilder.Entity("Prime.Models.StatusReason", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("StatusReasonLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Automatically Adjudicated"
                        },
                        new
                        {
                            Code = 2,
                            Name = "Manually Adjudicated"
                        },
                        new
                        {
                            Code = 3,
                            Name = "PharmaNet Error, License could not be validated"
                        },
                        new
                        {
                            Code = 4,
                            Name = "College License, Practitioner ID, or Device Provider ID not in PharmaNet table"
                        },
                        new
                        {
                            Code = 6,
                            Name = "Birthdate discrepancy in PharmaNet practitioner table"
                        },
                        new
                        {
                            Code = 5,
                            Name = "Name discrepancy in PharmaNet practitioner table"
                        },
                        new
                        {
                            Code = 7,
                            Name = "Listed as Non-Practicing in PharmaNet practitioner table"
                        },
                        new
                        {
                            Code = 8,
                            Name = "Device Provider"
                        },
                        new
                        {
                            Code = 9,
                            Name = "Licence Class requires manual adjudication"
                        },
                        new
                        {
                            Code = 10,
                            Name = "Answered one or more Self Declaration questions \"Yes\""
                        },
                        new
                        {
                            Code = 11,
                            Name = "Contact Address or Identity Address not in British Columbia"
                        },
                        new
                        {
                            Code = 12,
                            Name = "Admin has flagged the applicant for manual adjudication"
                        },
                        new
                        {
                            Code = 13,
                            Name = "User does not have high enough identity assurance level"
                        },
                        new
                        {
                            Code = 14,
                            Name = "User authenticated with a method other than BC Services Card"
                        },
                        new
                        {
                            Code = 15,
                            Name = "User has Requested Remote Access"
                        },
                        new
                        {
                            Code = 16,
                            Name = "Terms of Access to be determined by an Adjudicator"
                        },
                        new
                        {
                            Code = 17,
                            Name = "No address from BC Services Card. Enrollee entered address."
                        },
                        new
                        {
                            Code = 18,
                            Name = "Manually entered paper enrolment"
                        },
                        new
                        {
                            Code = 19,
                            Name = "PRIME enrolment does not match paper enrollee record"
                        },
                        new
                        {
                            Code = 20,
                            Name = "Possible match with paper enrolment(s)"
                        },
                        new
                        {
                            Code = 21,
                            Name = "Unable to link enrollee to paper enrolment"
                        });
                });

            modelBuilder.Entity("Prime.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("AgreementType")
                        .HasColumnType("integer");

                    b.Property<bool>("Confirmed")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("ProfileSnapshot")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<bool>("RequestedRemoteAccess")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("Submission");
                });

            modelBuilder.Entity("Prime.Models.UnlistedCertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CollegeName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("LicenceNumber")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("RenewalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("UnlistedCertification");
                });

            modelBuilder.Entity("Prime.Models.Vendor", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CareSettingCode")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.HasIndex("CareSettingCode");

                    b.ToTable("VendorLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            CareSettingCode = 2,
                            Email = "CareConnect@phsa.ca",
                            Name = "CareConnect"
                        },
                        new
                        {
                            Code = 2,
                            CareSettingCode = 2,
                            Email = "support@excelleris.com",
                            Name = "Excelleris"
                        },
                        new
                        {
                            Code = 3,
                            CareSettingCode = 2,
                            Email = "help@iclinicemr.com",
                            Name = "iClinic"
                        },
                        new
                        {
                            Code = 4,
                            CareSettingCode = 2,
                            Email = "prime@medinet.ca",
                            Name = "Medinet"
                        },
                        new
                        {
                            Code = 5,
                            CareSettingCode = 2,
                            Email = "service@plexia.ca",
                            Name = "Plexia"
                        },
                        new
                        {
                            Code = 6,
                            CareSettingCode = 3,
                            Email = "",
                            Name = "TELUS Health – Kroll"
                        },
                        new
                        {
                            Code = 7,
                            CareSettingCode = 3,
                            Email = "",
                            Name = "Applied Robotics Inc."
                        },
                        new
                        {
                            Code = 8,
                            CareSettingCode = 3,
                            Email = "",
                            Name = "Loblaws/Shoppers Drug Mart"
                        },
                        new
                        {
                            Code = 9,
                            CareSettingCode = 3,
                            Email = "",
                            Name = "McKesson Canada"
                        },
                        new
                        {
                            Code = 10,
                            CareSettingCode = 3,
                            Email = "",
                            Name = "Commander Group Software"
                        },
                        new
                        {
                            Code = 14,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "Assyst Rx-A"
                        },
                        new
                        {
                            Code = 15,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "Commander Group"
                        },
                        new
                        {
                            Code = 16,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "Kroll"
                        },
                        new
                        {
                            Code = 17,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "Nexxsys"
                        },
                        new
                        {
                            Code = 18,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "PharmaClik"
                        },
                        new
                        {
                            Code = 19,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "Shoppers Drug Mart HealthWatch NG"
                        },
                        new
                        {
                            Code = 20,
                            CareSettingCode = 4,
                            Email = "",
                            Name = "WinRx"
                        },
                        new
                        {
                            Code = 21,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "CareConnect"
                        },
                        new
                        {
                            Code = 22,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Excelleris"
                        },
                        new
                        {
                            Code = 23,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "iClinic"
                        },
                        new
                        {
                            Code = 24,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Medinet"
                        },
                        new
                        {
                            Code = 25,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Plexia"
                        },
                        new
                        {
                            Code = 26,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "PharmaClik"
                        },
                        new
                        {
                            Code = 27,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Nexxsys"
                        },
                        new
                        {
                            Code = 28,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Kroll"
                        },
                        new
                        {
                            Code = 29,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Assyst Rx-A"
                        },
                        new
                        {
                            Code = 30,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "WinRx"
                        },
                        new
                        {
                            Code = 31,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Shoppers Drug Mart HealthWatch NG"
                        },
                        new
                        {
                            Code = 32,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Commander Group"
                        },
                        new
                        {
                            Code = 33,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "BDM"
                        },
                        new
                        {
                            Code = 34,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Meditech"
                        },
                        new
                        {
                            Code = 35,
                            CareSettingCode = 1,
                            Email = "",
                            Name = "Cerner"
                        });
                });

            modelBuilder.Entity("Prime.Models.VendorApiLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<string>("Input")
                        .HasColumnType("text");

                    b.Property<string>("Output")
                        .HasColumnType("text");

                    b.Property<string>("ServiceAccountUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("VendorApiLog");
                });

            modelBuilder.Entity("Prime.Models.VerifiableCredentials.Credential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset?>("AcceptedCredentialDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Alias")
                        .HasColumnType("text");

                    b.Property<string>("Base64QRCode")
                        .HasColumnType("text");

                    b.Property<string>("ConnectionId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedUserId")
                        .HasColumnType("uuid");

                    b.Property<string>("CredentialDefinitionId")
                        .HasColumnType("text");

                    b.Property<string>("CredentialExchangeId")
                        .HasColumnType("text");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("RevokedCredentialDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SchemaId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("UpdatedTimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UpdatedUserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("Credential");
                });

            modelBuilder.Entity("Prime.Models.AdditionalAddress", b =>
                {
                    b.HasBaseType("Prime.Models.Address");

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("Prime.Models.MailingAddress", b =>
                {
                    b.HasBaseType("Prime.Models.Address");

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Prime.Models.PhysicalAddress", b =>
                {
                    b.HasBaseType("Prime.Models.Address");

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Prime.Models.VerifiedAddress", b =>
                {
                    b.HasBaseType("Prime.Models.Address");

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityPharmanetAdministrator", b =>
                {
                    b.HasBaseType("Prime.Models.HealthAuthorities.HealthAuthorityContact");

                    b.HasIndex("HealthAuthorityOrganizationId");

                    b.ToTable("HealthAuthorityContact");

                    b.HasDiscriminator().HasValue("HealthAuthorityPharmanetAdministrator");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityPrivacyOfficer", b =>
                {
                    b.HasBaseType("Prime.Models.HealthAuthorities.HealthAuthorityContact");

                    b.HasIndex("HealthAuthorityOrganizationId");

                    b.ToTable("HealthAuthorityContact");

                    b.HasDiscriminator().HasValue("HealthAuthorityPrivacyOfficer");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupport", b =>
                {
                    b.HasBaseType("Prime.Models.HealthAuthorities.HealthAuthorityContact");

                    b.HasIndex("HealthAuthorityOrganizationId");

                    b.ToTable("HealthAuthorityContact");

                    b.HasDiscriminator().HasValue("HealthAuthorityTechnicalSupport");
                });

            modelBuilder.Entity("Prime.Models.CommunitySite", b =>
                {
                    b.HasBaseType("Prime.Models.Site");

                    b.Property<int?>("AdministratorPharmaNetId")
                        .HasColumnType("integer");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int?>("PrivacyOfficerId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProvisionerId")
                        .HasColumnType("integer");

                    b.Property<int?>("TechnicalSupportId")
                        .HasColumnType("integer");

                    b.HasIndex("AdministratorPharmaNetId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PrivacyOfficerId");

                    b.HasIndex("ProvisionerId");

                    b.HasIndex("TechnicalSupportId");

                    b.ToTable("CommunitySite");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthoritySite", b =>
                {
                    b.HasBaseType("Prime.Models.Site");

                    b.Property<int>("AuthorizedUserId")
                        .HasColumnType("integer");

                    b.Property<int?>("HealthAuthorityCareTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("HealthAuthorityOrganizationId")
                        .HasColumnType("integer");

                    b.Property<int?>("HealthAuthorityPharmanetAdministratorId")
                        .HasColumnType("integer");

                    b.Property<int?>("HealthAuthorityTechnicalSupportId")
                        .HasColumnType("integer");

                    b.Property<int?>("HealthAuthorityVendorId")
                        .HasColumnType("integer");

                    b.Property<int>("SecurityGroupCode")
                        .HasColumnType("integer");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.HasIndex("AuthorizedUserId");

                    b.HasIndex("HealthAuthorityCareTypeId");

                    b.HasIndex("HealthAuthorityOrganizationId");

                    b.HasIndex("HealthAuthorityPharmanetAdministratorId");

                    b.HasIndex("HealthAuthorityTechnicalSupportId");

                    b.HasIndex("HealthAuthorityVendorId");

                    b.ToTable("HealthAuthoritySite");
                });

            modelBuilder.Entity("Prime.Models.AccessAgreementNote", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany()
                        .HasForeignKey("AdjudicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithOne("AccessAgreementNote")
                        .HasForeignKey("Prime.Models.AccessAgreementNote", "EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjudicator");

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.Address", b =>
                {
                    b.HasOne("Prime.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode");

                    b.HasOne("Prime.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode");

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Prime.Models.Agreement", b =>
                {
                    b.HasOne("Prime.Models.AgreementVersion", "AgreementVersion")
                        .WithMany()
                        .HasForeignKey("AgreementVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("Agreements")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Prime.Models.LimitsConditionsClause", "LimitsConditionsClause")
                        .WithMany()
                        .HasForeignKey("LimitsConditionsClauseId");

                    b.HasOne("Prime.Models.Organization", "Organization")
                        .WithMany("Agreements")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany("Agreements")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("AgreementVersion");

                    b.Navigation("Enrollee");

                    b.Navigation("LimitsConditionsClause");

                    b.Navigation("Organization");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Prime.Models.AssignedPrivilege", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("AssignedPrivileges")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Privilege", "Privilege")
                        .WithMany("AssignedPrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("Privilege");
                });

            modelBuilder.Entity("Prime.Models.AuthorizedUser", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthority", "HealthAuthority")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthority");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Prime.Models.BusinessDay", b =>
                {
                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany("BusinessHours")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.BusinessEvent", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Prime.Models.BusinessEventType", "BusinessEventType")
                        .WithMany("BusinessEvents")
                        .HasForeignKey("BusinessEventTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany()
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Prime.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Admin");

                    b.Navigation("BusinessEventType");

                    b.Navigation("Enrollee");

                    b.Navigation("Organization");

                    b.Navigation("Party");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.BusinessLicence", b =>
                {
                    b.HasOne("Prime.Models.CommunitySite", "Site")
                        .WithMany("BusinessLicences")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.BusinessLicenceDocument", b =>
                {
                    b.HasOne("Prime.Models.BusinessLicence", "BusinessLicence")
                        .WithOne("BusinessLicenceDocument")
                        .HasForeignKey("Prime.Models.BusinessLicenceDocument", "BusinessLicenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessLicence");
                });

            modelBuilder.Entity("Prime.Models.Certification", b =>
                {
                    b.HasOne("Prime.Models.College", "College")
                        .WithMany("Certifications")
                        .HasForeignKey("CollegeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("Certifications")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.License", "License")
                        .WithMany("Certifications")
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Practice", "Practice")
                        .WithMany("Certifications")
                        .HasForeignKey("PracticeCode");

                    b.Navigation("College");

                    b.Navigation("Enrollee");

                    b.Navigation("License");

                    b.Navigation("Practice");
                });

            modelBuilder.Entity("Prime.Models.CollegeLicense", b =>
                {
                    b.HasOne("Prime.Models.College", "College")
                        .WithMany("CollegeLicenses")
                        .HasForeignKey("CollegeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.CollegeLicenseGrouping", "CollegeLicenseGrouping")
                        .WithMany()
                        .HasForeignKey("CollegeLicenseGroupingCode");

                    b.HasOne("Prime.Models.License", "License")
                        .WithMany("CollegeLicenses")
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("CollegeLicenseGrouping");

                    b.Navigation("License");
                });

            modelBuilder.Entity("Prime.Models.CollegePractice", b =>
                {
                    b.HasOne("Prime.Models.College", "College")
                        .WithMany("CollegePractices")
                        .HasForeignKey("CollegeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Practice", "Practice")
                        .WithMany("CollegePractices")
                        .HasForeignKey("PracticeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("Practice");
                });

            modelBuilder.Entity("Prime.Models.Contact", b =>
                {
                    b.HasOne("Prime.Models.PhysicalAddress", "PhysicalAddress")
                        .WithMany()
                        .HasForeignKey("PhysicalAddressId");

                    b.Navigation("PhysicalAddress");
                });

            modelBuilder.Entity("Prime.Models.DefaultPrivilege", b =>
                {
                    b.HasOne("Prime.Models.License", "License")
                        .WithMany("DefaultPrivileges")
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Privilege", "Privilege")
                        .WithMany("DefaultPrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("License");

                    b.Navigation("Privilege");
                });

            modelBuilder.Entity("Prime.Models.Enrollee", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany("Enrollees")
                        .HasForeignKey("AdjudicatorId");

                    b.Navigation("Adjudicator");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeAbsence", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolleeAbsences")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeAddress", b =>
                {
                    b.HasOne("Prime.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("Addresses")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeAdjudicationDocument", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany()
                        .HasForeignKey("AdjudicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolleeAdjudicationDocuments")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjudicator");

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeCareSetting", b =>
                {
                    b.HasOne("Prime.Models.CareSetting", "CareSetting")
                        .WithMany("EnrolleeCareSettings")
                        .HasForeignKey("CareSettingCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolleeCareSettings")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CareSetting");

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeDeviceProvider", b =>
                {
                    b.HasOne("Prime.Models.DeviceProviderRole", "DeviceProviderRole")
                        .WithMany()
                        .HasForeignKey("DeviceProviderRoleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolleeDeviceProviders")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceProviderRole");

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeHealthAuthority", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolleeHealthAuthorities")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.HealthAuthority", "HealthAuthority")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("HealthAuthority");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeLinkedEnrolment", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithOne("EnrolleeToPaperLink")
                        .HasForeignKey("Prime.Models.EnrolleeLinkedEnrolment", "EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "PaperEnrollee")
                        .WithOne("PaperToEnrolleeLink")
                        .HasForeignKey("Prime.Models.EnrolleeLinkedEnrolment", "PaperEnrolleeId");

                    b.Navigation("Enrollee");

                    b.Navigation("PaperEnrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeNote", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany("AdjudicatorNotes")
                        .HasForeignKey("AdjudicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("AdjudicatorNotes")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjudicator");

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeNotification", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Admin", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.EnrolleeNote", "EnrolleeNote")
                        .WithOne("EnrolleeNotification")
                        .HasForeignKey("Prime.Models.EnrolleeNotification", "EnrolleeNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Assignee");

                    b.Navigation("EnrolleeNote");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeRemoteUser", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolleeRemoteUsers")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.RemoteUser", "RemoteUser")
                        .WithMany()
                        .HasForeignKey("RemoteUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("RemoteUser");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentCertificateAccessToken", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany()
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatus", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("EnrolmentStatuses")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Status", "Status")
                        .WithMany("EnrolmentStatuses")
                        .HasForeignKey("StatusCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatusReason", b =>
                {
                    b.HasOne("Prime.Models.EnrolmentStatus", "EnrolmentStatus")
                        .WithMany("EnrolmentStatusReasons")
                        .HasForeignKey("EnrolmentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.StatusReason", "StatusReason")
                        .WithMany("EnrolmentStatusReasons")
                        .HasForeignKey("StatusReasonCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnrolmentStatus");

                    b.Navigation("StatusReason");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatusReference", b =>
                {
                    b.HasOne("Prime.Models.EnrolleeNote", "AdjudicatorNote")
                        .WithOne("EnrolmentStatusReference")
                        .HasForeignKey("Prime.Models.EnrolmentStatusReference", "AdjudicatorNoteId");

                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany("EnrolmentStatusReference")
                        .HasForeignKey("AdminId");

                    b.HasOne("Prime.Models.EnrolmentStatus", "EnrolmentStatus")
                        .WithOne("EnrolmentStatusReference")
                        .HasForeignKey("Prime.Models.EnrolmentStatusReference", "EnrolmentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjudicator");

                    b.Navigation("AdjudicatorNote");

                    b.Navigation("EnrolmentStatus");
                });

            modelBuilder.Entity("Prime.Models.GisEnrolment", b =>
                {
                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityCareType", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithMany("CareTypes")
                        .HasForeignKey("HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityOrganization");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityCareTypeToVendor", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityCareType", "HealthAuthorityCareType")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityCareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityVendor", "HealthAuthorityVendor")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityVendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityCareType");

                    b.Navigation("HealthAuthorityVendor");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityContact", b =>
                {
                    b.HasOne("Prime.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorityOrganizationAgreementDocument", "HealthAuthorityOrganizationAgreementDocument")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityOrganizationAgreementDocumentId");

                    b.Navigation("HealthAuthorityOrganizationAgreementDocument");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupportVendor", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupport", "HealthAuthorityTechnicalSupport")
                        .WithMany("VendorsSupported")
                        .HasForeignKey("HealthAuthorityTechnicalSupportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityVendor", "HealthAuthorityVendor")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityVendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityTechnicalSupport");

                    b.Navigation("HealthAuthorityVendor");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityVendor", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithMany("Vendors")
                        .HasForeignKey("HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityOrganization");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.PrivacyOffice", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithOne("PrivacyOffice")
                        .HasForeignKey("Prime.Models.HealthAuthorities.PrivacyOffice", "HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.PhysicalAddress", "PhysicalAddress")
                        .WithMany()
                        .HasForeignKey("PhysicalAddressId");

                    b.Navigation("HealthAuthorityOrganization");

                    b.Navigation("PhysicalAddress");
                });

            modelBuilder.Entity("Prime.Models.IdentificationDocument", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("IdentificationDocuments")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.IndividualDeviceProvider", b =>
                {
                    b.HasOne("Prime.Models.CommunitySite", "CommunitySite")
                        .WithMany()
                        .HasForeignKey("CommunitySiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunitySite");
                });

            modelBuilder.Entity("Prime.Models.LicenseDetail", b =>
                {
                    b.HasOne("Prime.Models.License", "License")
                        .WithMany("LicenseDetails")
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("License");
                });

            modelBuilder.Entity("Prime.Models.OboSite", b =>
                {
                    b.HasOne("Prime.Models.CareSetting", "CareSetting")
                        .WithMany()
                        .HasForeignKey("CareSettingCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("OboSites")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.HealthAuthority", "HealthAuthority")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityCode");

                    b.HasOne("Prime.Models.PhysicalAddress", "PhysicalAddress")
                        .WithMany()
                        .HasForeignKey("PhysicalAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CareSetting");

                    b.Navigation("Enrollee");

                    b.Navigation("HealthAuthority");

                    b.Navigation("PhysicalAddress");
                });

            modelBuilder.Entity("Prime.Models.Organization", b =>
                {
                    b.HasOne("Prime.Models.Party", "SigningAuthority")
                        .WithMany()
                        .HasForeignKey("SigningAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SigningAuthority");
                });

            modelBuilder.Entity("Prime.Models.OrganizationClaim", b =>
                {
                    b.HasOne("Prime.Models.Party", "NewSigningAuthority")
                        .WithMany()
                        .HasForeignKey("NewSigningAuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Organization", "Organization")
                        .WithMany("Claims")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NewSigningAuthority");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Prime.Models.PartyAddress", b =>
                {
                    b.HasOne("Prime.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany("Addresses")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Prime.Models.PartyCertification", b =>
                {
                    b.HasOne("Prime.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.License", "License")
                        .WithMany()
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany("PartyCertifications")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Practice", "Practice")
                        .WithMany()
                        .HasForeignKey("PracticeCode");

                    b.Navigation("College");

                    b.Navigation("License");

                    b.Navigation("Party");

                    b.Navigation("Practice");
                });

            modelBuilder.Entity("Prime.Models.PartyEnrolment", b =>
                {
                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany("PartyEnrolments")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Prime.Models.PartySubmission", b =>
                {
                    b.HasOne("Prime.Models.Party", "Party")
                        .WithMany("PartySubmissions")
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Prime.Models.Privilege", b =>
                {
                    b.HasOne("Prime.Models.PrivilegeGroup", "PrivilegeGroup")
                        .WithMany("Privileges")
                        .HasForeignKey("PrivilegeGroupCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrivilegeGroup");
                });

            modelBuilder.Entity("Prime.Models.PrivilegeGroup", b =>
                {
                    b.HasOne("Prime.Models.PrivilegeType", "PrivilegeType")
                        .WithMany("PrivilegeGroups")
                        .HasForeignKey("PrivilegeTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrivilegeType");
                });

            modelBuilder.Entity("Prime.Models.Province", b =>
                {
                    b.HasOne("Prime.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Prime.Models.RemoteAccessLocation", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("RemoteAccessLocations")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.PhysicalAddress", "PhysicalAddress")
                        .WithMany()
                        .HasForeignKey("PhysicalAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("PhysicalAddress");
                });

            modelBuilder.Entity("Prime.Models.RemoteAccessSite", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("RemoteAccessSites")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.RemoteUser", b =>
                {
                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany("RemoteUsers")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.RemoteUserCertification", b =>
                {
                    b.HasOne("Prime.Models.College", "College")
                        .WithMany()
                        .HasForeignKey("CollegeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.License", "License")
                        .WithMany()
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.RemoteUser", "RemoteUser")
                        .WithOne("RemoteUserCertification")
                        .HasForeignKey("Prime.Models.RemoteUserCertification", "RemoteUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("License");

                    b.Navigation("RemoteUser");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclaration", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("SelfDeclarations")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.SelfDeclarationType", "SelfDeclarationType")
                        .WithMany("SelfDeclarations")
                        .HasForeignKey("SelfDeclarationTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.SelfDeclarationVersion", "SelfDeclarationVersion")
                        .WithMany()
                        .HasForeignKey("SelfDeclarationVersionId");

                    b.Navigation("Enrollee");

                    b.Navigation("SelfDeclarationType");

                    b.Navigation("SelfDeclarationVersion");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclarationDocument", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("SelfDeclarationDocuments")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.SelfDeclarationType", "SelfDeclarationType")
                        .WithMany("SelfDeclarationDocuments")
                        .HasForeignKey("SelfDeclarationTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");

                    b.Navigation("SelfDeclarationType");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclarationVersion", b =>
                {
                    b.HasOne("Prime.Models.SelfDeclarationType", "SelfDeclarationType")
                        .WithMany()
                        .HasForeignKey("SelfDeclarationTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SelfDeclarationType");
                });

            modelBuilder.Entity("Prime.Models.SignedAgreementDocument", b =>
                {
                    b.HasOne("Prime.Models.Agreement", "Agreement")
                        .WithOne("SignedAgreement")
                        .HasForeignKey("Prime.Models.SignedAgreementDocument", "AgreementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agreement");
                });

            modelBuilder.Entity("Prime.Models.Site", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany()
                        .HasForeignKey("AdjudicatorId");

                    b.HasOne("Prime.Models.CareSetting", "CareSetting")
                        .WithMany()
                        .HasForeignKey("CareSettingCode");

                    b.HasOne("Prime.Models.PhysicalAddress", "PhysicalAddress")
                        .WithMany()
                        .HasForeignKey("PhysicalAddressId");

                    b.Navigation("Adjudicator");

                    b.Navigation("CareSetting");

                    b.Navigation("PhysicalAddress");
                });

            modelBuilder.Entity("Prime.Models.SiteAdjudicationDocument", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany()
                        .HasForeignKey("AdjudicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany("SiteAdjudicationDocuments")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjudicator");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.SiteNotification", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Admin", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.SiteRegistrationNote", "SiteRegistrationNote")
                        .WithOne("SiteNotification")
                        .HasForeignKey("Prime.Models.SiteNotification", "SiteRegistrationNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Assignee");

                    b.Navigation("SiteRegistrationNote");
                });

            modelBuilder.Entity("Prime.Models.SiteRegistrationNote", b =>
                {
                    b.HasOne("Prime.Models.Admin", "Adjudicator")
                        .WithMany()
                        .HasForeignKey("AdjudicatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany("SiteRegistrationNotes")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adjudicator");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.SiteRegistrationReviewDocument", b =>
                {
                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany("SiteRegistrationReviewDocuments")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.SiteStatus", b =>
                {
                    b.HasOne("Prime.Models.Site", "Site")
                        .WithMany("SiteStatuses")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("Prime.Models.SiteVendor", b =>
                {
                    b.HasOne("Prime.Models.CommunitySite", "Site")
                        .WithMany("SiteVendors")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Vendor", "Vendor")
                        .WithMany("SiteVendors")
                        .HasForeignKey("VendorCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Prime.Models.Submission", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("Submissions")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.UnlistedCertification", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("UnlistedCertifications")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.Vendor", b =>
                {
                    b.HasOne("Prime.Models.CareSetting", "CareSetting")
                        .WithMany()
                        .HasForeignKey("CareSettingCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CareSetting");
                });

            modelBuilder.Entity("Prime.Models.VerifiableCredentials.Credential", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany()
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityPharmanetAdministrator", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithMany("PharmanetAdministrators")
                        .HasForeignKey("HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityOrganization");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityPrivacyOfficer", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithMany("PrivacyOfficers")
                        .HasForeignKey("HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityOrganization");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupport", b =>
                {
                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithMany("TechnicalSupports")
                        .HasForeignKey("HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAuthorityOrganization");
                });

            modelBuilder.Entity("Prime.Models.CommunitySite", b =>
                {
                    b.HasOne("Prime.Models.Contact", "AdministratorPharmaNet")
                        .WithMany()
                        .HasForeignKey("AdministratorPharmaNetId");

                    b.HasOne("Prime.Models.Site", null)
                        .WithOne()
                        .HasForeignKey("Prime.Models.CommunitySite", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Organization", "Organization")
                        .WithMany("Sites")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Contact", "PrivacyOfficer")
                        .WithMany()
                        .HasForeignKey("PrivacyOfficerId");

                    b.HasOne("Prime.Models.Party", "Provisioner")
                        .WithMany()
                        .HasForeignKey("ProvisionerId");

                    b.HasOne("Prime.Models.Contact", "TechnicalSupport")
                        .WithMany()
                        .HasForeignKey("TechnicalSupportId");

                    b.Navigation("AdministratorPharmaNet");

                    b.Navigation("Organization");

                    b.Navigation("PrivacyOfficer");

                    b.Navigation("Provisioner");

                    b.Navigation("TechnicalSupport");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthoritySite", b =>
                {
                    b.HasOne("Prime.Models.AuthorizedUser", "AuthorizedUser")
                        .WithMany()
                        .HasForeignKey("AuthorizedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityCareType", "HealthAuthorityCareType")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityCareTypeId");

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", "HealthAuthorityOrganization")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityPharmanetAdministrator", "HealthAuthorityPharmanetAdministrator")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityPharmanetAdministratorId");

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupport", "HealthAuthorityTechnicalSupport")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityTechnicalSupportId");

                    b.HasOne("Prime.Models.HealthAuthorities.HealthAuthorityVendor", "HealthAuthorityVendor")
                        .WithMany()
                        .HasForeignKey("HealthAuthorityVendorId");

                    b.HasOne("Prime.Models.Site", null)
                        .WithOne()
                        .HasForeignKey("Prime.Models.HealthAuthoritySite", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorizedUser");

                    b.Navigation("HealthAuthorityCareType");

                    b.Navigation("HealthAuthorityOrganization");

                    b.Navigation("HealthAuthorityPharmanetAdministrator");

                    b.Navigation("HealthAuthorityTechnicalSupport");

                    b.Navigation("HealthAuthorityVendor");
                });

            modelBuilder.Entity("Prime.Models.Admin", b =>
                {
                    b.Navigation("AdjudicatorNotes");

                    b.Navigation("Enrollees");

                    b.Navigation("EnrolmentStatusReference");
                });

            modelBuilder.Entity("Prime.Models.Agreement", b =>
                {
                    b.Navigation("SignedAgreement");
                });

            modelBuilder.Entity("Prime.Models.BusinessEventType", b =>
                {
                    b.Navigation("BusinessEvents");
                });

            modelBuilder.Entity("Prime.Models.BusinessLicence", b =>
                {
                    b.Navigation("BusinessLicenceDocument");
                });

            modelBuilder.Entity("Prime.Models.CareSetting", b =>
                {
                    b.Navigation("EnrolleeCareSettings");
                });

            modelBuilder.Entity("Prime.Models.College", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("CollegeLicenses");

                    b.Navigation("CollegePractices");
                });

            modelBuilder.Entity("Prime.Models.Enrollee", b =>
                {
                    b.Navigation("AccessAgreementNote");

                    b.Navigation("Addresses");

                    b.Navigation("AdjudicatorNotes");

                    b.Navigation("Agreements");

                    b.Navigation("AssignedPrivileges");

                    b.Navigation("Certifications");

                    b.Navigation("EnrolleeAbsences");

                    b.Navigation("EnrolleeAdjudicationDocuments");

                    b.Navigation("EnrolleeCareSettings");

                    b.Navigation("EnrolleeDeviceProviders");

                    b.Navigation("EnrolleeHealthAuthorities");

                    b.Navigation("EnrolleeRemoteUsers");

                    b.Navigation("EnrolleeToPaperLink");

                    b.Navigation("EnrolmentStatuses");

                    b.Navigation("IdentificationDocuments");

                    b.Navigation("OboSites");

                    b.Navigation("PaperToEnrolleeLink");

                    b.Navigation("RemoteAccessLocations");

                    b.Navigation("RemoteAccessSites");

                    b.Navigation("SelfDeclarationDocuments");

                    b.Navigation("SelfDeclarations");

                    b.Navigation("Submissions");

                    b.Navigation("UnlistedCertifications");
                });

            modelBuilder.Entity("Prime.Models.EnrolleeNote", b =>
                {
                    b.Navigation("EnrolleeNotification");

                    b.Navigation("EnrolmentStatusReference");
                });

            modelBuilder.Entity("Prime.Models.EnrolmentStatus", b =>
                {
                    b.Navigation("EnrolmentStatusReasons");

                    b.Navigation("EnrolmentStatusReference");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityOrganization", b =>
                {
                    b.Navigation("CareTypes");

                    b.Navigation("PharmanetAdministrators");

                    b.Navigation("PrivacyOffice");

                    b.Navigation("PrivacyOfficers");

                    b.Navigation("TechnicalSupports");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("Prime.Models.License", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("CollegeLicenses");

                    b.Navigation("DefaultPrivileges");

                    b.Navigation("LicenseDetails");
                });

            modelBuilder.Entity("Prime.Models.Organization", b =>
                {
                    b.Navigation("Agreements");

                    b.Navigation("Claims");

                    b.Navigation("Sites");
                });

            modelBuilder.Entity("Prime.Models.Party", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Agreements");

                    b.Navigation("PartyCertifications");

                    b.Navigation("PartyEnrolments");

                    b.Navigation("PartySubmissions");
                });

            modelBuilder.Entity("Prime.Models.Practice", b =>
                {
                    b.Navigation("Certifications");

                    b.Navigation("CollegePractices");
                });

            modelBuilder.Entity("Prime.Models.Privilege", b =>
                {
                    b.Navigation("AssignedPrivileges");

                    b.Navigation("DefaultPrivileges");
                });

            modelBuilder.Entity("Prime.Models.PrivilegeGroup", b =>
                {
                    b.Navigation("Privileges");
                });

            modelBuilder.Entity("Prime.Models.PrivilegeType", b =>
                {
                    b.Navigation("PrivilegeGroups");
                });

            modelBuilder.Entity("Prime.Models.RemoteUser", b =>
                {
                    b.Navigation("RemoteUserCertification");
                });

            modelBuilder.Entity("Prime.Models.SelfDeclarationType", b =>
                {
                    b.Navigation("SelfDeclarationDocuments");

                    b.Navigation("SelfDeclarations");
                });

            modelBuilder.Entity("Prime.Models.Site", b =>
                {
                    b.Navigation("BusinessHours");

                    b.Navigation("RemoteUsers");

                    b.Navigation("SiteAdjudicationDocuments");

                    b.Navigation("SiteRegistrationNotes");

                    b.Navigation("SiteRegistrationReviewDocuments");

                    b.Navigation("SiteStatuses");
                });

            modelBuilder.Entity("Prime.Models.SiteRegistrationNote", b =>
                {
                    b.Navigation("SiteNotification");
                });

            modelBuilder.Entity("Prime.Models.Status", b =>
                {
                    b.Navigation("EnrolmentStatuses");
                });

            modelBuilder.Entity("Prime.Models.StatusReason", b =>
                {
                    b.Navigation("EnrolmentStatusReasons");
                });

            modelBuilder.Entity("Prime.Models.Vendor", b =>
                {
                    b.Navigation("SiteVendors");
                });

            modelBuilder.Entity("Prime.Models.HealthAuthorities.HealthAuthorityTechnicalSupport", b =>
                {
                    b.Navigation("VendorsSupported");
                });

            modelBuilder.Entity("Prime.Models.CommunitySite", b =>
                {
                    b.Navigation("BusinessLicences");

                    b.Navigation("SiteVendors");
                });
#pragma warning restore 612, 618
        }
    }
}
