# This workflow will build all of the necessary components for the PRIME 
# application, with the respective images pushed and stored in the project's
# tools namespace.
#
# Images are then deployed to the respective OpenShift namespace via the
# prime-app-template.yml in the infrastructure folder.

name: Build PRIME from Master branch and Deploy to OpenShift Image Registry

on:
  push:
    branches:
      - master

  workflow_dispatch:
    branches:
      - master

jobs:
  build-document-manager-backend:
    runs-on: ubuntu-20.04
    environment: Production
    env:
      BUILD_LOGLEVEL: "2"
      SERVICE_NAME: document-manager
      CONTAINER_NAME: prime-document-manager
      IMAGE_TAG: prod
      
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v2

      - name: "Login to OpenShift repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
          password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

      - name: "Login to RedHat container repository"
        uses: docker/login-action@v1
        with: 
          registry: ${{secrets.REDHAT_REGISTRY_URL}}
          username: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_USER}}
          password: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_AUTH_TOKEN}}

      - name: "Build, tag and push Document Manager image"
        id: build-image
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          BUILD_LOGLEVEL: 2
        run: |
          docker-compose -f oc4-compose.yml build --force-rm --no-cache \
            --build-arg=$BUILD_LOGLEVEL \
            $SERVICE_NAME
          docker tag moh-prime_$SERVICE_NAME ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/$CONTAINER_NAME:$IMAGE_TAG
          docker image push ${{secrets.OPENSHIFT_IMAGE_REGISTRY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/$CONTAINER_NAME:$IMAGE_TAG

  build-backend:
    runs-on: ubuntu-20.04
    environment: Production
    env:
      SERVICE_NAME: dotnet-webapi
      CONTAINER_NAME: prime-webapi-backend
      IMAGE_TAG: prod
      
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v2

      - name: "Login to OpenShift repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
          password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

      - name: "Login to RedHat container repository"
        uses: docker/login-action@v1
        with: 
          registry: ${{secrets.REDHAT_REGISTRY_URL}}
          username: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_USER}}
          password: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_AUTH_TOKEN}}

      - name: "Build, tag and push .NET web API image"
        id: build-image
        env:
          PRIME_DB_PASSWORD: ${{secrets.PRIME_DB_PASSWORD}}
          PRIME_DB_USER: ${{secrets.PRIME_DB_USER}}
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |
          docker-compose -f oc4-compose.yml build --force-rm --no-cache \
            --build-arg DB_HOST=primedb-pr-$PR_NUMBER \
            --build-arg PGPASSWORD=$PRIME_DB_PASSWORD \
            --build-arg POSTGRESQL_ADMIN_PASSWORD=$PRIME_DB_PASSWORD \
            --build-arg POSTGRESQL_USERNAME=$PRIME_DB_USER \
            --build-arg POSTGRESQL_DATABASE=postgres \
            --build-arg DB_CONNECTION_STRING="host=prime-postgresql-db;port=5432;database=postgres;username=$PRIME_DB_USER;password=$PRIME_DB_PASSWORD" \
            --build-arg ASPNETCORE_HTTPS_PORT=5001 \
            --build-arg ASPNETCORE_ENVIRONMENT="Development" \
            --build-arg ASPNETCORE_URLS="http://+:8080" \
            --build-arg DOTNET_CLI_HOME="/tmp/DOTNET_CLI_HOME" \
            $SERVICE_NAME
          docker tag moh-prime_$SERVICE_NAME ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/$CONTAINER_NAME:$IMAGE_TAG
          docker image push ${{secrets.OPENSHIFT_IMAGE_REGISTRY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/$CONTAINER_NAME:$IMAGE_TAG

  build-frontend:
    runs-on: ubuntu-20.04
    environment: Production
    env:
      SERVICE_NAME: nginx-angular
      CONTAINER_NAME: prime-frontend
      IMAGE_TAG: prod
      JWT_WELL_KNOWN_CONFIG: "https://oidc.gov.bc.ca/auth/realms/v4mbqqas/.well-known/openid-configuration"
      KEYCLOAK_CLIENT_ID: "prime-application-prod"
      KEYCLOAK_URL: "https://oidc.gov.bc.ca/auth"
      KEYCLOAK_REALM: "v4mbqqas"
      REDIRECT_URL: "https://prime-frontend-${{secrets.OPENSHIFT_LICENSE_PLATE}}-prod.apps.silver.devops.gov.bc.ca"
      
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v2

      - name: "Login to OpenShift repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
          password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

      - name: "Login to RedHat container repository"
        uses: docker/login-action@v1
        with: 
          registry: ${{secrets.REDHAT_REGISTRY_URL}}
          username: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_USER}}
          password: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_AUTH_TOKEN}}

      - name: "Build, tag & push Angular frontend image"
        id: build-image
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: |
          docker-compose -f oc4-compose.yml build --force-rm --no-cache \
            --build-arg JWT_WELL_KNOWN_CONFIG=$JWT_WELL_KNOWN_CONFIG \
            --build-arg KEYCLOAK_URL=$KEYCLOAK_URL \
            --build-arg KEYCLOAK_REALM=$KEYCLOAK_REALM \
            --build-arg KEYCLOAK_CLIENT_ID=$KEYCLOAK_CLIENT_ID \
            --build-arg REDIRECT_URL=$REDIRECT_URL \
            $SERVICE_NAME
          docker tag moh-prime_$SERVICE_NAME ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/$CONTAINER_NAME:$IMAGE_TAG
          docker image push ${{secrets.OPENSHIFT_IMAGE_REGISTRY}}/${{secrets.OPENSHIFT_TOOLS_NAMESPACE}}/$CONTAINER_NAME:$IMAGE_TAG
