name: CodeClimate-Checks
on: [ pull_request ]
  # push:
  #   branches:
  #     - innovate/code-climate
  # pull_request:
  #   branches:
  #     - develops

jobs:
  collect-frontend-coverage:
    defaults:
      run:
        working-directory: ./prime-angular-frontend
  
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/prime-angular-frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: 7b2162da9980320cb4c73c88d894c3743f11138a474509c015a1b2db1e04bde3
          cc_test_reporter_version: latest  # optional

      - run: cc-test-reporter before-build

      - name: npm ci and npm run test
        run: |
          npm ci
          npm run test

      - name: Collect Frontend Report
        run: |
          cc-test-reporter format-coverage -t lcov -o coverage/frontend.json coverage/lcov.info
      
      - name: Create frontend coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: ./prime-angular-frontend/coverage/frontend.json


  
  collect-backend-coverage:
    needs: collect-frontend-coverage

    defaults:
      run:
        working-directory: ./prime-dotnet-webapi-tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: ['3.1.411']

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core 3.1.411
        uses: actions/setup-dotnet@v1
        with:
          # Semantic version range syntax or exact version of a dotnet version
          dotnet-version: '3.1.411'

      - name: Display dotnet version
        run: |
          cd ../
          dotnet --version

      - name: Install dependencies
        run: |
          cd ../
          dotnet restore

      - name: Install ReportGenerator
        run: |
          cd ../
          dotnet tool install -g dotnet-reportgenerator-globaltool 
        
      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: 7b2162da9980320cb4c73c88d894c3743f11138a474509c015a1b2db1e04bde3
          cc_test_reporter_version: latest  # optional

      - run: cc-test-reporter before-build

      - name: Generate coverage report
        run: |
          # cd ./prime-dotnet-webapi-tests/
          # dotnet test /p:CollectCoverage=true /p:CoverletOutput=coverage/ /p:CoverletOutputFormat=lcov --filter FullyQualifiedName\!~Integration < /dev/null
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude=[xunit.*]* --filter FullyQualifiedName\!~Integration

      - name: Run report generator
        run: |
          reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:coverage" -reporttype:lcov -verbosity:Error

      - name: Collect Backend Report
        run: |
          cc-test-reporter format-coverage -t lcov -o coverage/backend.json coverage/lcov.info

      - name: Create backend coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: ./prime-dotnet-webapi-tests/coverage/backend.json

  codeclimate-sum-coverage:
    needs: [ collect-frontend-coverage, collect-backend-coverage ]

    runs-on: ubuntu-latest

    steps:
      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: 7b2162da9980320cb4c73c88d894c3743f11138a474509c015a1b2db1e04bde3
          cc_test_reporter_version: latest  # optional

      - name: Download frontend artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend
          # path: frontend/

      - name: Download backend artifact
        uses: actions/download-artifact@v2
        with:
          name: backend
          # path: backend/

      - name: Sum files
        run: |          
          # cc-test-reporter sum-coverage -p 2 frontend/frontend.json backend/backend.json
          cc-test-reporter sum-coverage -p 2 frontend.json backend.json
          cc-test-reporter upload-coverage
      
      - name: Create summed report
        uses: actions/upload-artifact@v2
        with:
          name: summed
          path: ./coverage/codeclimate.json
