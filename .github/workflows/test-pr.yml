name: CodeClimate-Checks
on: [ pull_request ]
  # push:
  #   branches:
  #     - innovate/code-climate
  # pull_request:
  #   branches:
  #     - develops

jobs:
  collect-frontend-coverage:
    defaults:
      run:
        working-directory: ./prime-angular-frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/prime-angular-frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: 7b2162da9980320cb4c73c88d894c3743f11138a474509c015a1b2db1e04bde3
          cc_test_reporter_version: latest  # optional

      - run: cc-test-reporter before-build

      - name: npm ci and npm run test
        run: |
          npm ci
          npm run test

      # - run: cc-test-reporter after-build -t lcov
      - name: Collect Frontend Report
        run: cc-test-reporter format-coverage COVERAGE_FILE coverage/lcov.info -t lcov

  
  collect-backend-coverage:
    needs: collect-frontend-coverage
    defaults:
      run:
        working-directory: ./prime-dotnet-webapi-tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: ['3.1.411']

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core 3.1.411
        uses: actions/setup-dotnet@v1
        with:
          # Semantic version range syntax or exact version of a dotnet version
          dotnet-version: '3.1.411'
      - name: Display dotnet version
        run: |
          cd ../
          dotnet --version

      - name: Install dependencies
        run: |
          cd ../
          dotnet restore

      - name: Install ReportGenerator
        run: |
          cd ../
          dotnet tool install -g dotnet-reportgenerator-globaltool 
        
      - uses: amancevice/setup-code-climate@v0
        with:
          cc_test_reporter_id: 7b2162da9980320cb4c73c88d894c3743f11138a474509c015a1b2db1e04bde3
          cc_test_reporter_version: latest  # optional

      - run: cc-test-reporter before-build

      - name: Generate coverage report
        run: |
          # cd ./prime-dotnet-webapi-tests/
          # dotnet test /p:CollectCoverage=true /p:CoverletOutput=coverage/ /p:CoverletOutputFormat=lcov --filter FullyQualifiedName\!~Integration < /dev/null
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Exclude=[xunit.*]* --filter FullyQualifiedName\!~Integration < /dev/null

      - name: Check Files
        run: |
          # cd ./prime-dotnet-webapi-tests/coverage
          # cd ./coverage
          # mv "coverage.info" "lcov.info"
          dir
          # cd ../
          reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:coverage" -reporttype:lcov -verbosity:Error
      - name: After test reporter
        run: |
          # cd ./prime-dotnet-webapi-tests/
          cc-test-reporter format-coverage COVERAGE_FILE coverage/lcov.info -t lcov
          cc-test-reporter sum-coverage -p 2
          cc-test-reporter upload-coverage
