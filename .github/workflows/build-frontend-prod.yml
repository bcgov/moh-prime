name: Build PR
# Build all of the necessary components for the PRIME application from PullRequest branch. Images are then deployed to Dev environment via the prime-app-ephemeral-template.yml in the infrastructure folder
on:
  push:
    branches:
    - master
    paths:
    - moh-prime/prime-angular-frontend/

  workflow_dispatch:
    branches:
    - master

jobs:
  build-frontend:
    runs-on: ubuntu-20.04
    environment: Production
    defaults:
      run:
        working-directory: prime-angular-frontend
    steps:
    - name: "Checkout the repo"
      uses: actions/checkout@v3

    - uses: actions/setup-node@v2
      with:
        node-version: '16.14.0'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.frontend-cache
        key: prime-frontend-${{ github.sha }}
        restore-keys: |
          prime-frontend-

    - name: "Login to OpenShift repository"
      uses: docker/login-action@v2
      with:
        registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
        username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
        password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

    - name: install yarn
      run: npm install -g yarn

    - run: yarn global add @angular/compiler-cli
    - run: yarn global add @angular/cli

    - name: install dependencies
      run: yarn

    - name: build frontend
      run: yarn run build

    - name: "Build Angular frontend image"
      run: |
        docker build . \
        --file ci.dockerfile \
        --tag prime-angular-frontend

    - name: "Docker tag and push Angular frontend image"
      run: |
        docker tag prime-angular-frontend ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/prime-frontend:prod
        docker push ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/prime-frontend:prod

  apply-oc-template:
    runs-on: ubuntu-20.04
    environment: Development
    needs: [build-document-manager-backend, build-frontend, build-backend]
    steps:
    - name: "Use the OpenShift template"
      uses: actions/checkout@v3

    - name: Install OC
      uses: redhat-actions/openshift-tools-installer@v1
      with:
        oc: "4.6"

    - name: Authenticate and set context
      uses: redhat-actions/oc-login@v1.1
      with:
        openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL}}
        openshift_token: ${{secrets.OPENSHIFT_SERVICE_TOKEN}}
        namespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{secrets.OPENSHIFT_ENVIRONMENT}}

    - name: "Get current pull request"
      uses: 8BitJonny/gh-get-current-pr@2.2.0
      id: PR
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        filterOutClosed: true

    - name: "Process template"
      id: oc
      run: |
        oc process -f infrastructure/frontend-template.yml \
          -p ASP_ENV=Production \
          -p VANITY_URL=pharmanetenrolment.gov.bc.ca \
          -p IMAGE_TAG=prod \
          -p SVC_NAME=prod \
          -p OC_LICENSE_PLATE=${{secrets.OPENSHIFT_LICENSE_PLATE}} \
          -p OC_ENV=${{secrets.OPENSHIFT_ENVIRONMENT}} \
          -p URL_STUB=-${{secrets.OPENSHIFT_LICENSE_PLATE}}-prod.apps.silver.devops.gov.bc.ca \
          -p WEB_PORT=8080 \
          -p HPR_URL=healthpractitionerregistration.apps.silver.devops.gov.bc.ca \
          -p MAUTH_URL=prod-mauth-${{secrets.OPENSHIFT_LICENSE_PLATE}}-prod.apps.silver.devops.gov.bc.ca \
          -n ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{secrets.OPENSHIFT_ENVIRONMENT}} | oc apply -n ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{secrets.OPENSHIFT_ENVIRONMENT}} -f -
