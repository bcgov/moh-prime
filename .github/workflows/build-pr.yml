name: Build PR
# Build all of the necessary components for the PRIME application from PullRequest branch. Images are then deployed to Dev environment via the prime-app-ephemeral-template.yml in the infrastructure folder
on:
  push:
    branches-ignore: 
      - 'develop'
      - 'test'
      - 'master'
  workflow_dispatch:
  pull_request:
    branches-ignore:
      - 'develop'
      - 'test'
      - 'master'
jobs:
  build-document-manager-backend:
    runs-on: ubuntu-20.04
    environment: Development
    env:
      BUILD_LOGLEVEL: "2"
      SERVICE_NAME: document-manager
      CONTAINER_NAME: prime-document-manager
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.docman-cache
          key: prime-docman-${{ github.sha }}
          restore-keys: |
            prime-docman-

      - name: "Login to OpenShift repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
          password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

      - name: "Login to RedHat container repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.REDHAT_REGISTRY_URL}}
          username: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_USER}}
          password: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_AUTH_TOKEN}}

      - name: "Get current pull request"
        id: PR
        uses: 8BitJonny/gh-get-current-pr@1.0.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          filterOutClosed: true

      - name: "Build, tag and push Document Manager image"
        uses: docker/build-push-action@v2
        id: build-image
        with: 
          context:  document-manager/backend
          push: true
          file: document-manager/backend/openshift.dockerfile
          tags: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/prime-document-manager:pr-${{steps.PR.outputs.number}}
          build-args: |
            BUILD_LOGLEVEL=2
            SVC_NAME=pr-${{steps.PR.outputs.number}}
          cache-from: type=local,src=/tmp/.docman-cache
          cache-to: type=local,dest=/tmp/.docman-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.docman-cache
          mv /tmp/.docman-cache-new /tmp/.docman-cache

  build-backend:
    runs-on: ubuntu-20.04
    environment: Development
    env:
      SERVICE_NAME: dotnet-webapi
      CONTAINER_NAME: prime-webapi-backend
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.backend-cache
          key: prime-backend-${{ github.sha }}
          restore-keys: |
            prime-backend-

      - name: "Login to OpenShift repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
          password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

      - name: "Login to RedHat container repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.REDHAT_REGISTRY_URL}}
          username: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_USER}}
          password: ${{secrets.REDHAT_REGISTRY_SERVICE_ACCOUNT_AUTH_TOKEN}}

      - name: "Get current pull request"
        uses: 8BitJonny/gh-get-current-pr@1.0.1
        id: PR
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          filterOutClosed: true

      - name: "Build, tag and push .NET web API image"
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: prime-dotnet-webapi
          push: true
          file: prime-dotnet-webapi/openshift.dockerfile
          tags: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/prime-webapi-backend:pr-${{steps.PR.outputs.number}}
          build-args:
            ASPNETCORE_ENVIRONMENT="Development"
            ASPNETCORE_HTTPS_PORT=5001
            ASPNETCORE_URLS="http://+:8080"
            DB_CONNECTION_STRING="host=pr-${{steps.PR.outputs.number}}-postgres-db;port=5432;database=${{secrets.PRIME_DB_USER}}-${{steps.PR.outputs.number}};username=${{secrets.PRIME_DB_USER}};password=${{secrets.PRIME_DB_PASSWORD}}"
            DB_HOST=pr-${{steps.PR.outputs.number}}-postgres-db
            DOTNET_CLI_HOME="/tmp/DOTNET_CLI_HOME"
            PGPASSWORD=${{secrets.PRIME_DB_PASSWORD}}
            POSTGRESQL_ADMIN_PASSWORD=${{secrets.PRIME_DB_PASSWORD}}
            POSTGRESQL_DATABASE=${{secrets.PRIME_DB_USER}}-${{steps.PR.outputs.number}}
            POSTGRESQL_USERNAME=${{secrets.PRIME_DB_USER}}
            SVC_NAME="pr-${{steps.PR.outputs.number}}"
          cache-from: type=local,src=/tmp/.backend-cache
          cache-to: type=local,dest=/tmp/.backend-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.backend-cache
          mv /tmp/.backend-cache-new /tmp/.backend-cache

  build-frontend:
    runs-on: ubuntu-latest
    environment: Development
    defaults:
      run:
        working-directory: prime-angular-frontend
    steps:
      - name: "Checkout the repo"
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          cache: 'npm'
          cache-dependency-path: prime-angular-frontend/package-lock.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.frontend-cache
          key: prime-frontend-${{ github.sha }}
          restore-keys: |
            prime-frontend-

      - name: "Login to OpenShift repository"
        uses: docker/login-action@v1
        with:
          registry: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}
          username: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_USERNAME}}
          password: ${{secrets.OPENSHIFT_TOOLS_SERVICE_ACCOUNT_PASSWORD}}

      - name: "Get current pull request"
        uses: 8BitJonny/gh-get-current-pr@1.0.1
        id: PR
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          filterOutClosed: true

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - run: npm install -g ngcc

      - name: install dependencies
        run: npm ci --production

      - run: ngcc

      - name: build frontend
        run: npm run build

      - name: "Build, tag & push Angular frontend image"
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: prime-angular-frontend
          push: true
          file: prime-angular-frontend/ci.dockerfile
          tags: ${{secrets.OPENSHIFT_IMAGE_REPOSITORY}}/${{secrets.OPENSHIFT_LICENSE_PLATE}}-tools/prime-frontend:pr-${{steps.PR.outputs.number}}
          cache-from: type=local,src=/tmp/.frontend-cache
          cache-to: type=local,dest=/tmp/.frontend-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.frontend-cache
          mv /tmp/.frontend-cache-new /tmp/.frontend-cache

  apply-oc-template:
    runs-on: ubuntu-20.04
    environment: Development
    needs: [build-document-manager-backend,build-frontend,build-backend]
    steps:
      - name: "Use the OpenShift template"
        uses: actions/checkout@v2

      - name: Install OC
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.6"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1.1
        with:
          openshift_server_url: ${{secrets.OPENSHIFT_SERVER_URL}}
          openshift_token: ${{secrets.OPENSHIFT_SERVICE_TOKEN}}
          namespace: ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{secrets.OC_APP}}

      - name: "Get current pull request"
        uses: 8BitJonny/gh-get-current-pr@1.0.1
        id: PR
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          filterOutClosed: true

      - name: "Process template"
        id: oc
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
          PR_NUMBER: ${{steps.PR.outputs.number}}
        run: |
          echo PR_NUMBER=$PR_NUMBER
          oc process -f infrastructure/prime-app-ephemeral-template.yml \
            -p ASP_ENV=Development \
            -p FRONTEND_URL=pr-$PR_NUMBER \
            -p IMAGE_TAG=pr-$PR_NUMBER \
            -p SVC_NAME=pr-$PR_NUMBER \
            -p OC_NAMESPACE=${{secrets.OPENSHIFT_LICENSE_PLATE}} \
            -p OC_APP=${{secrets.OC_APP}} \
            -p URL_STUB=.pharmanetenrolment.gov.bc.ca \
            -p WEB_PORT=8080 \
            -n ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{secrets.OC_APP}} | oc apply -n ${{secrets.OPENSHIFT_LICENSE_PLATE}}-${{secrets.OC_APP}} -f -
