/* Jenkinsfile.promotion
 *
 * After merging the test branch into the master branch, this will work to 
 * build and deploy changes to the OpenShift production environment. This
 * will also include a deploy to our Demo site.
 * 
 * A deploy to test is not automatically performed - a merge from test
 * into master will need to be done, and then the deploy must be initiated
 * from Jenkins in the 'Release' project.
 *
 * Procedure:
 *  1. Promotion and simultaneous build and deployment of Master
 *      a. Build & deploy to Demo environment
 *      b. Build & deploy to Production environment
 *
 */

pipeline {
    agent none
    stages {
        stage('Promote Master to Demo & Production Environment') {
            options {
                timeout(time: 120, unit: 'MINUTES')   // timeout on this stage
            }
            // Build and deploy master simultaneously to both Demo and Production
            when { expression { ( BRANCH_NAME == 'master' ) } }
            parallel {
                stage('Build & Deploy Master to Demo') {
                    agent { label 'master' }
                    environment {
                            VANITY_URL="demo.pharmanetenrolment.gov.bc.ca"
                            SCHEMA="https"
                            PORT="8443"
                            FRONTEND_ARGS="-p REDIRECT_URL=${SCHEMA}://${VANITY_URL} -p VANITY_URL=${VANITY_URL}"
                            API_ARGS="-p ASPNETCORE_ENVIRONMENT=Release -p VANITY_URL=${VANITY_URL}"
                            SUFFIX="-demo"
                    }
                    steps {
                        script {
                            echo "Building (MASTER) for Demo ..."
                            sh "./player.sh build api test ${API_ARGS} -p SUFFIX='-demo'"
                            sh "./player.sh build frontend test ${FRONTEND_ARGS} -p SUFFIX='-demo'"
                            sh "./player.sh build document-manager test -p SUFFIX='-demo'"

                            echo "Deploying (MASTER) to Demo ..."
                            sh "./player.sh deploy postgres test -p SUFFIX='-demo'"
                            sh "./player.sh deploy redis test -p SUFFIX='-demo'"
                            // sh "./player.sh deploy mongo test -p SUFFIX='-demo'"
                            sh "./player.sh deploy api test ${API_ARGS} -p SUFFIX='-demo'"
                            sh "./player.sh deploy frontend test ${FRONTEND_ARGS} -p SUFFIX='-demo'"
                            sh "./player.sh deploy document-manager test -p SUFFIX='-demo' -p VOLUME_CAPACITY=1Gi -p VANITY_URL=${VANITY_URL}"
                        }
                    }
                }
                stage('Build & Deploy Master to Production') {
                    agent { label 'master' }
                    steps {
                        script {
                            echo "Building (MASTER) branch for Production..."
                            sh "./player.sh build api prod"
                            sh "./player.sh build frontend prod"
                            sh "./player.sh build document-manager prod"

                            echo "Deploying (MASTER) branch to Production..."
                            sh "./player.sh deploy postgres prod"
                            sh "./player.sh deploy redis prod"
                            sh "./player.sh deploy api prod"
                            sh "./player.sh deploy frontend prod"
                            sh "./player.sh deploy document-manager prod"
                            sh "./player.sh toolbelt schemaspy prod"
                        }
                    }
                }
            }
        }
    }
}
