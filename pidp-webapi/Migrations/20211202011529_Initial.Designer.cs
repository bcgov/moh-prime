// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pidp.Data;

#nullable disable

namespace Pidp.Migrations
{
    [DbContext(typeof(PidpDbContext))]
    [Migration("20211202011529_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pidp.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CountryCode")
                        .HasColumnType("integer");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProvinceCode")
                        .HasColumnType("integer");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("ProvinceCode");

                    b.ToTable("Address");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Address");
                });

            modelBuilder.Entity("Pidp.Models.Lookups.Country", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CountryLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            Name = "Canada"
                        },
                        new
                        {
                            Code = 2,
                            Name = "United States"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Lookups.Province", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<int>("CountryCode")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("ProvinceLookup");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            CountryCode = 1,
                            Name = "Alberta"
                        },
                        new
                        {
                            Code = 2,
                            CountryCode = 1,
                            Name = "British Columbia"
                        },
                        new
                        {
                            Code = 3,
                            CountryCode = 1,
                            Name = "Manitoba"
                        },
                        new
                        {
                            Code = 4,
                            CountryCode = 1,
                            Name = "New Brunswick"
                        },
                        new
                        {
                            Code = 5,
                            CountryCode = 1,
                            Name = "Newfoundland and Labrador"
                        },
                        new
                        {
                            Code = 6,
                            CountryCode = 1,
                            Name = "Nova Scotia"
                        },
                        new
                        {
                            Code = 7,
                            CountryCode = 1,
                            Name = "Ontario"
                        },
                        new
                        {
                            Code = 8,
                            CountryCode = 1,
                            Name = "Prince Edward Island"
                        },
                        new
                        {
                            Code = 9,
                            CountryCode = 1,
                            Name = "Quebec"
                        },
                        new
                        {
                            Code = 10,
                            CountryCode = 1,
                            Name = "Saskatchewan"
                        },
                        new
                        {
                            Code = 11,
                            CountryCode = 1,
                            Name = "Northwest Territories"
                        },
                        new
                        {
                            Code = 12,
                            CountryCode = 1,
                            Name = "Nunavut"
                        },
                        new
                        {
                            Code = 13,
                            CountryCode = 1,
                            Name = "Yukon"
                        },
                        new
                        {
                            Code = 14,
                            CountryCode = 2,
                            Name = "Alabama"
                        },
                        new
                        {
                            Code = 15,
                            CountryCode = 2,
                            Name = "Alaska"
                        },
                        new
                        {
                            Code = 16,
                            CountryCode = 2,
                            Name = "American Samoa"
                        },
                        new
                        {
                            Code = 17,
                            CountryCode = 2,
                            Name = "Arizona"
                        },
                        new
                        {
                            Code = 18,
                            CountryCode = 2,
                            Name = "Arkansas"
                        },
                        new
                        {
                            Code = 19,
                            CountryCode = 2,
                            Name = "California"
                        },
                        new
                        {
                            Code = 20,
                            CountryCode = 2,
                            Name = "Colorado"
                        },
                        new
                        {
                            Code = 21,
                            CountryCode = 2,
                            Name = "Connecticut"
                        },
                        new
                        {
                            Code = 22,
                            CountryCode = 2,
                            Name = "Delaware"
                        },
                        new
                        {
                            Code = 23,
                            CountryCode = 2,
                            Name = "District of Columbia"
                        },
                        new
                        {
                            Code = 24,
                            CountryCode = 2,
                            Name = "Florida"
                        },
                        new
                        {
                            Code = 25,
                            CountryCode = 2,
                            Name = "Georgia"
                        },
                        new
                        {
                            Code = 26,
                            CountryCode = 2,
                            Name = "Guam"
                        },
                        new
                        {
                            Code = 27,
                            CountryCode = 2,
                            Name = "Hawaii"
                        },
                        new
                        {
                            Code = 28,
                            CountryCode = 2,
                            Name = "Idaho"
                        },
                        new
                        {
                            Code = 29,
                            CountryCode = 2,
                            Name = "Illinois"
                        },
                        new
                        {
                            Code = 30,
                            CountryCode = 2,
                            Name = "Indiana"
                        },
                        new
                        {
                            Code = 31,
                            CountryCode = 2,
                            Name = "Iowa"
                        },
                        new
                        {
                            Code = 32,
                            CountryCode = 2,
                            Name = "Kansas"
                        },
                        new
                        {
                            Code = 33,
                            CountryCode = 2,
                            Name = "Kentucky"
                        },
                        new
                        {
                            Code = 34,
                            CountryCode = 2,
                            Name = "Louisiana"
                        },
                        new
                        {
                            Code = 35,
                            CountryCode = 2,
                            Name = "Maine"
                        },
                        new
                        {
                            Code = 36,
                            CountryCode = 2,
                            Name = "Maryland"
                        },
                        new
                        {
                            Code = 37,
                            CountryCode = 2,
                            Name = "Massachusetts"
                        },
                        new
                        {
                            Code = 38,
                            CountryCode = 2,
                            Name = "Michigan"
                        },
                        new
                        {
                            Code = 39,
                            CountryCode = 2,
                            Name = "Minnesota"
                        },
                        new
                        {
                            Code = 40,
                            CountryCode = 2,
                            Name = "Mississippi"
                        },
                        new
                        {
                            Code = 41,
                            CountryCode = 2,
                            Name = "Missouri"
                        },
                        new
                        {
                            Code = 42,
                            CountryCode = 2,
                            Name = "Montana"
                        },
                        new
                        {
                            Code = 43,
                            CountryCode = 2,
                            Name = "Nebraska"
                        },
                        new
                        {
                            Code = 44,
                            CountryCode = 2,
                            Name = "Nevada"
                        },
                        new
                        {
                            Code = 45,
                            CountryCode = 2,
                            Name = "New Hampshire"
                        },
                        new
                        {
                            Code = 46,
                            CountryCode = 2,
                            Name = "New Jersey"
                        },
                        new
                        {
                            Code = 47,
                            CountryCode = 2,
                            Name = "New Mexico"
                        },
                        new
                        {
                            Code = 48,
                            CountryCode = 2,
                            Name = "New York"
                        },
                        new
                        {
                            Code = 49,
                            CountryCode = 2,
                            Name = "North Carolina"
                        },
                        new
                        {
                            Code = 50,
                            CountryCode = 2,
                            Name = "North Dakota"
                        },
                        new
                        {
                            Code = 51,
                            CountryCode = 2,
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Code = 52,
                            CountryCode = 2,
                            Name = "Ohio"
                        },
                        new
                        {
                            Code = 53,
                            CountryCode = 2,
                            Name = "Oklahoma"
                        },
                        new
                        {
                            Code = 54,
                            CountryCode = 2,
                            Name = "Oregon"
                        },
                        new
                        {
                            Code = 55,
                            CountryCode = 2,
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            Code = 56,
                            CountryCode = 2,
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Code = 57,
                            CountryCode = 2,
                            Name = "Rhode Island"
                        },
                        new
                        {
                            Code = 58,
                            CountryCode = 2,
                            Name = "South Carolina"
                        },
                        new
                        {
                            Code = 59,
                            CountryCode = 2,
                            Name = "South Dakota"
                        },
                        new
                        {
                            Code = 60,
                            CountryCode = 2,
                            Name = "Tennessee"
                        },
                        new
                        {
                            Code = 61,
                            CountryCode = 2,
                            Name = "Texas"
                        },
                        new
                        {
                            Code = 62,
                            CountryCode = 2,
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Code = 63,
                            CountryCode = 2,
                            Name = "Utah"
                        },
                        new
                        {
                            Code = 64,
                            CountryCode = 2,
                            Name = "Vermont"
                        },
                        new
                        {
                            Code = 65,
                            CountryCode = 2,
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Code = 66,
                            CountryCode = 2,
                            Name = "Virginia"
                        },
                        new
                        {
                            Code = 67,
                            CountryCode = 2,
                            Name = "Washington"
                        },
                        new
                        {
                            Code = 68,
                            CountryCode = 2,
                            Name = "West Virginia"
                        },
                        new
                        {
                            Code = 69,
                            CountryCode = 2,
                            Name = "Wisconsin"
                        },
                        new
                        {
                            Code = 70,
                            CountryCode = 2,
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("Pidp.Models.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<LocalDate>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Party");
                });

            modelBuilder.Entity("Pidp.Models.PartyAddress", b =>
                {
                    b.HasBaseType("Pidp.Models.Address");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.HasIndex("PartyId")
                        .IsUnique();

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue("PartyAddress");
                });

            modelBuilder.Entity("Pidp.Models.Address", b =>
                {
                    b.HasOne("Pidp.Models.Lookups.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pidp.Models.Lookups.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Province");
                });

            modelBuilder.Entity("Pidp.Models.PartyAddress", b =>
                {
                    b.HasOne("Pidp.Models.Party", "Party")
                        .WithOne("PhysicalAddress")
                        .HasForeignKey("Pidp.Models.PartyAddress", "PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("Pidp.Models.Party", b =>
                {
                    b.Navigation("PhysicalAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
