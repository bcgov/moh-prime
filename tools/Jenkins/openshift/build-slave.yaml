---
apiVersion: template.openshift.io/v1
kind: Template
labels:
  app: jenkins-prod
metadata:
  creationTimestamp: null
  name: jenkins
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      shared: "true"
    name: ${NAME}-slave-${SLAVE_NAME}
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}-slave-${SLAVE_NAME}${SUFFIX}
  spec:
    completionDeadlineSeconds: 600
    failedBuildsHistoryLimit: 3
    successfulBuildsHistoryLimit: 3
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}-slave-${SLAVE_NAME}:${VERSION}
    postCommit: {}
    resources:
      limits:
        cpu: 2000m
        memory: 2Gi
      requests:
        cpu: 1000m
        memory: 1Gi
    runPolicy: SerialLatestOnly
    source:
      dockerfile: |
        FROM BuildConfig
        ARG NODE_VERSION=v10.16.0
        ARG SONAR_VERSION=3.3.0.1492
        USER 0
        RUN fix_permission() { while [[ $# > 0 ]] ; do chgrp -R 0 "$1" && chmod -R g=u "$1"; shift; done } && \
            set -x && \
            curl -sSL -o /tmp/sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_VERSION}-linux.zip && \
            unzip /tmp/sonar-scanner-cli.zip -d /tmp/sonar-scanner-cli && \
            mv /tmp/sonar-scanner-cli/sonar-scanner-${SONAR_VERSION}-linux /opt/sonar-scanner && \
            ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin && \
            rm -rf /tmp/sonar-scanner-cli.zip && \
            rm -rf /tmp/sonar-scanner-cli && \
            curl -sSL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.xz | tar -Jx -C /opt && \
            mv /opt/node-${NODE_VERSION}-linux-x64 /opt/node && \
            fix_permission '/opt/sonar-scanner' '/opt/node'
        ENV NODE_HOME=/opt/node \
            PATH=$PATH:/opt/node/bin
        USER 1001
      type: Dockerfile
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: ${SOURCE_IMAGE_STREAM_TAG}
          namespace: ${SOURCE_IMAGE_STREAM_NAMESPACE}
      type: Docker
  triggers:
    - imageChange: {}
      type: ImageChange
parameters:
- name: NAME
  description: A name used for all objects
  displayName: Name
  required: true
  value: jenkins
- name: SUFFIX
  description: A name suffix used for all objects
  displayName: Suffix
  value: "-0"
- name: VERSION
  description: A version used for the image tags
  displayName: version
  required: true
  value: latest
- name: SLAVE_NAME
  value: build
- name: SOURCE_IMAGE_STREAM_NAMESPACE
  value: ""
- name: SOURCE_IMAGE_STREAM_TAG
  required: true
  value: "jenkins:prod-1.0.0"
- name: SOURCE_GIT_URL
  value: https://github.com/bcdevops/nr-showcase-devops-tools
- name: SOURCE_GIT_REF
  value: master
- name: SOURCE_CONTEXT_DIR
  value: .jenkins/docker-slave