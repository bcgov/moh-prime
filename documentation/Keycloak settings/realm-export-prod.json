{
  "id": "v4mbqqas",
  "realm": "v4mbqqas",
  "displayName": "PharmaNet",
  "displayNameHtml": "<a>PharmaNet</a>",
  "notBefore": 0,
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "a44432b1-041a-4a63-87d8-a4ee3f287cf6",
        "name": "feature_community_pharmacist",
        "description": "Community Pharmacist feature flag",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "ced33b81-df4d-4cfe-a6c7-808bd6b68faa",
        "name": "prime_super_admin",
        "composite": true,
        "composites": {
          "realm": [
            "prime_admin"
          ]
        },
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "def9681d-e4c8-41cd-8909-81abbd6c2a33",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "5f4c16dd-507f-4e8f-b44a-b2a0e188f248",
        "name": "prime_readonly_admin",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "50b86721-60df-4e32-8f18-035e31844822",
        "name": "prime_admin",
        "description": "IDIR authenticated admin role",
        "composite": true,
        "composites": {
          "realm": [
            "prime_readonly_admin"
          ]
        },
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "839e1a7e-31a5-43bd-b303-8e8f6f00bbf6",
        "name": "feature_site_registration",
        "description": "Site Registration feature flag",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "2b8e448d-4e01-4700-95b8-e8448400fd90",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "24587706-4661-4ac5-924e-a2802a3ceca8",
        "name": "prime_user",
        "description": "BCSC authenticated primary application user",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "483c75d5-515c-41c1-a218-c2cfc625beaa",
        "name": "feature_health_authority",
        "description": "Health Authority feature flag",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      },
      {
        "id": "34c9742f-0ee4-4b9c-8418-d28a1eacfc83",
        "name": "external_hpdid_access",
        "description": "Access to the HPDID => GPID API endpoint",
        "composite": false,
        "clientRole": false,
        "containerId": "v4mbqqas",
        "attributes": {}
      }
    ],
    "client": {
      "aporeto": [
        {
          "id": "598aab6e-c7db-4b47-a81c-22ed857042e2",
          "name": "administrator",
          "composite": false,
          "clientRole": true,
          "containerId": "93781567-e1fe-47b5-9527-07ce3739558f",
          "attributes": {}
        },
        {
          "id": "cdf81818-4cf0-4674-870d-a09482439f4b",
          "name": "user",
          "composite": false,
          "clientRole": true,
          "containerId": "93781567-e1fe-47b5-9527-07ce3739558f",
          "attributes": {}
        },
        {
          "id": "fa6313c1-f44d-4c79-ae4d-7e802c55388b",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "93781567-e1fe-47b5-9527-07ce3739558f",
          "attributes": {}
        }
      ],
      "realm-management": [
        {
          "id": "c487e033-a3f2-4c74-88fd-f9f55d4ee52e",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "ea463c5f-1100-4a95-a9a6-c8bc5a0c27e1",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "bd314e94-7db4-48f4-951d-82bde3068276",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "b0bb8918-5716-47a5-a6dd-68ba767eb308",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "760a5cb0-420d-4d3a-859c-e073cf8bd110",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "c13a5b27-f803-4252-bed8-96b6033a4673",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "3d3089e7-2be5-455d-9289-a2a60e085061",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "f9bdb5b2-5244-43ae-957e-25a10acc83c9",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "29a16246-aee5-468e-9170-3a06c5fb4ea5",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "c383e7c1-8437-43e5-965e-eacde874c421",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "6e7fe5cc-25af-4aa1-bc65-ba01402259a7",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "dcfefc87-ab64-4bea-bbc1-af1ee04e046f",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "5854f33d-fb21-4ab2-8753-d02bab7a5496",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-events",
                "view-realm",
                "manage-events",
                "manage-authorization",
                "create-client",
                "manage-users",
                "query-users",
                "query-clients",
                "view-identity-providers",
                "view-clients",
                "query-groups",
                "manage-clients",
                "manage-realm",
                "view-authorization",
                "query-realms",
                "manage-identity-providers",
                "view-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "58a5e48f-b5a4-43d0-80a4-619d18e9a376",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "d0e8ca5b-6ce1-41ce-bcab-d9f6f14ed510",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "c03f9bb9-b563-49a7-82fa-15abb2b81bd8",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "cc391d58-5e2f-4578-b5ff-0287fc55a530",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        },
        {
          "id": "c4284b0f-bd71-463d-b011-176d86fd1afd",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
          "attributes": {}
        }
      ],
      "prime-pos-gpid": [],
      "prime-careconnect-access": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "6fcf1da9-3aca-454e-b886-b0275872cc45",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "27eb585f-a590-4b17-9b83-3df4c3f149b4",
          "attributes": {}
        }
      ],
      "prime-application-prod": [],
      "account": [
        {
          "id": "d0a6b618-fdb9-4ffb-94b4-1cf808e3c27b",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
          "attributes": {}
        },
        {
          "id": "f7900d78-824d-40cd-9280-34582ee85dae",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
          "attributes": {}
        },
        {
          "id": "25b1132c-e0f2-4331-9fd5-26a794b25256",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
          "attributes": {}
        },
        {
          "id": "d6aeddac-ab42-44c9-a299-fdec3936fdb0",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
          "attributes": {}
        },
        {
          "id": "5d279a55-7c6e-454f-8fbb-bb95862256ec",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
          "attributes": {}
        },
        {
          "id": "3a16d67a-694f-4a27-be61-df194e129a54",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
          "attributes": {}
        }
      ],
      "prime-document-manager": []
    }
  },
  "groups": [
    {
      "id": "a70ff07f-9479-4941-8c49-0b257d5b7a34",
      "name": "Realm Administrator",
      "path": "/Realm Administrator",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {
        "realm-management": [
          "realm-admin"
        ]
      },
      "subGroups": []
    }
  ],
  "defaultRoles": [
    "offline_access",
    "uma_authorization"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "8bc523f0-2959-40c8-b358-55679af3097a",
      "createdTimestamp": 1569361536334,
      "username": "service-account-aporeto",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "email": "service-account-aporeto@placeholder.org",
      "serviceAccountClientId": "aporeto",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "aporeto": [
          "uma_protection"
        ],
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "bca9d4cb-8e2c-4c84-8620-481bcaa72058",
      "createdTimestamp": 1606186009728,
      "username": "service-account-prime-careconnect-access",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "prime-careconnect-access",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "external_hpdid_access"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "e1bf0ad2-e280-4138-af0e-5493b91fa411",
      "createdTimestamp": 1591908446568,
      "username": "service-account-prime-document-manager",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "email": "service-account-prime-document-manager@placeholder.org",
      "serviceAccountClientId": "prime-document-manager",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "92bb3ed7-75d0-4941-872d-2c7bc0630060",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/v4mbqqas/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "defaultRoles": [
        "view-profile",
        "manage-account"
      ],
      "redirectUris": [
        "/realms/v4mbqqas/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bd423d82-7837-4214-bfcf-7066e4b9ca90",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/v4mbqqas/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/realms/v4mbqqas/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "5a2a23e2-c943-4ebb-8a2f-67a0157e1d05",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "identity_provider",
        "address",
        "profile",
        "roles",
        "identity_assurance_level",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "5cacaf6e-8653-490d-84d9-45df6fe80024",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "93781567-e1fe-47b5-9527-07ce3739558f",
      "clientId": "aporeto",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://console.aporeto.com/popup/oidc-verify"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "67ca214e-82aa-4bfe-83ac-2964b9689ebe",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f8dc6793-29f8-4fa5-ad16-ff456a0fd810",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "196ff9ef-91ac-48c7-9da2-3216ecad6cca",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Default Resource",
            "type": "urn:aporeto:resources:default",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "8a03fa3c-b2f2-43ac-968c-8166a2ebe610",
            "uris": [
              "/*"
            ]
          }
        ],
        "policies": [
          {
            "id": "d494cf33-f910-47ea-a35a-468e5b05206d",
            "name": "Default Policy",
            "description": "A policy that grants access only for users within this realm",
            "type": "js",
            "logic": "POSITIVE",
            "decisionStrategy": "AFFIRMATIVE",
            "config": {
              "code": "// by default, grants any permission associated with this policy\n$evaluation.grant();\n"
            }
          },
          {
            "id": "5a130690-757d-4f31-9117-5b4475929e9e",
            "name": "Default Permission",
            "description": "A permission that applies to the default resource type",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "defaultResourceType": "urn:aporeto:resources:default",
              "applyPolicies": "[\"Default Policy\"]"
            }
          }
        ],
        "scopes": [],
        "decisionStrategy": "UNANIMOUS"
      }
    },
    {
      "id": "27eb585f-a590-4b17-9b83-3df4c3f149b4",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "566a6209-5abc-437a-99b9-74428b9b5457",
      "clientId": "prime-application-prod",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://pharmanetenrolment.gov.bc.ca/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "login_theme": "bcgov",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "20f35322-7249-4534-97eb-9e386fa11c4e",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "689674b8-11e2-4e3e-b498-c46d6c68d39c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0dfa8e2b-10c8-419f-a7e6-cb7dc060860c",
          "name": "feature-site_registration",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-role-mapper",
          "consentRequired": false,
          "config": {
            "role": "feature_site_registration"
          }
        },
        {
          "id": "d0745dc9-a4bd-48cf-8006-2d8359c23a81",
          "name": "feature-community_pharmacy",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-role-mapper",
          "consentRequired": false,
          "config": {
            "role": "feature_community_pharmacist"
          }
        },
        {
          "id": "0befb97b-5a9a-46d1-80b2-74a4d8cc3d88",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8f469cc7-2526-4e08-8e90-4bcfe5a826fb",
          "name": "set audience to prime-web-api",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.value": "prime-web-api",
            "userinfo.token.claim": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "aud",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "identity_provider",
        "address",
        "role_list",
        "roles",
        "profile",
        "identity_assurance_level",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "44c3c252-0c4b-4ccd-9233-a53fd5deb7fa",
      "clientId": "prime-careconnect-access",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "c3c22e53-50ad-4845-8415-fdd6d2e32880",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "21e0c050-6f91-45b2-a49e-1edad8407449",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2617c0c7-3e98-46f4-9000-14a6f90724df",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "identity_provider",
        "address",
        "profile",
        "roles",
        "identity_assurance_level",
        "email"
      ],
      "optionalClientScopes": [
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "942b2364-2589-4ac5-a9a0-3a5aab165e6b",
      "clientId": "prime-document-manager",
      "description": "Service account used by the PRIME API to access the document manager",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "f38d32e9-91e6-4225-b15c-07fb6387f9f7",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7e737515-b2d4-4fd4-a3e1-f70205b08b36",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "418e2a30-4d42-4844-9fff-d5f2f41f60fc",
          "name": "set audience to prime-document-manager",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-hardcoded-claim-mapper",
          "consentRequired": false,
          "config": {
            "claim.value": "prime-document-manager",
            "userinfo.token.claim": "false",
            "id.token.claim": "false",
            "access.token.claim": "true",
            "claim.name": "aud",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fd25c3fc-6fa6-4371-875b-439cb0b9b8c0",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "0b79e39a-f8a7-4fe2-a1b7-105f70979cbb",
      "clientId": "prime-pos-gpid",
      "name": "Requesting System",
      "description": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "login_theme": "keycloak",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "consent.screen.text": "GPID",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "true",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "90ff99ec-42fc-4326-873f-93854c5eb2ff",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "26bbb2da-d42a-49d9-9ac8-3e959b4d90c1",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6797e234-6de8-4295-9880-4f5e09a1b81d",
          "name": "set audience to prime-web-api",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "true",
            "included.custom.audience": "prime-web-api",
            "userinfo.token.claim": "false"
          }
        },
        {
          "id": "fe00e8cb-632b-4d8b-a7ed-81d1bd3e96a3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "identity_provider",
        "identity_assurance_level"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "da0d649e-f7bb-4bc3-9bf5-f1d01ff51409",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "afa9fd25-be55-47fe-8ff1-c5d077ed040f",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/v4mbqqas/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/admin/v4mbqqas/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c01e0d0a-f900-435b-a5aa-5c927599f19d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "7abd34f5-d610-4d5b-87c4-231eac691cfa",
      "name": "identity_assurance_level",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "00b01604-7814-43ab-8917-b4436108c9d9",
          "name": "identity assurance level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "identityAssuranceLevel",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "identity_assurance_level",
            "jsonType.label": "int"
          }
        }
      ]
    },
    {
      "id": "514c28c7-000e-41ce-9e53-6a84d7d1eafd",
      "name": "identity_provider",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "1e668c15-cc39-4037-84ba-5d2fc225ff24",
          "name": "identity provider",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "identity_provider",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "identity_provider",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "3981b892-9215-4a81-9b9f-b51960751ab5",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "effe92c4-b9da-491c-b038-d27182b38bb7",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0ddc6109-732a-43b2-b613-b43df204ce4f",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6963f292-58b7-451f-8efb-0b38c5870849",
          "name": "given names",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "givenNames",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_names",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7e099b37-6105-4f1a-8be8-ee956a7c034d",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a6130edf-201f-4411-975a-c709b2e72e21",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "55b9bad8-1023-4422-aff5-b1208fee156f",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "602e82d1-9c26-4f3c-86f3-01d31762ef01",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "64f9e92d-2653-47ae-a0fa-6c7aae08c2a8",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b3861c2e-6610-49f6-a7c1-8aece6d234a5",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "98e516bf-8881-4e73-9aa6-9b0a0037fc8a",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08d128fb-af4e-4945-94dc-562bc69ad777",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "11c952c3-5c7c-4276-b260-928a46240d26",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e0e90884-b67a-4c28-b6af-2398e00592fb",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5d095184-3157-4674-aeb7-67dcb84a9eb7",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "98e29bad-c8e7-4573-a2c8-122b1f534883",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "98e8d959-a072-48bf-b336-3e5221621f04",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "4575e971-81a0-48a6-8b9b-a464d6c55486",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ad89a03-4a14-4070-9e79-1da78547f463",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "e61dc3d4-b4de-41bd-b556-9e2c991fdde2",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3eab17fd-9e64-4a36-8d03-f90d59958479",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postalCode",
            "userinfo.token.claim": "true",
            "user.attribute.street": "streetAddress",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "5c24c718-21bf-48ba-9bc2-9a35a413d73a",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "ff115e7a-3e8e-4dc2-a68c-aac6516ed0ca",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bf15dd47-a041-4243-89af-be31f09dfeaa",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "35bf3b49-2244-4795-924c-0578684b1c11",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "c958aaf3-60c5-4830-9a43-d1640c748093",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9b9da747-1aa7-4987-a32e-8ee8e5b770dc",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "5e7f1df7-decb-42cc-b54a-bc23f7684321",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6f93564f-cc21-453b-81f9-890e95dde682",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "ac96cb79-b594-4c14-af26-81c3c8f04e82",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "4b3afa43-b889-45d1-8a2e-077ad81c6e87",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "1eebf7ac-bdc5-4e4e-9a65-92f603ae3c22",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "bdbb4bfe-a95e-48ce-94d6-df2da47a7727",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "dd274ea5-e6dd-4a0c-bbfd-ef3c651acb24",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "c981d04a-820e-4adb-a47d-ba2ba5e7f9ed",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8da85500-344e-446d-a874-d91b317a8a24",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "profile",
    "email",
    "roles",
    "web-origins",
    "identity_assurance_level",
    "identity_provider",
    "address"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "xXSSProtection": "1; mode=block",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "LOGOUT",
    "REGISTER",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [
    {
      "alias": "idir",
      "displayName": "IDIR",
      "internalId": "41b0cbba-42ec-47da-af31-9153c52d12d1",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://oidc.gov.bc.ca/auth/realms/idir/protocol/openid-connect/userinfo",
        "validateSignature": "true",
        "tokenUrl": "https://oidc.gov.bc.ca/auth/realms/idir/protocol/openid-connect/token",
        "clientId": "https://oidc.gov.bc.ca/auth/realms/v4mbqqas",
        "jwksUrl": "https://oidc.gov.bc.ca/auth/realms/idir/protocol/openid-connect/certs",
        "authorizationUrl": "https://oidc.gov.bc.ca/auth/realms/idir/protocol/openid-connect/auth",
        "logoutUrl": "https://oidc.gov.bc.ca/auth/realms/idir/protocol/openid-connect/logout",
        "clientSecret": "**********",
        "backchannelSupported": "true",
        "issuer": "https://oidc.gov.bc.ca/auth/realms/idir",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "bceid",
      "displayName": "BCeID",
      "internalId": "45b86be8-c379-4172-98d5-5386f844a0aa",
      "providerId": "keycloak-oidc",
      "enabled": false,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://oidc.gov.bc.ca/auth/realms/_bceid/protocol/openid-connect/userinfo",
        "validateSignature": "true",
        "clientId": "https://oidc.gov.bc.ca/auth/realms/v4mbqqas",
        "tokenUrl": "https://oidc.gov.bc.ca/auth/realms/_bceid/protocol/openid-connect/token",
        "jwksUrl": "https://oidc.gov.bc.ca/auth/realms/_bceid/protocol/openid-connect/certs",
        "authorizationUrl": "https://oidc.gov.bc.ca/auth/realms/_bceid/protocol/openid-connect/auth",
        "logoutUrl": "https://oidc.gov.bc.ca/auth/realms/_bceid/protocol/openid-connect/logout",
        "clientSecret": "**********",
        "backchannelSupported": "true",
        "issuer": "https://oidc.gov.bc.ca/auth/realms/_bceid",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "bcsc",
      "displayName": "BC Services Card",
      "internalId": "20df2265-7157-4d5b-bdff-0f3a897dfd7b",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "",
        "userInfoUrl": "https://id.gov.bc.ca/oauth2/userinfo",
        "validateSignature": "true",
        "clientId": "urn.ca.bc.gov.health.prime.prod",
        "tokenUrl": "https://id.gov.bc.ca/oauth2/token",
        "uiLocales": "",
        "jwksUrl": "https://id.gov.bc.ca/oauth2/jwk.json",
        "backchannelSupported": "false",
        "issuer": "https://id.gov.bc.ca/oauth2/",
        "useJwksUrl": "true",
        "loginHint": "",
        "authorizationUrl": "https://id.gov.bc.ca/login/oidc/authorize",
        "disableUserInfo": "",
        "logoutUrl": "",
        "clientSecret": "**********",
        "defaultScope": "openid profile address"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "29f62d7f-bc27-4661-b00f-7f4e6ecafa06",
      "name": "username",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${CLAIM.preferred_username}@${ALIAS}"
      }
    },
    {
      "id": "0670716f-4b58-42c6-afa0-0f8a3366d0ad",
      "name": "lastName",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "family_name",
        "user.attribute": "lastName"
      }
    },
    {
      "id": "15db9bba-bfe4-4e94-8042-ef449e5a6d5d",
      "name": "displayName",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "displayName",
        "user.attribute": "displayName"
      }
    },
    {
      "id": "3bfb8d00-3bd5-481e-b099-d74d8200c53c",
      "name": "firstName",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "firstName",
        "user.attribute": "firstName"
      }
    },
    {
      "id": "4f85ffae-2a81-4eed-9368-4ca3308b01e1",
      "name": "postalCode",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "address.postal_code",
        "user.attribute": "postalCode",
        "role": "postalCode"
      }
    },
    {
      "id": "4a23b5ac-c4e8-4647-a5cd-d12565c30d08",
      "name": "displayName",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "displayName",
        "user.attribute": "displayName"
      }
    },
    {
      "id": "c8fe444e-c02a-434b-be4a-edad4b113413",
      "name": "email",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "email",
        "user.attribute": "email"
      }
    },
    {
      "id": "9f50ee3d-cf94-4ef5-a653-736322cad438",
      "name": "country",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "address.country",
        "user.attribute": "country"
      }
    },
    {
      "id": "ec33e077-e13f-4746-97a7-6c05a95a318d",
      "name": "region",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "address.region",
        "user.attribute": "region"
      }
    },
    {
      "id": "7b324441-23fe-4036-8552-c3ea5fcac711",
      "name": "givenNames",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "given_names",
        "user.attribute": "givenNames"
      }
    },
    {
      "id": "0c0bb089-2801-45b8-88b0-5f0752222f72",
      "name": "username",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${CLAIM.sub}"
      }
    },
    {
      "id": "dc6cc0dd-c0b0-4c91-a1b9-36ddd01c183f",
      "name": "identityAssuranceLevel",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "identity_assurance_level",
        "user.attribute": "identityAssuranceLevel"
      }
    },
    {
      "id": "fb986dde-07ab-4e95-b43f-cfaea9090e6f",
      "name": "idir_userid",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "idir_userid",
        "user.attribute": "idir_userid"
      }
    },
    {
      "id": "c3581b73-2ebb-4460-8677-9b3e4af66382",
      "name": "firstName",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "given_name",
        "user.attribute": "firstName"
      }
    },
    {
      "id": "c9d5ef3b-b533-4e9c-975c-d29d85a6fc20",
      "name": "lastName",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "lastName",
        "user.attribute": "lastName"
      }
    },
    {
      "id": "8548e081-a063-4442-94aa-1e6c262408b9",
      "name": "displayName",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "user.attribute": "displayName",
        "claim": "display_name",
        "claim.value": "display_name"
      }
    },
    {
      "id": "bb7b2fdd-ce7e-46d4-953a-d452f92ba66d",
      "name": "username",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${CLAIM.preferred_username}@${ALIAS}"
      }
    },
    {
      "id": "14ae0f86-919d-432d-b1ef-799da8d9f314",
      "name": "email",
      "identityProviderAlias": "bceid",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "email",
        "user.attribute": "email"
      }
    },
    {
      "id": "87f851fc-ebf7-47d0-a56b-85cf46523a93",
      "name": "streetAddress",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "address.street_address",
        "user.attribute": "streetAddress"
      }
    },
    {
      "id": "c822f3b5-c11a-481e-90a2-b603a6babbb4",
      "name": "birthdate",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "birthdate",
        "user.attribute": "birthdate"
      }
    },
    {
      "id": "b74775c2-dd68-4b1b-aa3f-b1f56bec279a",
      "name": "idir_guid",
      "identityProviderAlias": "idir",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "idir_userid",
        "user.attribute": "idir_user_guid"
      }
    },
    {
      "id": "c6dfc478-1152-433f-941f-ea2037116b3f",
      "name": "locality",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "claim": "address.locality",
        "user.attribute": "locality"
      }
    },
    {
      "id": "bac13a19-a4fa-4cd2-abaa-4784a08744a2",
      "name": "prime_user role",
      "identityProviderAlias": "bcsc",
      "identityProviderMapper": "oidc-hardcoded-role-idp-mapper",
      "config": {
        "role": "prime_user"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "1e1259b0-0805-4d4a-be5f-2b92b36af57e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "cdc684f1-517b-49b7-ac7d-1a053bca724c",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "475af3f4-5ee2-412d-a768-dd0dac3b16f9",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "d1448c7b-69af-481f-b800-ea6aaad218b3",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "721b58f9-19dc-4dec-9a29-87b92b67490c",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "03052ad0-64d5-443d-b592-8a76f8ba9b3b",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "2f28dcd9-6e87-4a4a-9e64-84b9faac62a6",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "1d0468de-e19f-4bfc-8265-56e5b263ead9",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "c3f4cc1e-c842-46a1-9b92-5e43e3d902f4",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "9e43e458-a67e-4397-a688-89f4f2e50a7f",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "8bf8293e-c7ad-4d5e-9399-80ded58e2cfd",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "02b02997-3388-4771-9d18-0a5b866ddfed",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Handle Existing Account - Alternatives - 0",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d026f552-1305-4c95-b368-4c75a44feb09",
      "alias": "Handle Existing Account - Alternatives - 0",
      "description": "Subflow of Handle Existing Account with alternative executions",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "b197d984-3802-41be-a737-af429c64e300",
      "alias": "Post-IDP-Login",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 0,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "abff2ed5-538a-4852-bcac-8ea338f32c8a",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "e383fe7f-0441-47f9-bf53-4a89add83685",
      "alias": "Verify Existing Account by Re-authentication - auth-otp-form - Conditional",
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "fb807615-0668-4db1-8da6-0a8f413025fa",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "8fe0a222-ab3d-4bda-8917-686f0cddf922",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a7b1e809-cdf4-437d-bfbd-0c0f975cb18f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "direct grant - direct-grant-validate-otp - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "ed7ce037-c6b9-49ee-8992-58df3bbdb11f",
      "alias": "direct grant - direct-grant-validate-otp - Conditional",
      "description": "Flow to determine if the direct-grant-validate-otp authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "fee53f74-0d7f-4f5e-a505-dd448d785807",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "b763c4ee-7a79-4d82-ae89-1ff43d482975",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "DISABLED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "739eeb5b-95f0-4690-af66-eb5b3dc3735f",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "forms - auth-otp-form - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5da936c8-bf91-44f8-96c6-d1a3c7ce98ae",
      "alias": "forms - auth-otp-form - Conditional",
      "description": "Flow to determine if the auth-otp-form authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "7f8ec280-15dc-429a-9876-3251dd7464bc",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "9e323a22-fdec-4881-b923-de0aa43c2ab5",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "cccbb081-c3a1-4954-bcb1-54b1997a8f82",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "9006b967-a791-4687-b0c4-c9ef76d4d752",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "reset credentials - reset-otp - Conditional",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5185a798-8d9a-49f5-9597-1d4a8d9e15c9",
      "alias": "reset credentials - reset-otp - Conditional",
      "description": "Flow to determine if the reset-otp authenticator should be used or not.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "f1d44cb0-9a13-45d2-9d87-6dca95ac09ea",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "b016bb45-ccea-4fec-9248-8e9718cbf86d",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "3c4a2ee8-2fa0-4911-821e-3e2786969bf9",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {},
  "keycloakVersion": "7.4.2.GA",
  "userManagedAccessAllowed": false
}