FROM image-registry.openshift-image-registry.svc:5000/9c33a9-tools/jenkins-slave-base-centos7
#FROM openshift/jenkins-slave-base-centos7
SHELL ["/bin/bash", "-c"]
COPY . /var/lib/origin 
USER 0

ENV JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.191.b12-1.el7_6.x86_64/jre/bin
ENV PATH $PATH:$JAVA_HOME:/var/lib/jenkins/tools/hudson.plugins.sonar.SonarRunnerInstallation/SonarQubeScanner/bin:/opt/sonar/bin
#COMMON
RUN echo "Installing common, Jenkins and Sonar Scanner prerequisites..." && \
    echo 'kernel.unprivileged_userns_clone=1' > /etc/sysctl.d/userns.conf && \
    yum install -y java-1.8.0-openjdk-1.8.0.232 envsubst git find which && \
    wget -O /etc/yum.repos.d/sonar.repo http://downloads.sourceforge.net/project/sonar-pkg/rpm/sonar.repo && \
    yum install -y sonar && \
    wget https://jenkins-moh-prime.apps.silver.devops.gov.bc.ca/jnlpJars/agent.jar && \
    useradd default && \
    chmod +x *.bash && \
    chown -R default:0 /home/default && \
    chmod -R a+rwx /home/default && \
    chown -R default:0 /var/lib/origin && \
    chmod -R a+rwx /var/lib/origin && \
    chmod 777 /etc/passwd

# Headless Chrome
RUN wget https://chromedriver.storage.googleapis.com/2.9/chromedriver_linux64.zip && \
    unzip chromedriver_linux64.zip && \
    yum install -y https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm Xvfb maven

# Node
RUN echo "Installing Node..." && \
    yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
    echo 'kernel.unprivileged_userns_clone=1' > /etc/sysctl.d/userns.conf && \
    curl -sL https://rpm.nodesource.com/setup_12.x | bash - && \
    yum install -y gcc-c++ \
        chromium \
        make \
        yarn \ 
        sonar-scanner \ 
        nodejs \
        glib2 && \ 
    export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 && \
    npm install -g --silent @angular/cli \
        @angular/core \ 
        @angular-devkit/build-angular \
        @angular/compiler \ 
        @angular/compiler-cli \ 
        typescript \ 
        puppeteer \ 
        jasmine \ 
        karma \ 
        karma-chrome-launcher \ 
        karma-mocha \ 
        karma-chai \ 
        karma-jasmine \
        karma-jasmine-html-reporter \
        karma-coverage-istanbul-reporter && \
    setcap cap_dac_override=ep /usr/lib/node_modules/npm/bin/npm && \
    setcap cap_dac_override=ep /usr/bin/node

#.NET 2.2
ENV ASPNETCORE_ENVIRONMENT Development
ENV PATH=$PATH:/home/default/.dotnet/tools
RUN echo "Installing .NET, coverlet, scanner..." && \
    rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm && \
    yum install -y dotnet-sdk-2.2 && \
    dotnet tool install --global coverlet.console && \
    dotnet tool install --global dotnet-sonarscanner --version 4.7.1 && \
    mkdir -p /.dotnet && \
    chown -R default:0 /.dotnet && \
    chmod -R a+rwx /.dotnet && \
    mkdir -p /.local && \
    chown -R default:0 /.local && \
    chmod -R a+rwx /.local && \
    mkdir -p /.nuget && \
    chown -R default:0 /.nuget && \
    chmod -R a+rwx /.nuget && \
    mkdir -p /tmp/NuGetScratch/ && \
    mkdir -p /tmp/NuGetScratch/lock && \
    chown -R default:0 /tmp/NuGetScratch/ && \
    chmod -R a+rwx /tmp/NuGetScratch/ && \
    chmod -R 777 /tmp/NuGetScratch/ 

# All files in Jenkins home need to be writable 
RUN chown -R default:0 /home/jenkins && \
    chmod -R a+rwx /home/jenkins && \
    chown -R default:0 /var/lib/origin && \
    chmod -R a+rwx /var/lib/origin

USER 1000
ENTRYPOINT [ "./entrypoint.bash" ]
